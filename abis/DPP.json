{
  "contractName": "DPP",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "DODOFlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DODOSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLpFeeRate",
          "type": "uint256"
        }
      ],
      "name": "LpFeeRateChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferPrepared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        }
      ],
      "name": "RChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_BASE_RESERVE_",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BASE_TARGET_",
      "outputs": [
        {
          "internalType": "uint120",
          "name": "",
          "type": "uint120"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BASE_TOKEN_",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_I_",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_K_",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_LP_FEE_RATE_",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAINTAINER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MT_FEE_RATE_MODEL_",
      "outputs": [
        {
          "internalType": "contract IFeeRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_NEW_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_RESERVE_",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_TARGET_",
      "outputs": [
        {
          "internalType": "uint120",
          "name": "",
          "type": "uint120"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_TOKEN_",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_RState_",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMidPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "midPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPMMState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "K",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Q",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Q0",
              "type": "uint256"
            },
            {
              "internalType": "enum PMMPricing.RState",
              "name": "R",
              "type": "uint8"
            }
          ],
          "internalType": "struct PMMPricing.PMMState",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPMMStateForCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "K",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Q",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Q0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "R",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getQuoteInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFeeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteReserve",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payBaseAmount",
          "type": "uint256"
        }
      ],
      "name": "querySellBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveQuoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFee",
          "type": "uint256"
        },
        {
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newBaseTarget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payQuoteAmount",
          "type": "uint256"
        }
      ],
      "name": "querySellQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveBaseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFee",
          "type": "uint256"
        },
        {
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newQuoteTarget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioSync",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newI",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newK",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBaseReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minQuoteReserve",
          "type": "uint256"
        }
      ],
      "name": "reset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "retrieve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sellBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveQuoteAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sellQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveBaseAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "maintainer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "mtFeeRateModel",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"DODOFlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"DODOSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLpFeeRate\",\"type\":\"uint256\"}],\"name\":\"LpFeeRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"}],\"name\":\"RChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_BASE_RESERVE_\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BASE_TARGET_\",\"outputs\":[{\"internalType\":\"uint120\",\"name\":\"\",\"type\":\"uint120\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BASE_TOKEN_\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_K_\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_LP_FEE_RATE_\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAINTAINER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MT_FEE_RATE_MODEL_\",\"outputs\":[{\"internalType\":\"contract IFeeRateModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_RESERVE_\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_TARGET_\",\"outputs\":[{\"internalType\":\"uint120\",\"name\":\"\",\"type\":\"uint120\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_TOKEN_\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_RState_\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMidPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"midPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPMMState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"K\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q0\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"R\",\"type\":\"uint8\"}],\"internalType\":\"struct PMMPricing.PMMState\",\"name\":\"state\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPMMStateForCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"K\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"R\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuoteInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFeeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteReserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maintainer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mtFeeRateModel\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payBaseAmount\",\"type\":\"uint256\"}],\"name\":\"querySellBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveQuoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFee\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newBaseTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payQuoteAmount\",\"type\":\"uint256\"}],\"name\":\"querySellQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFee\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newQuoteTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioSync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newK\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBaseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minQuoteReserve\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sellBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveQuoteAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sellQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveBaseAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DODO Breeder\",\"methods\":{},\"title\":\"DODO PrivatePool\"},\"userdoc\":{\"methods\":{},\"notice\":\"DODOPrivatePool initialization\"}},\"settings\":{\"compilationTarget\":{\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol\":\"DPP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol\":{\"keccak256\":\"0x1a2ed01a60a125d4faa0945f51972db5936a85809f99126f0ed52c3119768b99\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eaa9f12bdc143b353ae6ed4b0793b46bbe7a7751ed19d1178fac42d439fede94\",\"dweb:/ipfs/QmQM2GjYe94kBkTbZ8cEx7VEkhXrs52Xk5Qd9mmFZ4ZdZn\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPStorage.sol\":{\"keccak256\":\"0xecd53cfad11f34d23ab7a5437cd0734beb6217068171fdee1e3f6d97c801fd0f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e3e8e2d2b398954a0bf42f13b3bb3a06ca456dd2157aeaea2190143e849e7747\",\"dweb:/ipfs/QmfEdYYCRajLDhCqRnsMKQh8uPsYuT33NQoySt94APw917\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol\":{\"keccak256\":\"0xd7ea90868319337145009d88b65a4b1042526f403fb9e6d9bca1a724cd4a7c37\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f7443cd6aa36894de25283e8eb1b39fb250ac69e3fbd85fd4b232e2edd0bf93\",\"dweb:/ipfs/QmR7QFauGwRiJQZLYnZEbfwyUYhLWYvFcSo3nzimZV6Tp2\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPVault.sol\":{\"keccak256\":\"0xefce6bc6d18c9731aecd88b71f7d4254bebaf22166e9c5f5995ba28669555296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d00f5da96cc5c4a033f2a278fbe691d02921a3de5dcf8bb3dfba4ed7294a4b2\",\"dweb:/ipfs/QmTix2nu5y2vfuzgtDDPjXSpEcqmSLdYNPsH4o7ip9PBhg\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IDODOCallee.sol\":{\"keccak256\":\"0xb5f3ca3e14dcd6fe6f4c961e79a34fd1abe3c3f300c78d23e87b893f572f705a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://89d1c1e165c6325eac56c88ee740a6df64d6447f664b7e82f70233caa26cb94e\",\"dweb:/ipfs/QmRorY6iSDNbSMJBoTqB4iRWz3eQzqLpfGhWCV6JLzNmLH\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol\":{\"keccak256\":\"0x7e5322a79dd4c5662c4a8dc796055ad3e26bc0308e3d6b0eaaad997ce8168c71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://786012a026df43cbe6d1d5833e22e11776173ec3baff48da0f2e4ee53a08b71e\",\"dweb:/ipfs/QmZUzPADDqc2U2RZqFxaikKgdVZYHVNYaJH6YQ2KQ9P9yL\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/DODOMath.sol\":{\"keccak256\":\"0x7379d696c9fb0b691a726a779f20516306057d8a8ef0f379ec9b182ab6f931b2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f6416a55f38c404e6b79e624e2a6b4772b284e4a2d4dddc5941f1747fe0c2ae2\",\"dweb:/ipfs/QmTxzcfQa3Qxgzweqpq8WCGLXWnTh3PZGaAedq393XodLu\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/DecimalMath.sol\":{\"keccak256\":\"0xc40282060987cb9744c910e046473e872921b5736b3f6af7655e191d82b08f81\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://571a42bf7544a1410cd0b50bc7bf7e4bf68fad804877dbe0b9389dd3ca10c579\",\"dweb:/ipfs/QmUoFzJ852KZ7Npaw29C4xxGFGgeCjCVAiR373y2XL2cmz\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol\":{\"keccak256\":\"0x3143af214897a7aa048d6b30d450492c682c8cdc303bed0b11c5db36447facfa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c3b6a7363081d6677876972b61c96fc998d5cd12570cc7e086fb450e68c770e\",\"dweb:/ipfs/Qmb4VMJGEKVe5cuz1qrPGJYuKcmTzfUZLD1UqAUtBXgsDr\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/InitializableOwnable.sol\":{\"keccak256\":\"0x386eea470a3d5b4210e4ac231270810acdaec4bc4bd3358b9e3393b77cbbd0ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f9e4d1ace9ebeeb9cfcae44a57b70cbbea66fb628456fc12d77c256772f1519\",\"dweb:/ipfs/QmaZ28mKecv6G8z89WoB8RqjiL2KGWHKUBNxAj72cPRA26\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/Ownable.sol\":{\"keccak256\":\"0x792d3ab673a35d363be011dbd534a25a96430251863706ccc9047cd01bf1006c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://df8a9e58e295c0c263f15e2b0170ab2756854e08217fdd4679d5a3fc79e82604\",\"dweb:/ipfs/QmRdnXmG1YCty2m4SEeL52ujYtQm9JHQGD1R3A5fHLMFsB\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/PMMPricing.sol\":{\"keccak256\":\"0x2c5d28f4ae3c02bb8b77a5258f29115982b2076147d646ccfd8150ef54805883\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef20177b7ed874339cb49a26c1971b085e5a5ffa5c5b3cdb8e2efa1b3306df1a\",\"dweb:/ipfs/QmYxikoxigt7BALbCpNLrifMdXdiBMDh87zpHigXJ8rcm5\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/ReentrancyGuard.sol\":{\"keccak256\":\"0xc9c3fc946350fd72083a9d5b1327ff923533ef37b054bc7b6007562b20b0faaf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc140417457139fb240427629673bfaf970c5d4568ad1cfe582764c6e4855bbb\",\"dweb:/ipfs/Qmd7ESYe5kyM6NYiSzeFE74f1YGGPXzpdVd5qnYg2AvgH8\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/SafeERC20.sol\":{\"keccak256\":\"0xe11bb64537b764f7b0b64f817ffa0b4b278c2017474ff985428225b3f0928295\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c756ca959d2326d58ed49b8a2d39100866197596ba09240e4f1bf861399a6e96\",\"dweb:/ipfs/QmdgzWZNT614vRnb5zsDva91bkLpvZmCVV5d6xetqsyedR\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x57d750628881687f826b54f60cbfd46c1a172433eed892bbb123f91869886af1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b40bd7946010ddae9679f36630510217dcaa9cb8643824f9edc8ef52bda95717\",\"dweb:/ipfs/QmZSjpfUGyrmokZyaMc74a8h6zy2qFVECPVP8VfTvzNEFb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613705806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638ff3928c1161011a578063d4b97046116100ad578063ee27c6891161007c578063ee27c689146103ff578063f2fde38b14610407578063f6b06e701461041a578063f811d69214610422578063fd1ed7e91461042a57610206565b8063d4b97046146103d4578063dd93f59a146103dc578063e539ef49146103ef578063ec2fd46d146103f757610206565b8063bd6015b4116100e9578063bd6015b414610391578063bf357dae146103a4578063c57a5d03146103b9578063d0a494e4146103c157610206565b80638ff3928c1461033f578063a382d1b91461035f578063ab44a7a314610374578063bbf5ce781461038957610206565b80634e71e0c81161019d57806371f9100c1161016c57806371f9100c146102f257806377f58657146102fa57806379a048761461030f5780637d721504146103225780638456db151461033757610206565b80634e71e0c81461029d57806354fd4d50146102a557806365f6fcbb146102ba57806366410a21146102cf57610206565b806336223ce9116101d957806336223ce9146102645780634322ec831461027a57806344096609146102825780634a248d2a1461029557610206565b80630d0092971461020b57806316048bc41461022057806328c4e24c1461023e5780633044ace414610251575b600080fd5b61021e610219366004612e7f565b610445565b005b6102286104ae565b60405161023591906130ce565b60405180910390f35b61021e61024c366004612f20565b6104bd565b61021e61025f366004612e9a565b61059a565b61026c610720565b6040516102359291906135c8565b61022861073b565b61026c610290366004612e7f565b61074a565b6102286107e6565b61021e6107f5565b6102ad610883565b60405161023591906131c8565b6102c26108a7565b60405161023591906135bf565b6102e26102dd366004612f60565b61094e565b60405161023594939291906135d6565b6102c2610a4a565b610302610a93565b6040516102359190613588565b6102e261031d366004612f60565b610aa9565b61032a610b98565b604051610235919061359c565b610228610ba7565b61035261034d366004612f8a565b610bb6565b60405161023591906131aa565b610367610dc7565b604051610235919061352f565b61037c610e6e565b604051610235919061362f565b61032a610e85565b6102c261039f366004612e7f565b610e9b565b6103ac611156565b60405161023591906135b0565b61021e611167565b61021e6103cf36600461301f565b61143e565b610228611a2e565b6102c26103ea366004612e7f565b611a3d565b610302611ce3565b61037c611cf2565b6102c2611d02565b61021e610415366004612e7f565b611d14565b610228611d99565b61032a611da8565b610432611dbe565b60405161023597969594939291906135ff565b600154600160a01b900460ff16156104785760405162461bcd60e51b815260040161046f90613377565b60405180910390fd5b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6000546001600160a01b031681565b600154600160a81b900460ff16156104e75760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146105265760405162461bcd60e51b815260040161046f90613459565b6003546001600160a01b0383811691161480159061055257506004546001600160a01b03838116911614155b61056e5760405162461bcd60e51b815260040161046f906134e9565b6105886001600160a01b038316848363ffffffff611e2116565b50506001805460ff60a81b1916905550565b6105a388610445565b846001600160a01b0316866001600160a01b031614156105d55760405162461bcd60e51b815260040161046f906132c0565b600380546001600160a01b038089166001600160a01b03199283161790925560048054888416908316179055600280548a84169083161790556007805492861692909116919091179055670de0b6b3a76400008411156106475760405162461bcd60e51b815260040161046f90613400565b670de0b6b3a764000082111561066f5760405162461bcd60e51b815260040161046f906133d8565b60008111801561068e57506ec097ce7bc90715b34b9f10000000008111155b6106aa5760405162461bcd60e51b815260040161046f90613275565b6007805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff87811691909102919091179091556008805467ffffffffffffffff191691841691909117600160401b600160c01b031916600160401b6001600160801b03841602179055610716611e7c565b5050505050505050565b6005546001600160801b0380821692600160801b9092041690565b6002546001600160a01b031681565b600754604051638198edbf60e01b815267ffffffffffffffff600160a01b830416916000916001600160a01b0390911690638198edbf9061078f9086906004016130ce565b60206040518083038186803b1580156107a757600080fd5b505afa1580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107df9190613007565b9050915091565b6003546001600160a01b031681565b6001546001600160a01b0316331461081f5760405162461bcd60e51b815260040161046f90613226565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b604080518082019091526009815268044505020312e302e360bc1b60208201525b90565b6005546003546040516370a0823160e01b8152600092610949926001600160801b03909116916001600160a01b03909116906370a08231906108ed9030906004016130ce565b60206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190613007565b9063ffffffff61203116565b905090565b60008060008061095c612e21565b610964610dc7565b9050610970818761205e565b600754604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf906109b9908c906004016130ce565b60206040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190613007565b9050610a158782612164565b9550610a358661093d610a288a86612164565b8a9063ffffffff61203116565b96508260a00151935050505092959194509250565b600554600480546040516370a0823160e01b815260009361094993600160801b9091046001600160801b0316926001600160a01b0316916370a08231916108ed913091016130ce565b600654600160781b90046001600160781b031681565b600080600080610ab7612e21565b610abf610dc7565b9050610acb818761218e565b600754604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610b14908c906004016130ce565b60206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b649190613007565b9050610b708782612164565b9550610b838661093d610a288a86612164565b96508260800151935050505092959194509250565b6005546001600160801b031681565b6001546001600160a01b031681565b600154600090600160a81b900460ff1615610be35760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b0390911614610c225760405162461bcd60e51b815260040161046f90613459565b6005546001600160801b03168311801590610c4f5750600554600160801b90046001600160801b03168211155b610c6b5760405162461bcd60e51b815260040161046f906133a1565b670de0b6b3a7640000881115610c935760405162461bcd60e51b815260040161046f90613400565b670de0b6b3a7640000861115610cbb5760405162461bcd60e51b815260040161046f906133d8565b600087118015610cda57506ec097ce7bc90715b34b9f10000000008711155b610cf65760405162461bcd60e51b815260040161046f90613275565b6007805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8b811691909102919091179091556008805467ffffffffffffffff191691881691909117600160401b600160c01b031916600160401b6001600160801b038a1602179055610d64898661228f565b610d6e89856122b6565b610d76611e7c565b7f9950d5a2f2c7264863d40100bf993f0cdbc4711806caba6284d07e80fd50087988604051610da591906135bf565b60405180910390a150506001805460ff60a81b19168155979650505050505050565b610dcf612e21565b6008546001600160801b03600160401b82048116835267ffffffffffffffff90911660208301526005548082166040840152600160801b90041660608201526006546001600160781b038082166080840152600160781b82041660a083015261ffff600160f01b909104166002811115610e4557fe5b8160c001906002811115610e5557fe5b90816002811115610e6257fe5b9052506108a4816122d9565b600754600160a01b900467ffffffffffffffff1681565b600554600160801b90046001600160801b031681565b600154600090600160a81b900460ff1615610ec85760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b1790556003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610f0c9030906004016130ce565b60206040518083038186803b158015610f2457600080fd5b505afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190613007565b600554909150600090610f7f9083906001600160801b031663ffffffff61203116565b90506000806000610f903285610aa9565b9298509094509092509050610fa587876122b6565b600254610fbb906001600160a01b0316846122b6565b600480546040516370a0823160e01b81526110439288926001600160a01b0316916370a0823191610fee913091016130ce565b60206040518083038186803b15801561100657600080fd5b505afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e9190613007565b612383565b80600281111561104f57fe5b600654600160f01b900461ffff9081169116146110fd5780600281111561107257fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038211156110bb5760405162461bcd60e51b815260040161046f90613437565b600680546001600160781b0319166001600160781b038416179055604051600080516020613690833981519152906110f49083906131b5565b60405180910390a15b6003546004546040516000805160206136b083398151915292611136926001600160a01b039182169291169088908b9033908e90613157565b60405180910390a150506001805460ff60a81b1916905550919392505050565b600654600160f01b900461ffff1681565b600154600160a81b900460ff16156111915760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146111d05760405162461bcd60e51b815260040161046f90613459565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906112019030906004016130ce565b60206040518083038186803b15801561121957600080fd5b505afa15801561122d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112519190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611286913091016130ce565b60206040518083038186803b15801561129e57600080fd5b505afa1580156112b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d69190613007565b90506001600160781b0382118015906112f657506001600160781b038111155b6113125760405162461bcd60e51b815260040161046f90613437565b6005546001600160801b031682146113995760055460065461135d916001600160801b031690611351906001600160781b03168563ffffffff6123ed16565b9063ffffffff61242e16565b600680546001600160781b0319166001600160781b0392909216919091179055600580546001600160801b0319166001600160801b0384161790555b600554600160801b90046001600160801b0316811461142d576005546006546113e791600160801b90046001600160801b03169061135190600160781b90046001600160781b0316846123ed565b600680546001600160781b0392909216600160781b02600160781b600160f01b0319909216919091179055600580546001600160801b03808416600160801b0291161790555b50506001805460ff60a81b19169055565b600154600160a81b900460ff16156114685760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055611485838661228f565b61148f83856122b6565b80156114fc57604051637ed1f1dd60e01b81526001600160a01b03841690637ed1f1dd906114c9903390899089908890889060040161310b565b600060405180830381600087803b1580156114e357600080fd5b505af11580156114f7573d6000803e3d6000fd5b505050505b6003546040516370a0823160e01b81526000916001600160a01b0316906370a082319061152d9030906004016130ce565b60206040518083038186803b15801561154557600080fd5b505afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d9190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a08231916115b2913091016130ce565b60206040518083038186803b1580156115ca57600080fd5b505afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190613007565b6005549091506001600160801b0316821015806116315750600554600160801b90046001600160801b03168110155b61164d5760405162461bcd60e51b815260040161046f906131fb565b6005546001600160801b031682101561181157600554600090611681908390600160801b90046001600160801b0316612031565b9050600080600080611693328661094e565b6005549397509195509350915084906116bb906001600160801b03168963ffffffff61203116565b11156116d95760405162461bcd60e51b815260040161046f906131fb565b6002546116ef906001600160a01b03168461228f565b8160028111156116fb57fe5b600654600160f01b900461ffff9081169116146117b25781600281111561171e57fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038111156117675760405162461bcd60e51b815260040161046f90613437565b60068054600160781b600160f01b031916600160781b6001600160781b03841602179055604051600080516020613690833981519152906117a99084906131b5565b60405180910390a15b6000805160206136b0833981519152600460009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168787338f60405161180396959493929190613157565b60405180910390a150505050505b600554600160801b90046001600160801b03168110156119d35760055460009061184b9084906001600160801b031663ffffffff61203116565b905060008060008061185d3286610aa9565b60055493975091955093509150849061188690600160801b90046001600160801b031688612031565b11156118a45760405162461bcd60e51b815260040161046f906131fb565b6002546118ba906001600160a01b0316846122b6565b8160028111156118c657fe5b600654600160f01b900461ffff908116911614611974578160028111156118e957fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038111156119325760405162461bcd60e51b815260040161046f90613437565b600680546001600160781b0319166001600160781b0383161790556040516000805160206136908339815191529061196b9084906131b5565b60405180910390a15b6000805160206136b0833981519152600360009054906101000a90046001600160a01b0316600460009054906101000a90046001600160a01b03168787338f6040516119c596959493929190613157565b60405180910390a150505050505b6119db612458565b7f0b82e93068db15abd9fbb2682c65462ea8a0a10582dce93a5664818e296f54eb33868989604051611a1094939291906130e2565b60405180910390a150506001805460ff60a81b191690555050505050565b6004546001600160a01b031681565b600154600090600160a81b900460ff1615611a6a5760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191611aaf913091016130ce565b60206040518083038186803b158015611ac757600080fd5b505afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190613007565b600554909150600090611b23908390600160801b90046001600160801b0316612031565b90506000806000611b34328561094e565b9298509094509092509050611b49878761228f565b600254611b5f906001600160a01b03168461228f565b6003546040516370a0823160e01b8152611be7916001600160a01b0316906370a0823190611b919030906004016130ce565b60206040518083038186803b158015611ba957600080fd5b505afa158015611bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be19190613007565b86612383565b806002811115611bf357fe5b600654600160f01b900461ffff908116911614611caa57806002811115611c1657fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b03821115611c5f5760405162461bcd60e51b815260040161046f90613437565b60068054600160781b600160f01b031916600160781b6001600160781b0385160217905560405160008051602061369083398151915290611ca19083906131b5565b60405180910390a15b6004546003546040516000805160206136b083398151915292611136926001600160a01b039182169291169088908b9033908e90613157565b6006546001600160781b031681565b60085467ffffffffffffffff1681565b6000610949611d0f610dc7565b6125ff565b6000546001600160a01b03163314611d3e5760405162461bcd60e51b815260040161046f90613459565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031681565b600854600160401b90046001600160801b031681565b6000806000806000806000611dd1612e21565b611dd9610dc7565b905080600001519750806020015196508060400151955080606001519450806080015193508060a0015192508060c001516002811115611e1557fe5b91505090919293949596565b611e778363a9059cbb60e01b8484604051602401611e40929190613191565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526126f6565b505050565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611ead9030906004016130ce565b60206040518083038186803b158015611ec557600080fd5b505afa158015611ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efd9190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611f32913091016130ce565b60206040518083038186803b158015611f4a57600080fd5b505afa158015611f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f829190613007565b90506001600160781b038211801590611fa257506001600160781b038111155b611fbe5760405162461bcd60e51b815260040161046f90613437565b600580546001600160801b03838116600160801b028582166001600160801b03199093169290921716179055600680546001600160781b03928316600160781b02600160781b600160f01b0319939094166001600160781b03199091161791909116919091176001600160f01b03169055565b6000828211156120535760405162461bcd60e51b815260040161046f90613354565b508082035b92915050565b600080808460c00151600281111561207257fe5b141561208d5761208284846127b3565b91506001905061215d565b60018460c00151600281111561209f57fe5b14156120af5761208284846127da565b60006120cc85606001518660a0015161203190919063ffffffff16565b905060006120eb8660800151876040015161203190919063ffffffff16565b905081851015612116576120ff86866127f7565b93506002925080841115612111578093505b61215a565b8185141561212a578093506000925061215a565b61215361214687612141888663ffffffff61203116565b6127b3565b829063ffffffff61283216565b9350600192505b50505b9250929050565b6000670de0b6b3a764000061217f848463ffffffff6123ed16565b8161218657fe5b049392505050565b600080808460c0015160028111156121a257fe5b14156121bd576121b28484612857565b91506002905061215d565b60018460c0015160028111156121cf57fe5b141561227a5760006121f28560400151866080015161203190919063ffffffff16565b905060006122118660a00151876060015161203190919063ffffffff16565b90508185101561223c576122258686612876565b93506001925080841115612237578093505b612273565b818514156122505780935060009250612273565b61226c61214687612267888663ffffffff61203116565b612857565b9350600292505b505061215d565b61228484846128a8565b946002945092505050565b80156122b2576003546122b2906001600160a01b0316838363ffffffff611e2116565b5050565b80156122b2576004546122b2906001600160a01b0316838363ffffffff611e2116565b60028160c0015160028111156122eb57fe5b141561232a5761232081606001516123148360800151846040015161203190919063ffffffff16565b835160208501516128c7565b60a0820152612380565b60018160c00151600281111561233c57fe5b14156123805761237a81604001516123658360a00151846060015161203190919063ffffffff16565b8351612370906129ed565b84602001516128c7565b60808201525b50565b6001600160781b0382118015906123a157506001600160781b038111155b6123bd5760405162461bcd60e51b815260040161046f90613437565b600580546001600160801b03928316600160801b029383166001600160801b031990911617909116919091179055565b6000826123fc57506000612058565b8282028284828161240957fe5b04146124275760405162461bcd60e51b815260040161046f9061350c565b9392505050565b600080821161244f5760405162461bcd60e51b815260040161046f9061332c565b81838161218657fe5b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906124899030906004016130ce565b60206040518083038186803b1580156124a157600080fd5b505afa1580156124b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d99190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161250e913091016130ce565b60206040518083038186803b15801561252657600080fd5b505afa15801561253a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255e9190613007565b90506001600160781b03821180159061257e57506001600160781b038111155b61259a5760405162461bcd60e51b815260040161046f90613437565b6005546001600160801b031682146125c857600580546001600160801b0319166001600160801b0384161790555b600554600160801b90046001600160801b031681146122b257600580546001600160801b03808416600160801b0291161790555050565b600060028260c00151600281111561261357fe5b141561269e57606082015160a08301516000916126499161263f9190611351908063ffffffff6123ed16565b8460600151612a0e565b905061268661265c846020015183612164565b602085015161267a90670de0b6b3a76400009063ffffffff61203116565b9063ffffffff61283216565b9050612696836000015182612a0e565b9150506126f1565b604082015160808301516000916126ce916126c49190611351908063ffffffff6123ed16565b8460400151612a0e565b90506126e161265c846020015183612164565b9050612696836000015182612164565b919050565b60006060836001600160a01b03168360405161271291906130b2565b6000604051808303816000865af19150503d806000811461274f576040519150601f19603f3d011682016040523d82523d6000602084013e612754565b606091505b5091509150816127765760405162461bcd60e51b815260040161046f906132f7565b8051156127ad57808060200190518101906127919190612fe7565b6127ad5760405162461bcd60e51b815260040161046f9061349f565b50505050565b600061242783608001518460800151846127d087600001516129ed565b8760200151612a2c565b600061242783608001518460400151846127d087600001516129ed565b60006124278360a0015161281884866060015161283290919063ffffffff16565b60608601518651612828906129ed565b8760200151612cba565b6000828201838110156124275760405162461bcd60e51b815260040161046f9061347c565b60006124278360a001518460a001518486600001518760200151612a2c565b6000612427836080015161289784866040015161283290919063ffffffff16565b604086015186516020880151612cba565b60006124278360a0015184606001518486600001518760200151612a2c565b6000846128d6575060006129e5565b816128fc576128f56128e88486612164565b869063ffffffff61283216565b90506129e5565b600080612912600485028663ffffffff6123ed16565b90508061292957670de0b6b3a764000091506129a9565b85818783028161293557fe5b041415612970576129696129646ec097ce7bc90715b34b9f100000000061267a848a028b63ffffffff61242e16565b612d93565b91506129a9565b6129a66129646ec097ce7bc90715b34b9f100000000061267a8961299a868d63ffffffff61242e16565b9063ffffffff6123ed16565b91505b60006129d3670de0b6b3a764000061267a6129ca868363ffffffff61203116565b88600202612a0e565b90506129df8882612164565b93505050505b949350505050565b60006120586ec097ce7bc90715b34b9f10000000008363ffffffff61242e16565b60006124278261135185670de0b6b3a764000063ffffffff6123ed16565b6000808611612a4d5760405162461bcd60e51b815260040161046f9061324d565b83612a5a57506000612cb1565b81612a875784612a6a8486612164565b11612a7e57612a798385612164565b612a80565b845b9050612cb1565b670de0b6b3a7640000821415612b4757600080612aaa858763ffffffff6123ed16565b905080612aba5760009150612b13565b868188830281612ac657fe5b041415612af657612aef612ae0898063ffffffff6123ed16565b8289029063ffffffff61242e16565b9150612b13565b612b10886113518761299a83838c8e63ffffffff6123ed16565b91505b612b3e612b2e83670de0b6b3a764000063ffffffff61283216565b611351898563ffffffff6123ed16565b92505050612cb1565b6000612b74612b5c858763ffffffff6123ed16565b61267a8961299a8a611351898463ffffffff6123ed16565b90506000612b948761299a670de0b6b3a76400008763ffffffff61203116565b90506000828210612bba57612baf828463ffffffff61203116565b915060009050612bd1565b612bca838363ffffffff61203116565b9150600190505b612be982670de0b6b3a764000063ffffffff61242e16565b91506000612c20612c0d600461299a670de0b6b3a76400008a63ffffffff61203116565b612c1b8c61299a8a8f612164565b612164565b9050612c396129648261267a868063ffffffff6123ed16565b90506000612c5a600261299a670de0b6b3a76400008a63ffffffff61203116565b905060008315612c7b57612c74838663ffffffff61203116565b9050612c8e565b612c8b858463ffffffff61283216565b90505b612ca8612c9b8284612dca565b8c9063ffffffff61203116565b96505050505050505b95945050505050565b6000808611612cdb5760405162461bcd60e51b815260040161046f9061324d565b6000612cfd612cf0878763ffffffff61203116565b859063ffffffff6123ed16565b905082612d2457612d1c81670de0b6b3a764000063ffffffff61242e16565b915050612cb1565b6000612d43612d3d886113518b8063ffffffff6123ed16565b87612a0e565b90506000612d518583612164565b9050612d866ec097ce7bc90715b34b9f10000000006113518561299a8561267a670de0b6b3a76400008c63ffffffff61203116565b9998505050505050505050565b80600160028204015b81811015612dc457809150600281828581612db357fe5b040181612dbc57fe5b049050612d9c565b50919050565b600061242782612de885670de0b6b3a764000063ffffffff6123ed16565b9063ffffffff612df416565b600080612e01848461242e565b905082810284038015612e1957506001019050612058565b509050612058565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006002811115612e6357fe5b905290565b80356001600160a01b038116811461205857600080fd5b600060208284031215612e90578081fd5b6124278383612e68565b600080600080600080600080610100898b031215612eb6578384fd5b612ec08a8a612e68565b9750612ecf8a60208b01612e68565b9650612ede8a60408b01612e68565b9550612eed8a60608b01612e68565b945060808901359350612f038a60a08b01612e68565b925060c0890135915060e089013590509295985092959890939650565b600080600060608486031215612f34578283fd5b8335612f3f8161367a565b92506020840135612f4f8161367a565b929592945050506040919091013590565b60008060408385031215612f72578182fd5b612f7c8484612e68565b946020939093013593505050565b600080600080600080600080610100898b031215612fa6578384fd5b8835612fb18161367a565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b600060208284031215612ff8578081fd5b81518015158114612427578182fd5b600060208284031215613018578081fd5b5051919050565b600080600080600060808688031215613036578081fd5b853594506020860135935061304e8760408801612e68565b9250606086013567ffffffffffffffff8082111561306a578283fd5b81880189601f82011261307b578384fd5b803592508183111561308b578384fd5b89602084830101111561309c578384fd5b6020810194505050809150509295509295909350565b600082516130c4818460208701613644565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b602081016131c283613670565b91905290565b60006020825282518060208401526131e7816040850160208701613644565b601f01601f19169190910160400192915050565b60208082526011908201527011931054d217d313d05397d19052531151607a1b604082015260600190565b6020808252600d908201526c494e56414c49445f434c41494d60981b604082015260600190565b6020808252600e908201526d5441524745545f49535f5a45524f60901b604082015260600190565b6020808252600e908201526d495f4f55545f4f465f52414e474560901b604082015260600190565b60208082526009908201526814915153951490539560ba1b604082015260600190565b6020808252601a908201527f424153455f51554f54455f43414e5f4e4f545f42455f53414d45000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252600e908201526d2224ab24a224a723afa2a92927a960911b604082015260600190565b60208082526009908201526829aaa12fa2a92927a960b91b604082015260600190565b60208082526010908201526f1113d113d7d25392551250531256915160821b604082015260600190565b6020808252601c908201527f524553455256455f414d4f554e545f49535f4e4f545f454e4f55474800000000604082015260600190565b6020808252600e908201526d4b5f4f55545f4f465f52414e474560901b604082015260600190565b60208082526018908201527f4c505f4645455f524154455f4f55545f4f465f52414e47450000000000000000604082015260600190565b6020808252600890820152674f564552464c4f5760c01b604082015260600190565b6020808252600990820152682727aa2fa7aba722a960b91b604082015260600190565b60208082526009908201526820a2222fa2a92927a960b91b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600990820152681554d157d49154d15560ba1b604082015260600190565b60208082526009908201526826aaa62fa2a92927a960b91b604082015260600190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015161357b81613670565b8060c08401525092915050565b6001600160781b0391909116815260200190565b6001600160801b0391909116815260200190565b61ffff91909116815260200190565b90815260200190565b918252602082015260400190565b84815260208101849052608081016135ed84613670565b60408201939093526060015292915050565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b67ffffffffffffffff91909116815260200190565b60005b8381101561365f578181015183820152602001613647565b838111156127ad5750506000910152565b6003811061238057fe5b6001600160a01b038116811461238057600080fdfedf176ad18be4f9f32efaa32f06e9d1175476504739a745f1399a6d3fa4b75917c2c0245e056d5fb095f04cd6373bc770802ebd1e6c918eb78fdef843cdb37b0fa2646970667358221220b45fa48c87cac74bbec9bd5c7373796de2048441a1720a407535e516cda3c77264736f6c63430006090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80638ff3928c1161011a578063d4b97046116100ad578063ee27c6891161007c578063ee27c689146103ff578063f2fde38b14610407578063f6b06e701461041a578063f811d69214610422578063fd1ed7e91461042a57610206565b8063d4b97046146103d4578063dd93f59a146103dc578063e539ef49146103ef578063ec2fd46d146103f757610206565b8063bd6015b4116100e9578063bd6015b414610391578063bf357dae146103a4578063c57a5d03146103b9578063d0a494e4146103c157610206565b80638ff3928c1461033f578063a382d1b91461035f578063ab44a7a314610374578063bbf5ce781461038957610206565b80634e71e0c81161019d57806371f9100c1161016c57806371f9100c146102f257806377f58657146102fa57806379a048761461030f5780637d721504146103225780638456db151461033757610206565b80634e71e0c81461029d57806354fd4d50146102a557806365f6fcbb146102ba57806366410a21146102cf57610206565b806336223ce9116101d957806336223ce9146102645780634322ec831461027a57806344096609146102825780634a248d2a1461029557610206565b80630d0092971461020b57806316048bc41461022057806328c4e24c1461023e5780633044ace414610251575b600080fd5b61021e610219366004612e7f565b610445565b005b6102286104ae565b60405161023591906130ce565b60405180910390f35b61021e61024c366004612f20565b6104bd565b61021e61025f366004612e9a565b61059a565b61026c610720565b6040516102359291906135c8565b61022861073b565b61026c610290366004612e7f565b61074a565b6102286107e6565b61021e6107f5565b6102ad610883565b60405161023591906131c8565b6102c26108a7565b60405161023591906135bf565b6102e26102dd366004612f60565b61094e565b60405161023594939291906135d6565b6102c2610a4a565b610302610a93565b6040516102359190613588565b6102e261031d366004612f60565b610aa9565b61032a610b98565b604051610235919061359c565b610228610ba7565b61035261034d366004612f8a565b610bb6565b60405161023591906131aa565b610367610dc7565b604051610235919061352f565b61037c610e6e565b604051610235919061362f565b61032a610e85565b6102c261039f366004612e7f565b610e9b565b6103ac611156565b60405161023591906135b0565b61021e611167565b61021e6103cf36600461301f565b61143e565b610228611a2e565b6102c26103ea366004612e7f565b611a3d565b610302611ce3565b61037c611cf2565b6102c2611d02565b61021e610415366004612e7f565b611d14565b610228611d99565b61032a611da8565b610432611dbe565b60405161023597969594939291906135ff565b600154600160a01b900460ff16156104785760405162461bcd60e51b815260040161046f90613377565b60405180910390fd5b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6000546001600160a01b031681565b600154600160a81b900460ff16156104e75760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146105265760405162461bcd60e51b815260040161046f90613459565b6003546001600160a01b0383811691161480159061055257506004546001600160a01b03838116911614155b61056e5760405162461bcd60e51b815260040161046f906134e9565b6105886001600160a01b038316848363ffffffff611e2116565b50506001805460ff60a81b1916905550565b6105a388610445565b846001600160a01b0316866001600160a01b031614156105d55760405162461bcd60e51b815260040161046f906132c0565b600380546001600160a01b038089166001600160a01b03199283161790925560048054888416908316179055600280548a84169083161790556007805492861692909116919091179055670de0b6b3a76400008411156106475760405162461bcd60e51b815260040161046f90613400565b670de0b6b3a764000082111561066f5760405162461bcd60e51b815260040161046f906133d8565b60008111801561068e57506ec097ce7bc90715b34b9f10000000008111155b6106aa5760405162461bcd60e51b815260040161046f90613275565b6007805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff87811691909102919091179091556008805467ffffffffffffffff191691841691909117600160401b600160c01b031916600160401b6001600160801b03841602179055610716611e7c565b5050505050505050565b6005546001600160801b0380821692600160801b9092041690565b6002546001600160a01b031681565b600754604051638198edbf60e01b815267ffffffffffffffff600160a01b830416916000916001600160a01b0390911690638198edbf9061078f9086906004016130ce565b60206040518083038186803b1580156107a757600080fd5b505afa1580156107bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107df9190613007565b9050915091565b6003546001600160a01b031681565b6001546001600160a01b0316331461081f5760405162461bcd60e51b815260040161046f90613226565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b604080518082019091526009815268044505020312e302e360bc1b60208201525b90565b6005546003546040516370a0823160e01b8152600092610949926001600160801b03909116916001600160a01b03909116906370a08231906108ed9030906004016130ce565b60206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190613007565b9063ffffffff61203116565b905090565b60008060008061095c612e21565b610964610dc7565b9050610970818761205e565b600754604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf906109b9908c906004016130ce565b60206040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190613007565b9050610a158782612164565b9550610a358661093d610a288a86612164565b8a9063ffffffff61203116565b96508260a00151935050505092959194509250565b600554600480546040516370a0823160e01b815260009361094993600160801b9091046001600160801b0316926001600160a01b0316916370a08231916108ed913091016130ce565b600654600160781b90046001600160781b031681565b600080600080610ab7612e21565b610abf610dc7565b9050610acb818761218e565b600754604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610b14908c906004016130ce565b60206040518083038186803b158015610b2c57600080fd5b505afa158015610b40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b649190613007565b9050610b708782612164565b9550610b838661093d610a288a86612164565b96508260800151935050505092959194509250565b6005546001600160801b031681565b6001546001600160a01b031681565b600154600090600160a81b900460ff1615610be35760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b0390911614610c225760405162461bcd60e51b815260040161046f90613459565b6005546001600160801b03168311801590610c4f5750600554600160801b90046001600160801b03168211155b610c6b5760405162461bcd60e51b815260040161046f906133a1565b670de0b6b3a7640000881115610c935760405162461bcd60e51b815260040161046f90613400565b670de0b6b3a7640000861115610cbb5760405162461bcd60e51b815260040161046f906133d8565b600087118015610cda57506ec097ce7bc90715b34b9f10000000008711155b610cf65760405162461bcd60e51b815260040161046f90613275565b6007805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8b811691909102919091179091556008805467ffffffffffffffff191691881691909117600160401b600160c01b031916600160401b6001600160801b038a1602179055610d64898661228f565b610d6e89856122b6565b610d76611e7c565b7f9950d5a2f2c7264863d40100bf993f0cdbc4711806caba6284d07e80fd50087988604051610da591906135bf565b60405180910390a150506001805460ff60a81b19168155979650505050505050565b610dcf612e21565b6008546001600160801b03600160401b82048116835267ffffffffffffffff90911660208301526005548082166040840152600160801b90041660608201526006546001600160781b038082166080840152600160781b82041660a083015261ffff600160f01b909104166002811115610e4557fe5b8160c001906002811115610e5557fe5b90816002811115610e6257fe5b9052506108a4816122d9565b600754600160a01b900467ffffffffffffffff1681565b600554600160801b90046001600160801b031681565b600154600090600160a81b900460ff1615610ec85760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b1790556003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610f0c9030906004016130ce565b60206040518083038186803b158015610f2457600080fd5b505afa158015610f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5c9190613007565b600554909150600090610f7f9083906001600160801b031663ffffffff61203116565b90506000806000610f903285610aa9565b9298509094509092509050610fa587876122b6565b600254610fbb906001600160a01b0316846122b6565b600480546040516370a0823160e01b81526110439288926001600160a01b0316916370a0823191610fee913091016130ce565b60206040518083038186803b15801561100657600080fd5b505afa15801561101a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103e9190613007565b612383565b80600281111561104f57fe5b600654600160f01b900461ffff9081169116146110fd5780600281111561107257fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038211156110bb5760405162461bcd60e51b815260040161046f90613437565b600680546001600160781b0319166001600160781b038416179055604051600080516020613690833981519152906110f49083906131b5565b60405180910390a15b6003546004546040516000805160206136b083398151915292611136926001600160a01b039182169291169088908b9033908e90613157565b60405180910390a150506001805460ff60a81b1916905550919392505050565b600654600160f01b900461ffff1681565b600154600160a81b900460ff16156111915760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146111d05760405162461bcd60e51b815260040161046f90613459565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906112019030906004016130ce565b60206040518083038186803b15801561121957600080fd5b505afa15801561122d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112519190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611286913091016130ce565b60206040518083038186803b15801561129e57600080fd5b505afa1580156112b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d69190613007565b90506001600160781b0382118015906112f657506001600160781b038111155b6113125760405162461bcd60e51b815260040161046f90613437565b6005546001600160801b031682146113995760055460065461135d916001600160801b031690611351906001600160781b03168563ffffffff6123ed16565b9063ffffffff61242e16565b600680546001600160781b0319166001600160781b0392909216919091179055600580546001600160801b0319166001600160801b0384161790555b600554600160801b90046001600160801b0316811461142d576005546006546113e791600160801b90046001600160801b03169061135190600160781b90046001600160781b0316846123ed565b600680546001600160781b0392909216600160781b02600160781b600160f01b0319909216919091179055600580546001600160801b03808416600160801b0291161790555b50506001805460ff60a81b19169055565b600154600160a81b900460ff16156114685760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055611485838661228f565b61148f83856122b6565b80156114fc57604051637ed1f1dd60e01b81526001600160a01b03841690637ed1f1dd906114c9903390899089908890889060040161310b565b600060405180830381600087803b1580156114e357600080fd5b505af11580156114f7573d6000803e3d6000fd5b505050505b6003546040516370a0823160e01b81526000916001600160a01b0316906370a082319061152d9030906004016130ce565b60206040518083038186803b15801561154557600080fd5b505afa158015611559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157d9190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a08231916115b2913091016130ce565b60206040518083038186803b1580156115ca57600080fd5b505afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190613007565b6005549091506001600160801b0316821015806116315750600554600160801b90046001600160801b03168110155b61164d5760405162461bcd60e51b815260040161046f906131fb565b6005546001600160801b031682101561181157600554600090611681908390600160801b90046001600160801b0316612031565b9050600080600080611693328661094e565b6005549397509195509350915084906116bb906001600160801b03168963ffffffff61203116565b11156116d95760405162461bcd60e51b815260040161046f906131fb565b6002546116ef906001600160a01b03168461228f565b8160028111156116fb57fe5b600654600160f01b900461ffff9081169116146117b25781600281111561171e57fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038111156117675760405162461bcd60e51b815260040161046f90613437565b60068054600160781b600160f01b031916600160781b6001600160781b03841602179055604051600080516020613690833981519152906117a99084906131b5565b60405180910390a15b6000805160206136b0833981519152600460009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168787338f60405161180396959493929190613157565b60405180910390a150505050505b600554600160801b90046001600160801b03168110156119d35760055460009061184b9084906001600160801b031663ffffffff61203116565b905060008060008061185d3286610aa9565b60055493975091955093509150849061188690600160801b90046001600160801b031688612031565b11156118a45760405162461bcd60e51b815260040161046f906131fb565b6002546118ba906001600160a01b0316846122b6565b8160028111156118c657fe5b600654600160f01b900461ffff908116911614611974578160028111156118e957fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b038111156119325760405162461bcd60e51b815260040161046f90613437565b600680546001600160781b0319166001600160781b0383161790556040516000805160206136908339815191529061196b9084906131b5565b60405180910390a15b6000805160206136b0833981519152600360009054906101000a90046001600160a01b0316600460009054906101000a90046001600160a01b03168787338f6040516119c596959493929190613157565b60405180910390a150505050505b6119db612458565b7f0b82e93068db15abd9fbb2682c65462ea8a0a10582dce93a5664818e296f54eb33868989604051611a1094939291906130e2565b60405180910390a150506001805460ff60a81b191690555050505050565b6004546001600160a01b031681565b600154600090600160a81b900460ff1615611a6a5760405162461bcd60e51b815260040161046f9061329d565b6001805460ff60a81b1916600160a81b179055600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191611aaf913091016130ce565b60206040518083038186803b158015611ac757600080fd5b505afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aff9190613007565b600554909150600090611b23908390600160801b90046001600160801b0316612031565b90506000806000611b34328561094e565b9298509094509092509050611b49878761228f565b600254611b5f906001600160a01b03168461228f565b6003546040516370a0823160e01b8152611be7916001600160a01b0316906370a0823190611b919030906004016130ce565b60206040518083038186803b158015611ba957600080fd5b505afa158015611bbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be19190613007565b86612383565b806002811115611bf357fe5b600654600160f01b900461ffff908116911614611caa57806002811115611c1657fe5b6006805461ffff92909216600160f01b026001600160f01b039092169190911790556001600160781b03821115611c5f5760405162461bcd60e51b815260040161046f90613437565b60068054600160781b600160f01b031916600160781b6001600160781b0385160217905560405160008051602061369083398151915290611ca19083906131b5565b60405180910390a15b6004546003546040516000805160206136b083398151915292611136926001600160a01b039182169291169088908b9033908e90613157565b6006546001600160781b031681565b60085467ffffffffffffffff1681565b6000610949611d0f610dc7565b6125ff565b6000546001600160a01b03163314611d3e5760405162461bcd60e51b815260040161046f90613459565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b031681565b600854600160401b90046001600160801b031681565b6000806000806000806000611dd1612e21565b611dd9610dc7565b905080600001519750806020015196508060400151955080606001519450806080015193508060a0015192508060c001516002811115611e1557fe5b91505090919293949596565b611e778363a9059cbb60e01b8484604051602401611e40929190613191565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526126f6565b505050565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611ead9030906004016130ce565b60206040518083038186803b158015611ec557600080fd5b505afa158015611ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611efd9190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611f32913091016130ce565b60206040518083038186803b158015611f4a57600080fd5b505afa158015611f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f829190613007565b90506001600160781b038211801590611fa257506001600160781b038111155b611fbe5760405162461bcd60e51b815260040161046f90613437565b600580546001600160801b03838116600160801b028582166001600160801b03199093169290921716179055600680546001600160781b03928316600160781b02600160781b600160f01b0319939094166001600160781b03199091161791909116919091176001600160f01b03169055565b6000828211156120535760405162461bcd60e51b815260040161046f90613354565b508082035b92915050565b600080808460c00151600281111561207257fe5b141561208d5761208284846127b3565b91506001905061215d565b60018460c00151600281111561209f57fe5b14156120af5761208284846127da565b60006120cc85606001518660a0015161203190919063ffffffff16565b905060006120eb8660800151876040015161203190919063ffffffff16565b905081851015612116576120ff86866127f7565b93506002925080841115612111578093505b61215a565b8185141561212a578093506000925061215a565b61215361214687612141888663ffffffff61203116565b6127b3565b829063ffffffff61283216565b9350600192505b50505b9250929050565b6000670de0b6b3a764000061217f848463ffffffff6123ed16565b8161218657fe5b049392505050565b600080808460c0015160028111156121a257fe5b14156121bd576121b28484612857565b91506002905061215d565b60018460c0015160028111156121cf57fe5b141561227a5760006121f28560400151866080015161203190919063ffffffff16565b905060006122118660a00151876060015161203190919063ffffffff16565b90508185101561223c576122258686612876565b93506001925080841115612237578093505b612273565b818514156122505780935060009250612273565b61226c61214687612267888663ffffffff61203116565b612857565b9350600292505b505061215d565b61228484846128a8565b946002945092505050565b80156122b2576003546122b2906001600160a01b0316838363ffffffff611e2116565b5050565b80156122b2576004546122b2906001600160a01b0316838363ffffffff611e2116565b60028160c0015160028111156122eb57fe5b141561232a5761232081606001516123148360800151846040015161203190919063ffffffff16565b835160208501516128c7565b60a0820152612380565b60018160c00151600281111561233c57fe5b14156123805761237a81604001516123658360a00151846060015161203190919063ffffffff16565b8351612370906129ed565b84602001516128c7565b60808201525b50565b6001600160781b0382118015906123a157506001600160781b038111155b6123bd5760405162461bcd60e51b815260040161046f90613437565b600580546001600160801b03928316600160801b029383166001600160801b031990911617909116919091179055565b6000826123fc57506000612058565b8282028284828161240957fe5b04146124275760405162461bcd60e51b815260040161046f9061350c565b9392505050565b600080821161244f5760405162461bcd60e51b815260040161046f9061332c565b81838161218657fe5b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906124899030906004016130ce565b60206040518083038186803b1580156124a157600080fd5b505afa1580156124b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124d99190613007565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161250e913091016130ce565b60206040518083038186803b15801561252657600080fd5b505afa15801561253a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255e9190613007565b90506001600160781b03821180159061257e57506001600160781b038111155b61259a5760405162461bcd60e51b815260040161046f90613437565b6005546001600160801b031682146125c857600580546001600160801b0319166001600160801b0384161790555b600554600160801b90046001600160801b031681146122b257600580546001600160801b03808416600160801b0291161790555050565b600060028260c00151600281111561261357fe5b141561269e57606082015160a08301516000916126499161263f9190611351908063ffffffff6123ed16565b8460600151612a0e565b905061268661265c846020015183612164565b602085015161267a90670de0b6b3a76400009063ffffffff61203116565b9063ffffffff61283216565b9050612696836000015182612a0e565b9150506126f1565b604082015160808301516000916126ce916126c49190611351908063ffffffff6123ed16565b8460400151612a0e565b90506126e161265c846020015183612164565b9050612696836000015182612164565b919050565b60006060836001600160a01b03168360405161271291906130b2565b6000604051808303816000865af19150503d806000811461274f576040519150601f19603f3d011682016040523d82523d6000602084013e612754565b606091505b5091509150816127765760405162461bcd60e51b815260040161046f906132f7565b8051156127ad57808060200190518101906127919190612fe7565b6127ad5760405162461bcd60e51b815260040161046f9061349f565b50505050565b600061242783608001518460800151846127d087600001516129ed565b8760200151612a2c565b600061242783608001518460400151846127d087600001516129ed565b60006124278360a0015161281884866060015161283290919063ffffffff16565b60608601518651612828906129ed565b8760200151612cba565b6000828201838110156124275760405162461bcd60e51b815260040161046f9061347c565b60006124278360a001518460a001518486600001518760200151612a2c565b6000612427836080015161289784866040015161283290919063ffffffff16565b604086015186516020880151612cba565b60006124278360a0015184606001518486600001518760200151612a2c565b6000846128d6575060006129e5565b816128fc576128f56128e88486612164565b869063ffffffff61283216565b90506129e5565b600080612912600485028663ffffffff6123ed16565b90508061292957670de0b6b3a764000091506129a9565b85818783028161293557fe5b041415612970576129696129646ec097ce7bc90715b34b9f100000000061267a848a028b63ffffffff61242e16565b612d93565b91506129a9565b6129a66129646ec097ce7bc90715b34b9f100000000061267a8961299a868d63ffffffff61242e16565b9063ffffffff6123ed16565b91505b60006129d3670de0b6b3a764000061267a6129ca868363ffffffff61203116565b88600202612a0e565b90506129df8882612164565b93505050505b949350505050565b60006120586ec097ce7bc90715b34b9f10000000008363ffffffff61242e16565b60006124278261135185670de0b6b3a764000063ffffffff6123ed16565b6000808611612a4d5760405162461bcd60e51b815260040161046f9061324d565b83612a5a57506000612cb1565b81612a875784612a6a8486612164565b11612a7e57612a798385612164565b612a80565b845b9050612cb1565b670de0b6b3a7640000821415612b4757600080612aaa858763ffffffff6123ed16565b905080612aba5760009150612b13565b868188830281612ac657fe5b041415612af657612aef612ae0898063ffffffff6123ed16565b8289029063ffffffff61242e16565b9150612b13565b612b10886113518761299a83838c8e63ffffffff6123ed16565b91505b612b3e612b2e83670de0b6b3a764000063ffffffff61283216565b611351898563ffffffff6123ed16565b92505050612cb1565b6000612b74612b5c858763ffffffff6123ed16565b61267a8961299a8a611351898463ffffffff6123ed16565b90506000612b948761299a670de0b6b3a76400008763ffffffff61203116565b90506000828210612bba57612baf828463ffffffff61203116565b915060009050612bd1565b612bca838363ffffffff61203116565b9150600190505b612be982670de0b6b3a764000063ffffffff61242e16565b91506000612c20612c0d600461299a670de0b6b3a76400008a63ffffffff61203116565b612c1b8c61299a8a8f612164565b612164565b9050612c396129648261267a868063ffffffff6123ed16565b90506000612c5a600261299a670de0b6b3a76400008a63ffffffff61203116565b905060008315612c7b57612c74838663ffffffff61203116565b9050612c8e565b612c8b858463ffffffff61283216565b90505b612ca8612c9b8284612dca565b8c9063ffffffff61203116565b96505050505050505b95945050505050565b6000808611612cdb5760405162461bcd60e51b815260040161046f9061324d565b6000612cfd612cf0878763ffffffff61203116565b859063ffffffff6123ed16565b905082612d2457612d1c81670de0b6b3a764000063ffffffff61242e16565b915050612cb1565b6000612d43612d3d886113518b8063ffffffff6123ed16565b87612a0e565b90506000612d518583612164565b9050612d866ec097ce7bc90715b34b9f10000000006113518561299a8561267a670de0b6b3a76400008c63ffffffff61203116565b9998505050505050505050565b80600160028204015b81811015612dc457809150600281828581612db357fe5b040181612dbc57fe5b049050612d9c565b50919050565b600061242782612de885670de0b6b3a764000063ffffffff6123ed16565b9063ffffffff612df416565b600080612e01848461242e565b905082810284038015612e1957506001019050612058565b509050612058565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006002811115612e6357fe5b905290565b80356001600160a01b038116811461205857600080fd5b600060208284031215612e90578081fd5b6124278383612e68565b600080600080600080600080610100898b031215612eb6578384fd5b612ec08a8a612e68565b9750612ecf8a60208b01612e68565b9650612ede8a60408b01612e68565b9550612eed8a60608b01612e68565b945060808901359350612f038a60a08b01612e68565b925060c0890135915060e089013590509295985092959890939650565b600080600060608486031215612f34578283fd5b8335612f3f8161367a565b92506020840135612f4f8161367a565b929592945050506040919091013590565b60008060408385031215612f72578182fd5b612f7c8484612e68565b946020939093013593505050565b600080600080600080600080610100898b031215612fa6578384fd5b8835612fb18161367a565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b600060208284031215612ff8578081fd5b81518015158114612427578182fd5b600060208284031215613018578081fd5b5051919050565b600080600080600060808688031215613036578081fd5b853594506020860135935061304e8760408801612e68565b9250606086013567ffffffffffffffff8082111561306a578283fd5b81880189601f82011261307b578384fd5b803592508183111561308b578384fd5b89602084830101111561309c578384fd5b6020810194505050809150509295509295909350565b600082516130c4818460208701613644565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b602081016131c283613670565b91905290565b60006020825282518060208401526131e7816040850160208701613644565b601f01601f19169190910160400192915050565b60208082526011908201527011931054d217d313d05397d19052531151607a1b604082015260600190565b6020808252600d908201526c494e56414c49445f434c41494d60981b604082015260600190565b6020808252600e908201526d5441524745545f49535f5a45524f60901b604082015260600190565b6020808252600e908201526d495f4f55545f4f465f52414e474560901b604082015260600190565b60208082526009908201526814915153951490539560ba1b604082015260600190565b6020808252601a908201527f424153455f51554f54455f43414e5f4e4f545f42455f53414d45000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252600e908201526d2224ab24a224a723afa2a92927a960911b604082015260600190565b60208082526009908201526829aaa12fa2a92927a960b91b604082015260600190565b60208082526010908201526f1113d113d7d25392551250531256915160821b604082015260600190565b6020808252601c908201527f524553455256455f414d4f554e545f49535f4e4f545f454e4f55474800000000604082015260600190565b6020808252600e908201526d4b5f4f55545f4f465f52414e474560901b604082015260600190565b60208082526018908201527f4c505f4645455f524154455f4f55545f4f465f52414e47450000000000000000604082015260600190565b6020808252600890820152674f564552464c4f5760c01b604082015260600190565b6020808252600990820152682727aa2fa7aba722a960b91b604082015260600190565b60208082526009908201526820a2222fa2a92927a960b91b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600990820152681554d157d49154d15560ba1b604082015260600190565b60208082526009908201526826aaa62fa2a92927a960b91b604082015260600190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015161357b81613670565b8060c08401525092915050565b6001600160781b0391909116815260200190565b6001600160801b0391909116815260200190565b61ffff91909116815260200190565b90815260200190565b918252602082015260400190565b84815260208101849052608081016135ed84613670565b60408201939093526060015292915050565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b67ffffffffffffffff91909116815260200190565b60005b8381101561365f578181015183820152602001613647565b838111156127ad5750506000910152565b6003811061238057fe5b6001600160a01b038116811461238057600080fdfedf176ad18be4f9f32efaa32f06e9d1175476504739a745f1399a6d3fa4b75917c2c0245e056d5fb095f04cd6373bc770802ebd1e6c918eb78fdef843cdb37b0fa2646970667358221220b45fa48c87cac74bbec9bd5c7373796de2048441a1720a407535e516cda3c77264736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "388:1047:9:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "388:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:124:72;;;;;;;;;:::i;:::-;;264:22;;;:::i;:::-;;;;;;;;;;;;;;;;4934:279:13;;;;;;;;;:::i;420:865:9:-;;;;;;;;;:::i;782:178:13:-;;;:::i;:::-;;;;;;;;;681:27:11;;;:::i;966:227:13:-;;;;;;;;;:::i;715:26:11:-;;;:::i;1169:223:72:-;;;:::i;1341:92:9:-;;;:::i;:::-;;;;;;;;1243:141:13;;;:::i;:::-;;;;;;;;7090:777:12;;;;;;;;;:::i;:::-;;;;;;;;;;;1390:144:13;;;:::i;887:29:11:-;;;:::i;:::-;;;;;;;;6307:777:12;;;;;;;;;:::i;781:29:11:-;;;:::i;:::-;;;;;;;;292:26:72;;;:::i;3616:940:13:-;;;;;;;;;:::i;:::-;;;;;;;;7924:358:12;;;:::i;:::-;;;;;;;;1058:27:11;;;:::i;:::-;;;;;;;;816:30;;;:::i;924:1107:12:-;;;;;;;;;:::i;922:22:11:-;;;:::i;:::-;;;;;;;;2882:728:13;;;:::i;3193:3058:12:-;;;;;;;;;:::i;747:27:11:-;;;:::i;2037:1150:12:-;;;;;;;;;:::i;853:28:11:-;;;:::i;1091:17::-;;;:::i;8776:123:12:-;;;:::i;1003:160:72:-;;;;;;;;;:::i;1007:40:11:-;;;:::i;1114:18::-;;;:::i;8288:482:12:-;;;:::i;:::-;;;;;;;;;;;;;;873:124:72;673:13;;-1:-1:-1;;;673:13:72;;;;672:14;664:43;;;;-1:-1:-1;;;664:43:72;;;;;;;;;;;;;;;;;958:4:::1;942:20:::0;;-1:-1:-1;;;;942:20:72::1;-1:-1:-1::0;;;942:20:72::1;::::0;;;972:18;;-1:-1:-1;;;;;972:18:72;;::::1;-1:-1:-1::0;;;;;;972:18:72;;::::1;::::0;;;::::1;::::0;;873:124::o;264:22::-;;;-1:-1:-1;;;;;264:22:72;;:::o;4934:279:13:-;515:9:76;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;;784:7:72;770:10:::1;-1:-1:-1::0;;;;;784:7:72;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:72::1;;;;;;;;;5096:12:13::2;::::0;-1:-1:-1;;;;;5079:30:13;;::::2;5096:12:::0;::::2;5079:30;::::0;::::2;::::0;:65:::2;;-1:-1:-1::0;5130:13:13::2;::::0;-1:-1:-1;;;;;5113:31:13;;::::2;5130:13:::0;::::2;5113:31;;5079:65;5071:87;;;;-1:-1:-1::0;;;5071:87:13::2;;;;;;;;;5168:38;-1:-1:-1::0;;;;;5168:26:13;::::2;5195:2:::0;5199:6;5168:38:::2;:26;:38;:::i;:::-;-1:-1:-1::0;;585:9:76;:17;;-1:-1:-1;;;;585:17:76;;;-1:-1:-1;4934:279:13:o;420:865:9:-;676:16;686:5;676:9;:16::i;:::-;731:17;-1:-1:-1;;;;;711:37:9;:16;-1:-1:-1;;;;;711:37:9;;;703:76;;;;-1:-1:-1;;;703:76:9;;;;;;;;;789:12;:39;;-1:-1:-1;;;;;789:39:9;;;-1:-1:-1;;;;;;789:39:9;;;;;;;838:13;:41;;;;;;;;;;;890:12;:25;;;;;;;;;;;925:19;:51;;;;;;;;;;;;;;;1016:4;1003:17;;;995:54;;;;-1:-1:-1;;;995:54:9;;;;;;;;;1072:4;1067:1;:9;;1059:36;;;;-1:-1:-1;;;1059:36:9;;;;;;;;;1117:1;1113;:5;:18;;;;;1127:4;1122:1;:9;;1113:18;1105:45;;;;-1:-1:-1;;;1105:45:9;;;;;;;;;1160:13;:33;;-1:-1:-1;;;;1160:33:9;-1:-1:-1;;;1160:33:9;;;;;;;;;;;;;;;1203:3;:15;;-1:-1:-1;;1203:15:9;;;;;;;;-1:-1:-1;;;;;;;;1228:16:9;-1:-1:-1;;;;;;;;1228:16:9;;;;;;1254:24;:22;:24::i;:::-;420:865;;;;;;;;:::o;782:178:13:-;899:14;;-1:-1:-1;;;;;899:14:13;;;;-1:-1:-1;;;938:15:13;;;;;782:178::o;681:27:11:-;;;-1:-1:-1;;;;;681:27:11;;:::o;966:227:13:-;1115:13;;1150:36;;-1:-1:-1;;;1150:36:13;;1115:13;-1:-1:-1;;;1115:13:13;;;;1051:17;;-1:-1:-1;;;;;1150:19:13;;;;:30;;:36;;1181:4;;1150:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1138:48;;966:227;;;:::o;715:26:11:-;;;-1:-1:-1;;;;;715:26:11;;:::o;1169:223:72:-;1234:11;;-1:-1:-1;;;;;1234:11:72;1220:10;:25;1212:51;;;;-1:-1:-1;;;1212:51:72;;;;;;;;;1308:11;;;1299:7;;1278:42;;-1:-1:-1;;;;;1308:11:72;;;;1299:7;;;;1278:42;;;1340:11;;;;1330:21;;-1:-1:-1;;;;;;1330:21:72;;;-1:-1:-1;;;;;1340:11:72;;1330:21;;;;1361:24;;;1169:223::o;1341:92:9:-;1408:18;;;;;;;;;;;;-1:-1:-1;;;1408:18:9;;;;1341:92;;:::o;1243:141:13:-;1362:14;;1320:12;;:37;;-1:-1:-1;;;1320:37:13;;1288:13;;1320:57;;-1:-1:-1;;;;;1362:14:13;;;;-1:-1:-1;;;;;1320:12:13;;;;:22;;:37;;1351:4;;1320:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:41;:57;:41;:57;:::i;:::-;1313:64;;1243:141;:::o;7090:777:12:-;7212:25;7251:13;7278:27;7319:22;7366:32;;:::i;:::-;7401:13;:11;:13::i;:::-;7366:48;;7457;7483:5;7490:14;7457:25;:48::i;:::-;7536:13;;7579:38;;-1:-1:-1;;;7579:38:12;;7424:81;;-1:-1:-1;7424:81:12;;-1:-1:-1;7536:13:12;-1:-1:-1;;;7536:13:12;;;;7516:17;;-1:-1:-1;;;;;7579:19:12;;:30;;:38;;7610:6;;7579:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7559:58;;7635:50;7656:17;7675:9;7635:20;:50::i;:::-;7627:58;;7715:110;7819:5;7715:86;7750:50;7771:17;7790:9;7750:20;:50::i;:::-;7715:17;;:86;:34;:86;:::i;:110::-;7695:130;;7852:5;:8;;;7835:25;;7090:777;;;;;;;;;;:::o;1390:144:13:-;1511:15;;1468:13;;;:38;;-1:-1:-1;;;1468:38:13;;1436:13;;1468:59;;-1:-1:-1;;;1511:15:13;;;-1:-1:-1;;;;;1511:15:13;;-1:-1:-1;;;;;1468:13:13;;:23;;:38;;1500:4;;1468:38;;;887:29:11;;;-1:-1:-1;;;887:29:11;;-1:-1:-1;;;;;887:29:11;;:::o;6307:777:12:-;6427:26;6467:13;6494:27;6535:21;6581:32;;:::i;:::-;6616:13;:11;:13::i;:::-;6581:48;;6673:46;6698:5;6705:13;6673:24;:46::i;:::-;6750:13;;6793:38;;-1:-1:-1;;;6793:38:12;;6639:80;;-1:-1:-1;6639:80:12;;-1:-1:-1;6750:13:12;-1:-1:-1;;;6750:13:12;;;;6730:17;;-1:-1:-1;;;;;6793:19:12;;:30;;:38;;6824:6;;6793:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6773:58;;6849:51;6870:18;6890:9;6849:20;:51::i;:::-;6841:59;;6931:112;7037:5;6931:88;6967:51;6988:18;7008:9;6967:20;:51::i;6931:112::-;6910:133;;7069:5;:8;;;7053:24;;6307:777;;;;;;;;;;:::o;781:29:11:-;;;-1:-1:-1;;;;;781:29:11;;:::o;292:26:72:-;;;-1:-1:-1;;;;;292:26:72;;:::o;3616:940:13:-;515:9:76;;3907:4:13;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;;784:7:72;770:10:::1;-1:-1:-1::0;;;;;784:7:72;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:72::1;;;;;;;;;3944:14:13::2;::::0;-1:-1:-1;;;;;3944:14:13::2;:32:::0;-1:-1:-1;3944:32:13;::::2;::::0;:70:::2;;-1:-1:-1::0;3980:15:13::2;::::0;-1:-1:-1;;;3980:15:13;::::2;-1:-1:-1::0;;;;;3980:15:13::2;-1:-1:-1::0;;3980:34:13::2;3944:70;3923:145;;;;-1:-1:-1::0;;;3923:145:13::2;;;;;;;;;4102:4;4086:12;:20;;4078:57;;;;-1:-1:-1::0;;;4078:57:13::2;;;;;;;;;4161:4;4153;:12;;4145:39;;;;-1:-1:-1::0;;;4145:39:13::2;;;;;;;;;4209:1;4202:4;:8;:24;;;;;4222:4;4214;:12;;4202:24;4194:51;;;;-1:-1:-1::0;;;4194:51:13::2;;;;;;;;;4255:13;:36:::0;;-1:-1:-1;;;;4255:36:13::2;-1:-1:-1::0;;;4255:36:13::2;::::0;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;4301:3:::2;:18:::0;;-1:-1:-1;;4301:18:13::2;::::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;;;;;;4329:19:13::2;-1:-1:-1::0;;;;;;;;4329:19:13;::::2;;;::::0;;4358:40:::2;4375:7:::0;4384:13;4358:16:::2;:40::i;:::-;4408:42;4426:7;4435:14;4408:17;:42::i;:::-;4460:24;:22;:24::i;:::-;4499:29;4515:12;4499:29;;;;;;;;;;;;;;;-1:-1:-1::0;;4545:4:13::2;585:17:76::0;;-1:-1:-1;;;;585:17:76;;;4545:4:13;3616:940;-1:-1:-1;;;;;;;3616:940:13:o;7924:358:12:-;7968:32;;:::i;:::-;8022:3;;-1:-1:-1;;;;;;;;8022:3:12;;;;8012:13;;8045:3;;;;8035:7;;;:13;8068:14;;;;;8058:7;;;:24;-1:-1:-1;;;8102:15:12;;;8092:7;;;:25;8138:13;;-1:-1:-1;;;;;8138:13:12;;;8127:8;;;:24;-1:-1:-1;;;8172:14:12;;;8161:8;;;:25;8224:8;-1:-1:-1;;;8224:8:12;;;;8206:27;;;;;;;;8196:5;:7;;:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8243:32:12;8269:5;8243:25;:32::i;1058:27:11:-;;;-1:-1:-1;;;1058:27:11;;;;;:::o;816:30::-;;;-1:-1:-1;;;816:30:11;;-1:-1:-1;;;;;816:30:11;;:::o;924:1107:12:-;515:9:76;;1013:26:12;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;1077:12:12::1;::::0;:37:::1;::::0;-1:-1:-1;;;1077:37:12;;548:16:76;;-1:-1:-1;;;;;1077:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;1108:4:::1;::::0;1077:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1168:14;::::0;1055:59;;-1:-1:-1;1124:17:12::1;::::0;1144:40:::1;::::0;1055:59;;-1:-1:-1;;;;;1168:14:12::1;1144:40;:15;:40;:::i;:::-;1124:60;;1194:13;1217:21:::0;1248:27:::1;1341:35;1355:9;1366;1341:13;:35::i;:::-;1285:91:::0;;-1:-1:-1;1285:91:12;;-1:-1:-1;1285:91:12;;-1:-1:-1;1285:91:12;-1:-1:-1;1387:41:12::1;1405:2:::0;1285:91;1387:17:::1;:41::i;:::-;1456:12;::::0;1438:38:::1;::::0;-1:-1:-1;;;;;1456:12:12::1;1470:5:::0;1438:17:::1;:38::i;:::-;1511:13;::::0;;:38:::1;::::0;-1:-1:-1;;;1511:38:12;;1486:64:::1;::::0;1498:11;;-1:-1:-1;;;;;1511:13:12::1;::::0;:23:::1;::::0;:38:::1;::::0;1543:4:::1;::::0;1511:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:11;:64::i;:::-;1609:9;1602:17;;;;;;;;1590:8;::::0;-1:-1:-1;;;1590:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;1586:239;;1653:9;1646:17;;;;;;;;1635:8;:28:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;1635:28:12::1;-1:-1:-1::0;;;;;1635:28:12;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;1685:28:12;::::1;;1677:48;;;;-1:-1:-1::0;;;1677:48:12::1;;;;;;;;;1739:13;:38:::0;;-1:-1:-1;;;;;;1739:38:12::1;-1:-1:-1::0;;;;;1739:38:12;::::1;;::::0;;1796:18:::1;::::0;-1:-1:-1;;;;;;;;;;;1796:18:12;::::1;::::0;1804:9;;1796:18:::1;;;;;;;;;;1586:239;1870:12;::::0;1905:13:::1;::::0;1840:184:::1;::::0;-1:-1:-1;;;;;;;;;;;1840:184:12;::::1;::::0;-1:-1:-1;;;;;1870:12:12;;::::1;::::0;1905:13;::::1;::::0;1933:9;;1956:18;;1988:10:::1;::::0;2012:2;;1840:184:::1;;;;;;;;;;-1:-1:-1::0;;585:9:76;:17;;-1:-1:-1;;;;585:17:76;;;-1:-1:-1;924:1107:12;;;-1:-1:-1;;;924:1107:12:o;922:22:11:-;;;-1:-1:-1;;;922:22:11;;;;;:::o;2882:728:13:-;515:9:76;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;;784:7:72;770:10:::1;-1:-1:-1::0;;;;;784:7:72;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:72::1;;;;;;;;;2971:12:13::2;::::0;:37:::2;::::0;-1:-1:-1;;;2971:37:13;;2949:19:::2;::::0;-1:-1:-1;;;;;2971:12:13::2;::::0;:22:::2;::::0;:37:::2;::::0;3002:4:::2;::::0;2971:37:::2;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:13;::::0;;:38:::2;::::0;-1:-1:-1;;;3041:38:13;;2949:59;;-1:-1:-1;3018:20:13::2;::::0;-1:-1:-1;;;;;3041:13:13;;::::2;::::0;:23:::2;::::0;:38:::2;::::0;3073:4:::2;::::0;3041:38:::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:61:::0;-1:-1:-1;;;;;;3098:26:13;::::2;::::0;::::2;::::0;:57:::2;;-1:-1:-1::0;;;;;;3128:27:13;::::2;;3098:57;3090:78;;;;-1:-1:-1::0;;;3090:78:13::2;;;;;;;;;3198:14;::::0;-1:-1:-1;;;;;3198:14:13::2;3183:29:::0;::::2;3179:204;;3304:14;::::0;3260:13:::2;::::0;3252:68:::2;::::0;-1:-1:-1;;;;;3304:14:13::2;::::0;3252:39:::2;::::0;-1:-1:-1;;;;;3260:13:13::2;3279:11:::0;3252:39:::2;:26;:39;:::i;:::-;:43:::0;:68:::2;:43;:68;:::i;:::-;3228:13;:93:::0;;-1:-1:-1;;;;;;3228:93:13::2;-1:-1:-1::0;;;;;3228:93:13;;;::::2;::::0;;;::::2;::::0;;3335:14:::2;:37:::0;;-1:-1:-1;;;;;;3335:37:13::2;-1:-1:-1::0;;;;;3335:37:13;::::2;;::::0;;3179:204:::2;3412:15;::::0;-1:-1:-1;;;3412:15:13;::::2;-1:-1:-1::0;;;;;3412:15:13::2;3396:31:::0;::::2;3392:212;;3522:15;::::0;3476:14:::2;::::0;3468:71:::2;::::0;-1:-1:-1;;;3522:15:13;::::2;-1:-1:-1::0;;;;;3522:15:13::2;::::0;3468:41:::2;::::0;-1:-1:-1;;;3476:14:13;::::2;-1:-1:-1::0;;;;;3476:14:13::2;3496:12:::0;3468:27:::2;:41::i;:71::-;3443:14;:97:::0;;-1:-1:-1;;;;;3443:97:13;;;::::2;-1:-1:-1::0;;;3443:97:13::2;-1:-1:-1::0;;;;;;;;3443:97:13;;::::2;::::0;;;::::2;::::0;;3554:15:::2;:39:::0;;-1:-1:-1;;;;;3554:39:13;;::::2;-1:-1:-1::0;;;3554:39:13::2;::::0;::::2;;::::0;;3392:212:::2;-1:-1:-1::0;;585:9:76;:17;;-1:-1:-1;;;;585:17:76;;;2882:728:13:o;3193:3058:12:-;515:9:76;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;3365:37:12::1;3382:7:::0;3391:10;3365:16:::1;:37::i;:::-;3412:39;3430:7;3439:11;3412:17;:39::i;:::-;3466:15:::0;;3462:113:::1;;3495:80;::::0;-1:-1:-1;;;3495:80:12;;-1:-1:-1;;;;;3495:37:12;::::1;::::0;::::1;::::0;:80:::1;::::0;3533:10:::1;::::0;3545;;3557:11;;3570:4;;;;3495:80:::1;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3462:113;3608:12;::::0;:37:::1;::::0;-1:-1:-1;;;3608:37:12;;3586:19:::1;::::0;-1:-1:-1;;;;;3608:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;3639:4:::1;::::0;3608:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3678:13;::::0;;:38:::1;::::0;-1:-1:-1;;;3678:38:12;;3586:59;;-1:-1:-1;3655:20:12::1;::::0;-1:-1:-1;;;;;3678:13:12;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;3710:4:::1;::::0;3678:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3796:14;::::0;3655:61;;-1:-1:-1;;;;;;3796:14:12::1;3781:29:::0;::::1;;::::0;:64:::1;;-1:-1:-1::0;3830:15:12::1;::::0;-1:-1:-1;;;3830:15:12;::::1;-1:-1:-1::0;;;;;3830:15:12::1;3814:31:::0;::::1;;3781:64;3760:128;;;;-1:-1:-1::0;;;3760:128:12::1;;;;;;;;;3981:14;::::0;-1:-1:-1;;;;;3981:14:12::1;3967:28:::0;::::1;3963:1056;;;4057:15;::::0;4011:18:::1;::::0;4032:42:::1;::::0;:12;;-1:-1:-1;;;4057:15:12;::::1;-1:-1:-1::0;;;;;4057:15:12::1;4032:16;:42::i;:::-;4011:63;;4106:25;4149:13:::0;4180:27:::1;4225:22:::0;4264:37:::1;4279:9;4290:10;4264:14;:37::i;:::-;4370:14;::::0;4088:213;;-1:-1:-1;4088:213:12;;-1:-1:-1;4088:213:12;-1:-1:-1;4088:213:12;-1:-1:-1;4088:213:12;;4362:40:::1;::::0;-1:-1:-1;;;;;4370:14:12::1;4390:11:::0;4362:40:::1;:27;:40;:::i;:::-;:61;;4354:91;;;;-1:-1:-1::0;;;4354:91:12::1;;;;;;;;;4477:12;::::0;4460:37:::1;::::0;-1:-1:-1;;;;;4477:12:12::1;4491:5:::0;4460:16:::1;:37::i;:::-;4534:9;4527:17;;;;;;;;4515:8;::::0;-1:-1:-1;;;4515:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;4511:262;;4582:9;4575:17;;;;;;;;4564:8;:28:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;4564:28:12::1;-1:-1:-1::0;;;;;4564:28:12;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;4618:29:12;::::1;;4610:49;;;;-1:-1:-1::0;;;4610:49:12::1;;;;;;;;;4677:14;:40:::0;;-1:-1:-1;;;;;;;;4677:40:12::1;-1:-1:-1::0;;;;;;;;4677:40:12;::::1;;;::::0;;4740:18:::1;::::0;-1:-1:-1;;;;;;;;;;;4740:18:12;::::1;::::0;4748:9;;4740:18:::1;;;;;;;;;;4511:262;-1:-1:-1::0;;;;;;;;;;;4825:13:12::1;;;;;;;;;-1:-1:-1::0;;;;;4825:13:12::1;4865:12;;;;;;;;;-1:-1:-1::0;;;;;4865:12:12::1;4896:10;4924:17;4959:10;4987:7;4791:217;;;;;;;;;;;;;;;;;;;;3963:1056;;;;;;5111:15;::::0;-1:-1:-1;;;5111:15:12;::::1;-1:-1:-1::0;;;;;5111:15:12::1;5096:30:::0;::::1;5092:1052;;;5186:14;::::0;5142:17:::1;::::0;5162:40:::1;::::0;:11;;-1:-1:-1;;;;;5186:14:12::1;5162:40;:15;:40;:::i;:::-;5142:60;;5234:26;5278:13:::0;5309:27:::1;5354:21:::0;5392:35:::1;5406:9;5417;5392:13;:35::i;:::-;5494:15;::::0;5216:211;;-1:-1:-1;5216:211:12;;-1:-1:-1;5216:211:12;-1:-1:-1;5216:211:12;-1:-1:-1;5216:211:12;;5486:42:::1;::::0;-1:-1:-1;;;5494:15:12;::::1;-1:-1:-1::0;;;;;5494:15:12::1;5515:12:::0;5486:28:::1;:42::i;:::-;:64;;5478:94;;;;-1:-1:-1::0;;;5478:94:12::1;;;;;;;;;5605:12;::::0;5587:38:::1;::::0;-1:-1:-1;;;;;5605:12:12::1;5619:5:::0;5587:17:::1;:38::i;:::-;5662:9;5655:17;;;;;;;;5643:8;::::0;-1:-1:-1;;;5643:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;5639:259;;5710:9;5703:17;;;;;;;;5692:8;:28:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;5692:28:12::1;-1:-1:-1::0;;;;;5692:28:12;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;5746:28:12;::::1;;5738:48;;;;-1:-1:-1::0;;;5738:48:12::1;;;;;;;;;5804:13;:38:::0;;-1:-1:-1;;;;;;5804:38:12::1;-1:-1:-1::0;;;;;5804:38:12;::::1;;::::0;;5865:18:::1;::::0;-1:-1:-1;;;;;;;;;;;5865:18:12;::::1;::::0;5873:9;;5865:18:::1;;;;;;;;;;5639:259;-1:-1:-1::0;;;;;;;;;;;5950:12:12::1;;;;;;;;;-1:-1:-1::0;;;;;5950:12:12::1;5989:13;;;;;;;;;-1:-1:-1::0;;;;;5989:13:12::1;6021:9;6048:18;6084:10;6112:7;5916:217;;;;;;;;;;;;;;;;;;;;5092:1052;;;;;;6154:7;:5;:7::i;:::-;6185:59;6199:10;6211:7;6220:10;6232:11;6185:59;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;585:9:76;:17;;-1:-1:-1;;;;585:17:76;;;-1:-1:-1;;;;;3193:3058:12:o;747:27:11:-;;;-1:-1:-1;;;;;747:27:11;;:::o;2037:1150:12:-;515:9:76;;2127:25:12;;-1:-1:-1;;;515:9:76;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:76;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:76;-1:-1:-1;;;548:16:76;;;2191:13:12::1;::::0;;:38:::1;::::0;-1:-1:-1;;;2191:38:12;;548:16:76;;-1:-1:-1;;;;;2191:13:12;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;2223:4:::1;::::0;2191:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2285:15;::::0;2168:61;;-1:-1:-1;2239:18:12::1;::::0;2260:42:::1;::::0;2168:61;;-1:-1:-1;;;2285:15:12;::::1;-1:-1:-1::0;;;;;2285:15:12::1;2260:16;:42::i;:::-;2239:63;;2312:13;2335:22:::0;2367:27:::1;2460:71;2488:9;2511:10;2460:14;:71::i;:::-;2404:127:::0;;-1:-1:-1;2404:127:12;;-1:-1:-1;2404:127:12;;-1:-1:-1;2404:127:12;-1:-1:-1;2542:39:12::1;2559:2:::0;2404:127;2542:16:::1;:39::i;:::-;2608:12;::::0;2591:37:::1;::::0;-1:-1:-1;;;;;2608:12:12::1;2622:5:::0;2591:16:::1;:37::i;:::-;2651:12;::::0;:37:::1;::::0;-1:-1:-1;;;2651:37:12;;2639:64:::1;::::0;-1:-1:-1;;;;;2651:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;2682:4:::1;::::0;2651:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2690:12;2639:11;:64::i;:::-;2762:9;2755:17;;;;;;;;2743:8;::::0;-1:-1:-1;;;2743:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;2739:242;;2806:9;2799:17;;;;;;;;2788:8;:28:::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;2788:28:12::1;-1:-1:-1::0;;;;;2788:28:12;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;2838:29:12;::::1;;2830:49;;;;-1:-1:-1::0;;;2830:49:12::1;;;;;;;;;2893:14;:40:::0;;-1:-1:-1;;;;;;;;2893:40:12::1;-1:-1:-1::0;;;;;;;;2893:40:12;::::1;;;::::0;;2952:18:::1;::::0;-1:-1:-1;;;;;;;;;;;2952:18:12;::::1;::::0;2960:9;;2952:18:::1;;;;;;;;;;2739:242;3026:13;::::0;3062:12:::1;::::0;2996:184:::1;::::0;-1:-1:-1;;;;;;;;;;;2996:184:12;::::1;::::0;-1:-1:-1;;;;;3026:13:12;;::::1;::::0;3062:12;::::1;::::0;3089:10;;3113:17;;3144:10:::1;::::0;3168:2;;2996:184:::1;;853:28:11::0;;;-1:-1:-1;;;;;853:28:11;;:::o;1091:17::-;;;;;;:::o;8776:123:12:-;8820:16;8855:37;8878:13;:11;:13::i;:::-;8855:22;:37::i;1003:160:72:-;784:7;;-1:-1:-1;;;;;784:7:72;770:10;:21;762:43;;;;-1:-1:-1;;;762:43:72;;;;;;;;;1106:7:::1;::::0;;1080:44:::1;::::0;-1:-1:-1;;;;;1080:44:72;;::::1;::::0;1106:7;::::1;::::0;1080:44:::1;::::0;::::1;1134:11;:22:::0;;-1:-1:-1;;;;;;1134:22:72::1;-1:-1:-1::0;;;;;1134:22:72;;;::::1;::::0;;;::::1;::::0;;1003:160::o;1007:40:11:-;;;-1:-1:-1;;;;;1007:40:11;;:::o;1114:18::-;;;-1:-1:-1;;;1114:18:11;;-1:-1:-1;;;;;1114:18:11;;:::o;8288:482:12:-;8381:9;8404;8427;8450;8473:10;8497;8521:9;8555:32;;:::i;:::-;8590:13;:11;:13::i;:::-;8555:48;;8617:5;:7;;;8613:11;;8638:5;:7;;;8634:11;;8659:5;:7;;;8655:11;;8680:5;:7;;;8676:11;;8702:5;:8;;;8697:13;;8725:5;:8;;;8720:13;;8755:5;:7;;;8747:16;;;;;;;;8743:20;;8288:482;;;;;;;;:::o;804:205:77:-;916:86;936:5;966:23;;;991:2;995:5;943:58;;;;;;;;;;;;;;-1:-1:-1;;943:58:77;;;;;;;;;;;;;;-1:-1:-1;;;;;943:58:77;-1:-1:-1;;;;;;943:58:77;;;;;;;;;;916:19;:86::i;:::-;804:205;;;:::o;2348:528:13:-;2423:12;;:37;;-1:-1:-1;;;2423:37:13;;2401:19;;-1:-1:-1;;;;;2423:12:13;;:22;;:37;;2454:4;;2423:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:13;;;:38;;-1:-1:-1;;;2493:38:13;;2401:59;;-1:-1:-1;2470:20:13;;-1:-1:-1;;;;;2493:13:13;;;;:23;;:38;;2525:4;;2493:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:61;-1:-1:-1;;;;;;2550:26:13;;;;;:57;;-1:-1:-1;;;;;;2580:27:13;;;2550:57;2542:78;;;;-1:-1:-1;;;2542:78:13;;;;;;;;;2639:14;:37;;-1:-1:-1;;;;;2686:39:13;;;-1:-1:-1;;;2686:39:13;2639:37;;;-1:-1:-1;;;;;;2639:37:13;;;;;;;2686:39;;;;2735:13;:36;;-1:-1:-1;;;;;2781:38:13;;;-1:-1:-1;;;2781:38:13;-1:-1:-1;;;;;;;;2735:36:13;;;;-1:-1:-1;;;;;;2735:36:13;;;;2781:38;;;;;;;;-1:-1:-1;;;;;2829:40:13;;;2348:528::o;934:134:78:-;992:7;1024:1;1019;:6;;1011:28;;;;-1:-1:-1;;;1011:28:78;;;;;;;;;-1:-1:-1;1056:5:78;;;934:134;;;;;:::o;2690:1359:74:-;2808:25;;;2866:5;:7;;;:21;;;;;;;;;2862:1181;;;2923:42;2943:5;2950:14;2923:19;:42::i;:::-;2903:62;;2986:16;2979:23;;2862:1181;;;3034:16;3023:5;:7;;;:27;;;;;;;;;3019:1024;;;3086:44;3108:5;3115:14;3086:21;:44::i;3019:1024::-;3198:25;3226:21;3239:5;:7;;;3226:5;:8;;;:12;;:21;;;;:::i;:::-;3198:49;;3261:28;3292:21;3304:5;:8;;;3292:5;:7;;;:11;;:21;;;;:::i;:::-;3261:52;;3348:17;3331:14;:34;3327:706;;;3405:44;3427:5;3434:14;3405:21;:44::i;:::-;3385:64;;3474:16;3467:23;;3532:20;3512:17;:40;3508:127;;;3596:20;3576:40;;3508:127;3327:706;;;3677:17;3659:14;:35;3655:378;;;3734:20;3714:40;;3779:10;3772:17;;3655:378;;;3848:129;3894:65;3914:5;3921:37;:14;3940:17;3921:37;:18;:37;:::i;:::-;3894:19;:65::i;:::-;3848:20;;:129;:24;:129;:::i;:::-;3828:149;;4002:16;3995:23;;3655:378;3019:1024;;;2690:1359;;;;;:::o;445:125:68:-;513:7;556:6;539:13;:6;550:1;539:13;:10;:13;:::i;:::-;:24;;;;;;;445:125;-1:-1:-1;;;445:125:68:o;676:2008:74:-;792:26;;;851:5;:7;;;:21;;;;;;;;;847:1831;;;969:40;988:5;995:13;969:18;:40::i;:::-;948:61;;1030:16;1023:23;;847:1831;;;1078:16;1067:5;:7;;;:27;;;;;;;;;1063:1615;;;1110:24;1137:21;1150:5;:7;;;1137:5;:8;;;:12;;:21;;;;:::i;:::-;1110:48;;1172:29;1204:21;1216:5;:8;;;1204:5;:7;;;:11;;:21;;;;:::i;:::-;1172:53;;1350:16;1334:13;:32;1330:1137;;;1459:42;1480:5;1487:13;1459:20;:42::i;:::-;1438:63;;1526:16;1519:23;;1585:21;1564:18;:42;1560:398;;;1918:21;1897:42;;1560:398;1330:1137;;;1999:16;1982:13;:33;1978:489;;;2109:21;2088:42;;2155:10;2148:17;;1978:489;;;2284:127;2331:62;2350:5;2357:35;:13;2375:16;2357:35;:17;:35;:::i;:::-;2331:18;:62::i;2284:127::-;2263:148;;2436:16;2429:23;;1978:489;1063:1615;;;;;2588:42;2609:5;2616:13;2588:20;:42::i;:::-;2567:63;2651:16;;-1:-1:-1;676:2008:74;-1:-1:-1;;;676:2008:74:o;4606:157:13:-;4683:10;;4679:78;;4709:12;;:37;;-1:-1:-1;;;;;4709:12:13;4735:2;4739:6;4709:37;:25;:37;:::i;:::-;4606:157;;:::o;4769:159::-;4847:10;;4843:79;;4873:13;;:38;;-1:-1:-1;;;;;4873:13:13;4900:2;4904:6;4873:38;:26;:38;:::i;6928:588:74:-;7014:16;7003:5;:7;;;:27;;;;;;;;;6999:511;;;7057:169;7116:5;:7;;;7141:21;7153:5;:8;;;7141:5;:7;;;:11;;:21;;;;:::i;:::-;7180:7;;7205;;;;7057:41;:169::i;:::-;7046:8;;;:180;6999:511;;;7258:16;7247:5;:7;;;:27;;;;;;;;;7243:267;;;7301:198;7360:5;:7;;;7385:21;7397:5;:8;;;7385:5;:7;;;:11;;:21;;;;:::i;:::-;7452:7;;7424:36;;:27;:36::i;:::-;7478:5;:7;;;7301:41;:198::i;:::-;7290:8;;;:209;7243:267;6928:588;:::o;1585:264:13:-;-1:-1:-1;;;;;1676:26:13;;;;;:57;;-1:-1:-1;;;;;;1706:27:13;;;1676:57;1668:78;;;;-1:-1:-1;;;1668:78:13;;;;;;;;;1756:14;:37;;-1:-1:-1;;;;;1803:39:13;;;-1:-1:-1;;;1803:39:13;1756:37;;;-1:-1:-1;;;;;;1756:37:13;;;;1803:39;;;;;;;;;1585:264::o;281:217:78:-;339:7;362:6;358:45;;-1:-1:-1;391:1:78;384:8;;358:45;425:5;;;429:1;425;:5;:1;448:5;;;;;:10;440:32;;;;-1:-1:-1;;;440:32:78;;;;;;;;;490:1;281:217;-1:-1:-1;;;281:217:78:o;504:138::-;562:7;593:1;589;:5;581:32;;;;-1:-1:-1;;;581:32:78;;;;;;;;;634:1;630;:5;;;;1855:487:13;1913:12;;:37;;-1:-1:-1;;;1913:37:13;;1891:19;;-1:-1:-1;;;;;1913:12:13;;:22;;:37;;1944:4;;1913:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1983:13;;;:38;;-1:-1:-1;;;1983:38:13;;1891:59;;-1:-1:-1;1960:20:13;;-1:-1:-1;;;;;1983:13:13;;;;:23;;:38;;2015:4;;1983:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:61;-1:-1:-1;;;;;;2048:26:13;;;;;:57;;-1:-1:-1;;;;;;2078:27:13;;;2048:57;2040:78;;;;-1:-1:-1;;;2040:78:13;;;;;;;;;2148:14;;-1:-1:-1;;;;;2148:14:13;2133:29;;2129:97;;2178:14;:37;;-1:-1:-1;;;;;;2178:37:13;-1:-1:-1;;;;;2178:37:13;;;;;2129:97;2255:15;;-1:-1:-1;;;2255:15:13;;-1:-1:-1;;;;;2255:15:13;2239:31;;2235:101;;2286:15;:39;;-1:-1:-1;;;;;2286:39:13;;;-1:-1:-1;;;2286:39:13;;;;;;1855:487;;:::o;7522:611:74:-;7589:7;7623:16;7612:5;:7;;;:27;;;;;;;;;7608:519;;;7715:7;;;;7701:8;;;;7655:9;;7667:66;;7688:35;;7715:7;7688:22;;7701:8;7688:22;:12;:22;:::i;:35::-;7725:5;:7;;;7667:20;:66::i;:::-;7655:78;;7751:66;7784:32;7805:5;:7;;;7814:1;7784:20;:32::i;:::-;7771:7;;;;7751:28;;387:6:68;;7751:28:74;:19;:28;:::i;:::-;:32;:66;:32;:66;:::i;:::-;7747:70;;7838:32;7859:5;:7;;;7868:1;7838:20;:32::i;:::-;7831:39;;;;;7608:519;7961:7;;;;7947:8;;;;7901:9;;7913:66;;7934:35;;7961:7;7934:22;;7947:8;7934:22;:12;:22;:::i;:35::-;7971:5;:7;;;7913:20;:66::i;:::-;7901:78;;7997:66;8030:32;8051:5;:7;;;8060:1;8030:20;:32::i;7997:66::-;7993:70;;8084:32;8105:5;:7;;;8114:1;8084:20;:32::i;7608:519::-;7522:611;;;:::o;2335:1027:77:-;2984:12;2998:23;3033:5;-1:-1:-1;;;;;3025:19:77;3045:4;3025:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2983:67;;;;3068:7;3060:52;;;;-1:-1:-1;;;3060:52:77;;;;;;;;;3127:17;;:21;3123:233;;3279:10;3268:30;;;;;;;;;;;;;;3260:85;;;;-1:-1:-1;;;3260:85:77;;;;;;;;;2335:1027;;;;:::o;4660:431:74:-;4796:7;4867:217;4925:5;:8;;;4951:5;:8;;;4977:14;5009:36;5037:5;:7;;;5009:27;:36::i;:::-;5063:5;:7;;;4867:40;:217::i;6439:432::-;6577:7;6648:216;6706:5;:8;;;6732:5;:7;;;6757:14;6789:36;6817:5;:7;;;6789:27;:36::i;5143:431::-;5281:7;5352:215;5396:5;:8;;;5422:27;5434:14;5422:5;:7;;;:11;;:27;;;;:::i;:::-;5467:7;;;;5520;;5492:36;;:27;:36::i;:::-;5546:5;:7;;;5352:26;:215::i;1074:157:78:-;1132:7;1163:5;;;1186:6;;;;1178:28;;;;-1:-1:-1;;;1178:28:78;;;;;;;;4101:553:74;4235:7;4460:187;4518:5;:8;;;4544:5;:8;;;4570:13;4601:5;:7;;;4626:5;:7;;;4460:40;:187::i;6033:400::-;6169:7;6241:185;6285:5;:8;;;6311:26;6323:13;6311:5;:7;;;:11;;:26;;;;:::i;:::-;6355:7;;;;6380;;6405;;;;6241:26;:185::i;5580:401::-;5716:7;5788:186;5846:5;:8;;;5872:5;:7;;;5897:13;5928:5;:7;;;5953:5;:7;;;5788:40;:186::i;1625:1082:67:-;1777:7;1800;1796:46;;-1:-1:-1;1830:1:67;1823:8;;1796:46;1855:6;1851:82;;1884:38;1891:30;1912:1;1915:5;1891:20;:30::i;:::-;1884:2;;:38;:6;:38;:::i;:::-;1877:45;;;;1851:82;2139:12;;2174:14;2175:1;:5;;2186:1;2174:14;:11;:14;:::i;:::-;2161:27;-1:-1:-1;2202:7:67;2198:267;;387:6:68;2225:22:67;;2198:267;;;2289:5;2283:2;2274:5;2269:2;:10;2268:17;;;;;;:26;2264:201;;;2317:49;:42;432:6:68;2317:20:67;2318:10;;;2334:2;2317:20;:16;:20;:::i;:42::-;:47;:49::i;:::-;2310:56;;2264:201;;;2404:50;:43;432:6:68;2404:21:67;2419:5;2404:10;:2;2411;2404:10;:6;:10;:::i;:::-;:14;:21;:14;:21;:::i;:50::-;2397:57;;2264:201;2474:15;2504:75;387:6:68;2504:54:67;2525:25;:4;387:6:68;2525:25:67;:8;:25;:::i;:::-;2552:1;2556;2552:5;2504:20;:54::i;:75::-;2474:105;;2667:33;2688:2;2692:7;2667:20;:33::i;:::-;2660:40;;;;;1625:1082;;;;;;;:::o;978:124:68:-;1042:7;1068:27;1076:6;1088;1068:27;:19;:27;:::i;711:126::-;779:7;805:25;828:1;805:18;:6;816;805:18;:10;:18;:::i;3534:2457:67:-;3705:7;3737:1;3732:2;:6;3724:33;;;;-1:-1:-1;;;3724:33:67;;;;;;;;;3771:10;3767:49;;-1:-1:-1;3804:1:67;3797:8;;3767:49;3830:6;3826:117;;3892:2;3859:30;3880:1;3883:5;3859:20;:30::i;:::-;:35;:73;;3902:30;3923:1;3926:5;3902:20;:30::i;:::-;3859:73;;;3897:2;3859:73;3852:80;;;;3826:117;387:6:68;3957:1:67;:20;3953:696;;;4257:12;;4300;:1;4306:5;4300:12;:5;:12;:::i;:::-;4283:29;-1:-1:-1;4330:11:67;4326:249;;4368:1;4361:8;;4326:249;;;4420:2;4410:6;4404:2;4395:6;:11;4394:22;;;;;;:28;4390:185;;;4449:29;4467:10;4474:2;;4467:10;:6;:10;:::i;:::-;4450:11;;;;4449:29;:17;:29;:::i;:::-;4442:36;;4390:185;;;4524:36;4557:2;4524:28;4550:1;4524:21;4557:2;4524:28;:5;4534:2;4524:13;:9;:13;:::i;:36::-;4517:43;;4390:185;4595:43;4612:25;:4;387:6:68;4612:25:67;:8;:25;:::i;:::-;4595:12;:2;4602:4;4595:12;:6;:12;:::i;:43::-;4588:50;;;;;;3953:696;4964:13;4980:43;5010:12;:1;5016:5;5010:12;:5;:12;:::i;:::-;4980:25;5002:2;4980:17;4994:2;4980:9;:1;5002:2;4980:9;:5;:9;:::i;:43::-;4964:59;-1:-1:-1;5054:12:67;5069:30;5096:2;5069:22;387:6:68;5089:1:67;5069:22;:19;:22;:::i;:30::-;5054:45;;5121:9;5152:5;5144:4;:13;5140:170;;5180:15;:4;5189:5;5180:15;:8;:15;:::i;:::-;5173:22;;5216:5;5209:12;;5140:170;;;5259:15;:5;5269:4;5259:15;:9;:15;:::i;:::-;5252:22;;5295:4;5288:11;;5140:170;5326:25;:4;387:6:68;5326:25:67;:8;:25;:::i;:::-;5319:32;-1:-1:-1;5388:18:67;5421:134;5459:29;5486:1;5459:22;387:6:68;5479:1:67;5459:22;:19;:22;:::i;:29::-;5506:35;5538:2;5506:27;5527:1;5530:2;5506:20;:27::i;:35::-;5421:20;:134::i;:::-;5388:167;-1:-1:-1;5593:37:67;:30;5388:167;5593:14;5602:4;;5593:14;:8;:14;:::i;:37::-;5580:50;-1:-1:-1;5688:19:67;5710:29;5737:1;5710:22;387:6:68;5730:1:67;5710:22;:19;:22;:::i;:29::-;5688:51;;5759:17;5790:4;5786:130;;;5822:20;:10;5837:4;5822:20;:14;:20;:::i;:::-;5810:32;;5786:130;;;5885:20;:4;5894:10;5885:20;:8;:20;:::i;:::-;5873:32;;5786:130;5933:51;5940:43;5960:9;5971:11;5940:19;:43::i;:::-;5933:2;;:51;:6;:51;:::i;:::-;5926:58;;;;;;;;3534:2457;;;;;;;;:::o;734:597::-;888:7;920:1;915:2;:6;907:33;;;;-1:-1:-1;;;907:33:67;;;;;;;;;950:18;971:17;977:10;:2;984;977:10;:6;:10;:::i;:::-;971:1;;:17;:5;:17;:::i;:::-;950:38;-1:-1:-1;1013:6:67;1009:75;;1042:31;:10;387:6:68;1042:31:67;:14;:31;:::i;:::-;1035:38;;;;;1009:75;1093:16;1112:44;1133:18;1148:2;1133:10;1140:2;;1133:10;:6;:10;:::i;:18::-;1153:2;1112:20;:44::i;:::-;1093:63;;1166:15;1184:33;1205:1;1208:8;1184:20;:33::i;:::-;1166:51;-1:-1:-1;1251:73:67;432:6:68;1251:51:67;1291:10;1251:35;1166:51;1251:22;387:6:68;1271:1:67;1251:22;:19;:22;:::i;:73::-;1244:80;734:597;-1:-1:-1;;;;;;;;;734:597:67:o;1237:198:78:-;1318:1;1326;1322;1318:5;;:9;1352:77;1363:1;1359;:5;1352:77;;;1384:1;1380:5;;1417:1;1412;1408;1404;:5;;;;;;:9;1403:15;;;;;;1399:19;;1352:77;;;1237:198;;;;:::o;843:129:68:-;910:7;936:29;963:1;936:18;:6;947;936:18;:10;:18;:::i;:::-;:26;:29;:26;:29;:::i;648:280:78:-;710:7;729:16;748:9;752:1;755;748:3;:9::i;:::-;729:28;-1:-1:-1;791:12:78;;;787:16;;817:13;;813:109;;-1:-1:-1;864:1:78;853:12;;-1:-1:-1;846:19:78;;813:109;-1:-1:-1;903:8:78;-1:-1:-1;896:15:78;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;32903:54;;34975:35;;34965:2;;35024:1;;35014:12;913:241;;1017:2;1005:9;996:7;992:23;988:32;985:2;;;-1:-1;;1023:12;985:2;1085:53;1130:7;1106:22;1085:53;;1161:1121;;;;;;;;;1384:3;1372:9;1363:7;1359:23;1355:33;1352:2;;;-1:-1;;1391:12;1352:2;1453:53;1498:7;1474:22;1453:53;;;1443:63;;1561:53;1606:7;1543:2;1586:9;1582:22;1561:53;;;1551:63;;1669:53;1714:7;1651:2;1694:9;1690:22;1669:53;;;1659:63;;1777:53;1822:7;1759:2;1802:9;1798:22;1777:53;;;1767:63;;1867:3;1911:9;1907:22;702:20;1876:63;;1995:53;2040:7;1976:3;2020:9;2016:22;1995:53;;;1985:63;;2085:3;2129:9;2125:22;702:20;2094:63;;2194:3;2238:9;2234:22;702:20;2203:63;;1346:936;;;;;;;;;;;;2289:491;;;;2427:2;2415:9;2406:7;2402:23;2398:32;2395:2;;;-1:-1;;2433:12;2395:2;85:6;72:20;97:33;124:5;97:33;;;2485:63;-1:-1;2585:2;2624:22;;72:20;97:33;72:20;97:33;;;2389:391;;2593:63;;-1:-1;;;2693:2;2732:22;;;;702:20;;2389:391;2787:366;;;2908:2;2896:9;2887:7;2883:23;2879:32;2876:2;;;-1:-1;;2914:12;2876:2;2976:53;3021:7;2997:22;2976:53;;;2966:63;3066:2;3105:22;;;;702:20;;-1:-1;;;2870:283;3160:1121;;;;;;;;;3383:3;3371:9;3362:7;3358:23;3354:33;3351:2;;;-1:-1;;3390:12;3351:2;85:6;72:20;97:33;124:5;97:33;;;3442:63;3542:2;3581:22;;702:20;;-1:-1;3650:2;3689:22;;702:20;;3758:2;3797:22;;702:20;;-1:-1;3866:3;3906:22;;702:20;;-1:-1;3975:3;4015:22;;702:20;;-1:-1;4084:3;4124:22;;702:20;;-1:-1;4193:3;4233:22;702:20;;-1:-1;3345:936;-1:-1;;;3345:936;4288:257;;4400:2;4388:9;4379:7;4375:23;4371:32;4368:2;;;-1:-1;;4406:12;4368:2;223:6;217:13;35121:5;32349:13;32342:21;35099:5;35096:32;35086:2;;-1:-1;;35132:12;4552:263;;4667:2;4655:9;4646:7;4642:23;4638:32;4635:2;;;-1:-1;;4673:12;4635:2;-1:-1;850:13;;4629:186;-1:-1;4629:186;4822:741;;;;;;4996:3;4984:9;4975:7;4971:23;4967:33;4964:2;;;-1:-1;;5003:12;4964:2;715:6;702:20;5055:63;;5155:2;5198:9;5194:22;702:20;5163:63;;5281:53;5326:7;5263:2;5306:9;5302:22;5281:53;;;5271:63;;5399:2;5388:9;5384:18;5371:32;5423:18;;5415:6;5412:30;5409:2;;;-1:-1;;5445:12;5409:2;5530:6;5519:9;5515:22;405:3;398:4;390:6;386:17;382:27;372:2;;-1:-1;;413:12;372:2;456:6;443:20;433:30;;5423:18;475:6;472:30;469:2;;;-1:-1;;505:12;469:2;600:3;5155:2;580:17;541:6;566:32;;563:41;560:2;;;-1:-1;;607:12;560:2;5155;541:6;537:17;5473:74;;;;;;;;4958:605;;;;;;;;;15867:271;;6438:5;31519:12;6549:52;6594:6;6589:3;6582:4;6575:5;6571:16;6549:52;;;6613:16;;;;;16001:137;-1:-1;;16001:137;16145:222;-1:-1;;;;;32903:54;;;;5790:37;;16272:2;16257:18;;16243:124;16374:572;-1:-1;;;;;32903:54;;;5649:58;;32903:54;;;;16766:2;16751:18;;5790:37;16849:2;16834:18;;15581:37;16932:2;16917:18;;15581:37;;;;16593:3;16578:19;;16564:382;16953:676;;32914:42;;;;;32265:5;32903:54;5656:3;5649:58;15611:5;17373:2;17362:9;17358:18;15581:37;15611:5;17456:2;17445:9;17441:18;15581:37;17200:3;17493:2;17482:9;17478:18;17471:48;31804:6;17200:3;17189:9;17185:19;31792;34352:6;34347:3;31832:14;17189:9;31832:14;34329:30;34390:16;;;31832:14;34390:16;;;34383:27;;;;34785:7;34769:14;;;-1:-1;;34765:28;6225:39;;;17171:458;-1:-1;;;;17171:458;17636:796;-1:-1;;;;;32903:54;;;5790:37;;32903:54;;;18076:2;18061:18;;5790:37;18159:2;18144:18;;15581:37;;;;18242:2;18227:18;;15581:37;;;;32903:54;;18333:3;18318:19;;5649:58;32903:54;;;32914:42;18402:19;;5790:37;17911:3;17896:19;;17882:550;18439:333;-1:-1;;;;;32903:54;;;;5790:37;;18758:2;18743:18;;15581:37;18594:2;18579:18;;18565:207;18779:210;32349:13;;32342:21;5904:34;;18900:2;18885:18;;18871:118;19532:242;19669:2;19654:18;;32455:45;32494:5;32455:45;;;7056:60;;;19640:134;;19781:310;;19928:2;19949:17;19942:47;7426:5;31519:12;31804:6;19928:2;19917:9;19913:18;31792:19;7520:52;7565:6;31832:14;19917:9;31832:14;19928:2;7546:5;7542:16;7520:52;;;34785:7;34769:14;-1:-1;;34765:28;7584:39;;;;31832:14;7584:39;;19899:192;-1:-1;;19899:192;20098:416;20298:2;20312:47;;;7860:2;20283:18;;;31792:19;-1:-1;;;31832:14;;;7876:40;7935:12;;;20269:245;20521:416;20721:2;20735:47;;;8186:2;20706:18;;;31792:19;-1:-1;;;31832:14;;;8202:36;8257:12;;;20692:245;20944:416;21144:2;21158:47;;;8508:2;21129:18;;;31792:19;-1:-1;;;31832:14;;;8524:37;8580:12;;;21115:245;21367:416;21567:2;21581:47;;;8831:2;21552:18;;;31792:19;-1:-1;;;31832:14;;;8847:37;8903:12;;;21538:245;21790:416;21990:2;22004:47;;;9154:1;21975:18;;;31792:19;-1:-1;;;31832:14;;;9169:32;9220:12;;;21961:245;22213:416;22413:2;22427:47;;;9471:2;22398:18;;;31792:19;9507:28;31832:14;;;9487:49;9555:12;;;22384:245;22636:416;22836:2;22850:47;;;22821:18;;;31792:19;9842:34;31832:14;;;9822:55;9896:12;;;22807:245;23059:416;23259:2;23273:47;;;10147:2;23244:18;;;31792:19;-1:-1;;;31832:14;;;10163:37;10219:12;;;23230:245;23482:416;23682:2;23696:47;;;10470:1;23667:18;;;31792:19;-1:-1;;;31832:14;;;10485:32;10536:12;;;23653:245;23905:416;24105:2;24119:47;;;10787:2;24090:18;;;31792:19;-1:-1;;;31832:14;;;10803:39;10861:12;;;24076:245;24328:416;24528:2;24542:47;;;11112:2;24513:18;;;31792:19;11148:30;31832:14;;;11128:51;11198:12;;;24499:245;24751:416;24951:2;24965:47;;;11449:2;24936:18;;;31792:19;-1:-1;;;31832:14;;;11465:37;11521:12;;;24922:245;25174:416;25374:2;25388:47;;;11772:2;25359:18;;;31792:19;11808:26;31832:14;;;11788:47;11854:12;;;25345:245;25597:416;25797:2;25811:47;;;12105:1;25782:18;;;31792:19;-1:-1;;;31832:14;;;12120:31;12170:12;;;25768:245;26020:416;26220:2;26234:47;;;12421:1;26205:18;;;31792:19;-1:-1;;;31832:14;;;12436:32;12487:12;;;26191:245;26443:416;26643:2;26657:47;;;12738:1;26628:18;;;31792:19;-1:-1;;;31832:14;;;12753:32;12804:12;;;26614:245;26866:416;27066:2;27080:47;;;13055:2;27051:18;;;31792:19;13091:34;31832:14;;;13071:55;-1:-1;;;13146:12;;;13139:34;13192:12;;;27037:245;27289:416;27489:2;27503:47;;;13443:1;27474:18;;;31792:19;-1:-1;;;31832:14;;;13458:32;13509:12;;;27460:245;27712:416;27912:2;27926:47;;;13760:1;27897:18;;;31792:19;-1:-1;;;31832:14;;;13775:32;13826:12;;;27883:245;28135:331;;28316:3;28305:9;28301:19;28293:27;;14131:16;14125:23;15588:3;15581:37;14293:4;14286:5;14282:16;14276:23;14293:4;14357:3;14353:14;15581:37;14444:4;14437:5;14433:16;14427:23;14444:4;14508:3;14504:14;15581:37;14595:4;14588:5;14584:16;14578:23;14595:4;14659:3;14655:14;15581:37;14747:4;14740:5;14736:16;14730:23;14747:4;14811:3;14807:14;15581:37;14899:4;14892:5;14888:16;14882:23;14899:4;14963:3;14959:14;15581:37;15050:4;15043:5;15039:16;15033:23;32455:45;32494:5;32455:45;;;33979:36;15050:4;15124:3;15120:14;7056:60;;28287:179;;;;;28473:222;-1:-1;;;;;32574:44;;;;15234:37;;28600:2;28585:18;;28571:124;28702:222;-1:-1;;;;;32692:46;;;;15354:37;;28829:2;28814:18;;28800:124;28931:218;32822:6;32811:18;;;;15472:36;;29056:2;29041:18;;29027:122;29156:222;15581:37;;;29283:2;29268:18;;29254:124;29385:333;15581:37;;;29704:2;29689:18;;15581:37;29540:2;29525:18;;29511:207;29725:576;15581:37;;;30111:2;30096:18;;15581:37;;;29946:3;29931:19;;32455:45;32494:5;32455:45;;;30204:2;30189:18;;7056:60;;;;30287:2;30272:18;15581:37;29917:384;;-1:-1;;29917:384;30308:892;15581:37;;;30768:2;30753:18;;15581:37;;;;30851:2;30836:18;;15581:37;;;;30934:2;30919:18;;15581:37;;;;31017:3;31002:19;;15581:37;31101:3;31086:19;;15581:37;31185:3;31170:19;;15581:37;30603:3;30588:19;;30574:626;31207:218;33120:18;33109:30;;;;15819:36;;31332:2;31317:18;;31303:122;34425:268;34490:1;34497:101;34511:6;34508:1;34505:13;34497:101;;;34578:11;;;34572:18;34559:11;;;34552:39;34533:2;34526:10;34497:101;;;34613:6;34610:1;34607:13;34604:2;;;-1:-1;;34490:1;34660:16;;34653:27;34474:219;34806:103;34887:1;34880:5;34877:12;34867:2;;34893:9;34916:117;-1:-1;;;;;32903:54;;34975:35;;34965:2;;35024:1;;35014:12",
  "source": "/*\n\n    Copyright 2020 DODO ZOO.\n    SPDX-License-Identifier: Apache-2.0\n\n*/\n\npragma solidity 0.6.9;\npragma experimental ABIEncoderV2;\n\nimport {IFeeRateModel} from \"../../lib/FeeRateModel.sol\";\nimport {IERC20} from \"../../intf/IERC20.sol\";\nimport {DPPTrader} from \"./DPPTrader.sol\";\n\n/**\n * @title DODO PrivatePool\n * @author DODO Breeder\n *\n * @notice DODOPrivatePool initialization\n */\ncontract DPP is DPPTrader {\n    function init(\n        address owner,\n        address maintainer,\n        address baseTokenAddress,\n        address quoteTokenAddress,\n        uint256 lpFeeRate,\n        address mtFeeRateModel,\n        uint256 k,\n        uint256 i\n    ) external {\n        initOwner(owner);\n\n        require(baseTokenAddress != quoteTokenAddress, \"BASE_QUOTE_CAN_NOT_BE_SAME\");\n        _BASE_TOKEN_ = IERC20(baseTokenAddress);\n        _QUOTE_TOKEN_ = IERC20(quoteTokenAddress);\n\n        _MAINTAINER_ = maintainer;\n        _MT_FEE_RATE_MODEL_ = IFeeRateModel(mtFeeRateModel);\n        \n        require(lpFeeRate <= 1e18, \"LP_FEE_RATE_OUT_OF_RANGE\");\n        require(k <= 1e18, \"K_OUT_OF_RANGE\");\n        require(i > 0 && i <= 1e36, \"I_OUT_OF_RANGE\");\n        _LP_FEE_RATE_ = uint64(lpFeeRate);\n        _K_ = uint64(k);\n        _I_ = uint128(i);\n        _resetTargetAndReserve();\n    }\n\n    // ============ Version Control ============\n\n    function version() external pure returns (string memory) {\n        return \"DPP 1.0.0\";\n    }\n}\n",
  "sourcePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
  "ast": {
    "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
    "exportedSymbols": {
      "DPP": [
        2078
      ]
    },
    "id": 2079,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1957,
        "literals": [
          "solidity",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "78:22:9"
      },
      {
        "id": 1958,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:9"
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol",
        "file": "../../lib/FeeRateModel.sol",
        "id": 1960,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 23083,
        "src": "136:57:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1959,
              "name": "IFeeRateModel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "144:13:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol",
        "file": "../../intf/IERC20.sol",
        "id": 1962,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 22076,
        "src": "194:45:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1961,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "202:6:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol",
        "file": "./DPPTrader.sol",
        "id": 1964,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 3180,
        "src": "240:42:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1963,
              "name": "DPPTrader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "248:9:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1966,
              "name": "DPPTrader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3179,
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DPPTrader_$3179",
                "typeString": "contract DPPTrader"
              }
            },
            "id": 1967,
            "nodeType": "InheritanceSpecifier",
            "src": "404:9:9"
          }
        ],
        "contractDependencies": [
          2322,
          3179,
          3760,
          23244,
          24099
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1965,
          "nodeType": "StructuredDocumentation",
          "src": "284:103:9",
          "text": " @title DODO PrivatePool\n @author DODO Breeder\n @notice DODOPrivatePool initialization"
        },
        "fullyImplemented": true,
        "id": 2078,
        "linearizedBaseContracts": [
          2078,
          3179,
          3760,
          2322,
          24099,
          23244
        ],
        "name": "DPP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "666:619:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1987,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "686:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1986,
                      "name": "initOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23198,
                      "src": "676:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "676:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1991,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "711:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1992,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "731:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "711:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424153455f51554f54455f43414e5f4e4f545f42455f53414d45",
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "750:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        },
                        "value": "BASE_QUOTE_CAN_NOT_BE_SAME"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        }
                      ],
                      "id": 1990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "703:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "703:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1997,
                      "name": "_BASE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "789:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1999,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "811:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1998,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22075,
                        "src": "804:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$22075_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "804:24:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "789:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "789:39:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2003,
                      "name": "_QUOTE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "838:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2005,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "861:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2004,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22075,
                        "src": "854:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$22075_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "854:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "838:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "838:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2009,
                      "name": "_MAINTAINER_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "890:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2010,
                      "name": "maintainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1971,
                      "src": "905:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "890:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2012,
                  "nodeType": "ExpressionStatement",
                  "src": "890:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2013,
                      "name": "_MT_FEE_RATE_MODEL_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "925:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2015,
                          "name": "mtFeeRateModel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1979,
                          "src": "961:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2014,
                        "name": "IFeeRateModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22964,
                        "src": "947:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRateModel_$22964_$",
                          "typeString": "type(contract IFeeRateModel)"
                        }
                      },
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "947:29:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "src": "925:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                      "typeString": "contract IFeeRateModel"
                    }
                  },
                  "id": 2018,
                  "nodeType": "ExpressionStatement",
                  "src": "925:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2020,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1003:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1016:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1003:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4645455f524154455f4f55545f4f465f52414e4745",
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:26:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        },
                        "value": "LP_FEE_RATE_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "995:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "995:54:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2027,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "1067:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1072:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1067:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b5f4f55545f4f465f52414e4745",
                        "id": 2030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1078:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        },
                        "value": "K_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1059:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2032,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2034,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "1113:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1117:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1113:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2037,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "1122:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31653336",
                            "id": 2038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1127:4:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                              "typeString": "int_const 1000...(29 digits omitted)...0000"
                            },
                            "value": "1e36"
                          },
                          "src": "1122:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1113:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "495f4f55545f4f465f52414e4745",
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1133:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        },
                        "value": "I_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1105:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2044,
                      "name": "_LP_FEE_RATE_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "1160:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2047,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1183:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1176:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1176:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1160:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2051,
                      "name": "_K_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "1203:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2054,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "1216:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1209:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2052,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1209:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1209:9:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1203:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:15:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "_I_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "1228:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "1242:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1234:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1234:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1228:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2065,
                      "name": "_resetTargetAndReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3469,
                      "src": "1254:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3044ace4",
            "id": 2069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "443:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1971,
                  "mutability": "mutable",
                  "name": "maintainer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "466:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "494:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "528:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "mutability": "mutable",
                  "name": "lpFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "563:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "mtFeeRateModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "590:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "k",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "622:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "641:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:223:9"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:9"
            },
            "scope": 2078,
            "src": "420:865:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1398:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "44505020312e302e30",
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1415:11:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_93ba23fcf25eb25120fec70b9d084262490e03f0ca9e8862c9eaa2c840615060",
                      "typeString": "literal_string \"DPP 1.0.0\""
                    },
                    "value": "DPP 1.0.0"
                  },
                  "functionReturnParameters": 2073,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "1408:18:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "54fd4d50",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "1383:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1382:15:9"
            },
            "scope": 2078,
            "src": "1341:92:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2079,
        "src": "388:1047:9"
      }
    ],
    "src": "78:1358:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
    "exportedSymbols": {
      "DPP": [
        2078
      ]
    },
    "id": 2079,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1957,
        "literals": [
          "solidity",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "78:22:9"
      },
      {
        "id": 1958,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:9"
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol",
        "file": "../../lib/FeeRateModel.sol",
        "id": 1960,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 23083,
        "src": "136:57:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1959,
              "name": "IFeeRateModel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "144:13:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol",
        "file": "../../intf/IERC20.sol",
        "id": 1962,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 22076,
        "src": "194:45:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1961,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "202:6:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol",
        "file": "./DPPTrader.sol",
        "id": 1964,
        "nodeType": "ImportDirective",
        "scope": 2079,
        "sourceUnit": 3180,
        "src": "240:42:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 1963,
              "name": "DPPTrader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "248:9:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1966,
              "name": "DPPTrader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3179,
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DPPTrader_$3179",
                "typeString": "contract DPPTrader"
              }
            },
            "id": 1967,
            "nodeType": "InheritanceSpecifier",
            "src": "404:9:9"
          }
        ],
        "contractDependencies": [
          2322,
          3179,
          3760,
          23244,
          24099
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1965,
          "nodeType": "StructuredDocumentation",
          "src": "284:103:9",
          "text": " @title DODO PrivatePool\n @author DODO Breeder\n @notice DODOPrivatePool initialization"
        },
        "fullyImplemented": true,
        "id": 2078,
        "linearizedBaseContracts": [
          2078,
          3179,
          3760,
          2322,
          24099,
          23244
        ],
        "name": "DPP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2068,
              "nodeType": "Block",
              "src": "666:619:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1987,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1969,
                        "src": "686:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1986,
                      "name": "initOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23198,
                      "src": "676:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "676:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1991,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "711:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1992,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "731:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "711:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424153455f51554f54455f43414e5f4e4f545f42455f53414d45",
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "750:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        },
                        "value": "BASE_QUOTE_CAN_NOT_BE_SAME"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        }
                      ],
                      "id": 1990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "703:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "703:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1997,
                      "name": "_BASE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "789:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1999,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1973,
                          "src": "811:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1998,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22075,
                        "src": "804:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$22075_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "804:24:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "789:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2002,
                  "nodeType": "ExpressionStatement",
                  "src": "789:39:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2003,
                      "name": "_QUOTE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "838:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2005,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1975,
                          "src": "861:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2004,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22075,
                        "src": "854:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$22075_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "854:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$22075",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "838:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$22075",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2008,
                  "nodeType": "ExpressionStatement",
                  "src": "838:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2009,
                      "name": "_MAINTAINER_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "890:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2010,
                      "name": "maintainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1971,
                      "src": "905:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "890:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2012,
                  "nodeType": "ExpressionStatement",
                  "src": "890:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2013,
                      "name": "_MT_FEE_RATE_MODEL_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "925:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2015,
                          "name": "mtFeeRateModel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1979,
                          "src": "961:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2014,
                        "name": "IFeeRateModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22964,
                        "src": "947:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRateModel_$22964_$",
                          "typeString": "type(contract IFeeRateModel)"
                        }
                      },
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "947:29:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "src": "925:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRateModel_$22964",
                      "typeString": "contract IFeeRateModel"
                    }
                  },
                  "id": 2018,
                  "nodeType": "ExpressionStatement",
                  "src": "925:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2020,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1003:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1016:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1003:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4645455f524154455f4f55545f4f465f52414e4745",
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1022:26:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        },
                        "value": "LP_FEE_RATE_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2019,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "995:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "995:54:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2027,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "1067:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1072:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1067:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b5f4f55545f4f465f52414e4745",
                        "id": 2030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1078:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        },
                        "value": "K_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1059:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2032,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2034,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "1113:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1117:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1113:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2037,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1983,
                            "src": "1122:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31653336",
                            "id": 2038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1127:4:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                              "typeString": "int_const 1000...(29 digits omitted)...0000"
                            },
                            "value": "1e36"
                          },
                          "src": "1122:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1113:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "495f4f55545f4f465f52414e4745",
                        "id": 2041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1133:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        },
                        "value": "I_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1105:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1105:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2043,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2044,
                      "name": "_LP_FEE_RATE_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "1160:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2047,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1977,
                          "src": "1183:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1176:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2045,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1176:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1176:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1160:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2050,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2051,
                      "name": "_K_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "1203:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2054,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "1216:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1209:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2052,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1209:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1209:9:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1203:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2057,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:15:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2058,
                      "name": "_I_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "1228:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1983,
                          "src": "1242:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1234:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1234:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1228:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2065,
                      "name": "_resetTargetAndReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3469,
                      "src": "1254:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1254:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2067,
                  "nodeType": "ExpressionStatement",
                  "src": "1254:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3044ace4",
            "id": 2069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1969,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "443:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1971,
                  "mutability": "mutable",
                  "name": "maintainer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "466:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1973,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "494:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "528:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1977,
                  "mutability": "mutable",
                  "name": "lpFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "563:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "mtFeeRateModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "590:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1981,
                  "mutability": "mutable",
                  "name": "k",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "622:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1980,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2069,
                  "src": "641:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:223:9"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:9"
            },
            "scope": 2078,
            "src": "420:865:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2076,
              "nodeType": "Block",
              "src": "1398:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "44505020312e302e30",
                    "id": 2074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1415:11:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_93ba23fcf25eb25120fec70b9d084262490e03f0ca9e8862c9eaa2c840615060",
                      "typeString": "literal_string \"DPP 1.0.0\""
                    },
                    "value": "DPP 1.0.0"
                  },
                  "functionReturnParameters": 2073,
                  "id": 2075,
                  "nodeType": "Return",
                  "src": "1408:18:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "54fd4d50",
            "id": 2077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:2:9"
            },
            "returnParameters": {
              "id": 2073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2072,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2077,
                  "src": "1383:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2071,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1382:15:9"
            },
            "scope": 2078,
            "src": "1341:92:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2079,
        "src": "388:1047:9"
      }
    ],
    "src": "78:1358:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-15T08:55:54.434Z",
  "devdoc": {
    "author": "DODO Breeder",
    "methods": {},
    "title": "DODO PrivatePool"
  },
  "userdoc": {
    "methods": {},
    "notice": "DODOPrivatePool initialization"
  }
}