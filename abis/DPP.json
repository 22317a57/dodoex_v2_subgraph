{
  "contractName": "DPP",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "DODOFlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DODOSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLpFeeRate",
          "type": "uint256"
        }
      ],
      "name": "LpFeeRateChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferPrepared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        }
      ],
      "name": "RChange",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_BASE_PRICE_CUMULATIVE_LAST_",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BASE_RESERVE_",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BASE_TARGET_",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BASE_TOKEN_",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BLOCK_TIMESTAMP_LAST_",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_IS_OPEN_TWAP_",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_I_",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_K_",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_LP_FEE_RATE_",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAINTAINER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MT_FEE_RATE_MODEL_",
      "outputs": [
        {
          "internalType": "contract IFeeRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_NEW_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_OWNER_",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_RESERVE_",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_TARGET_",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_QUOTE_TOKEN_",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_RState_",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBaseInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMidPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "midPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPMMState",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "K",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Q",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "B0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Q0",
              "type": "uint256"
            },
            {
              "internalType": "enum PMMPricing.RState",
              "name": "R",
              "type": "uint8"
            }
          ],
          "internalType": "struct PMMPricing.PMMState",
          "name": "state",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPMMStateForCall",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "K",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Q",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "B0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "Q0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "R",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getQuoteInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserFeeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFeeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "baseReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteReserve",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payBaseAmount",
          "type": "uint256"
        }
      ],
      "name": "querySellBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveQuoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFee",
          "type": "uint256"
        },
        {
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newBaseTarget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "payQuoteAmount",
          "type": "uint256"
        }
      ],
      "name": "querySellQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveBaseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mtFee",
          "type": "uint256"
        },
        {
          "internalType": "enum PMMPricing.RState",
          "name": "newRState",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "newQuoteTarget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ratioSync",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newI",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "newK",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteOutAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBaseReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minQuoteReserve",
          "type": "uint256"
        }
      ],
      "name": "reset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "retrieve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sellBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveQuoteAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sellQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receiveBaseAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "maintainer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "baseTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "lpFeeRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "mtFeeRateModel",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isOpenTWAP",
          "type": "bool"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"DODOFlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"DODOSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLpFeeRate\",\"type\":\"uint256\"}],\"name\":\"LpFeeRateChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferPrepared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"}],\"name\":\"RChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_BASE_PRICE_CUMULATIVE_LAST_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BASE_RESERVE_\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BASE_TARGET_\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BASE_TOKEN_\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BLOCK_TIMESTAMP_LAST_\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_IS_OPEN_TWAP_\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_I_\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_K_\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_LP_FEE_RATE_\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAINTAINER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MT_FEE_RATE_MODEL_\",\"outputs\":[{\"internalType\":\"contract IFeeRateModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_NEW_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_OWNER_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_RESERVE_\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_TARGET_\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_QUOTE_TOKEN_\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_RState_\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMidPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"midPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPMMState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"K\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q0\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"R\",\"type\":\"uint8\"}],\"internalType\":\"struct PMMPricing.PMMState\",\"name\":\"state\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPMMStateForCall\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"K\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Q0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"R\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuoteInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserFeeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFeeRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteReserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"maintainer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mtFeeRateModel\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOpenTWAP\",\"type\":\"bool\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payBaseAmount\",\"type\":\"uint256\"}],\"name\":\"querySellBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveQuoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFee\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newBaseTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"payQuoteAmount\",\"type\":\"uint256\"}],\"name\":\"querySellQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveBaseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mtFee\",\"type\":\"uint256\"},{\"internalType\":\"enum PMMPricing.RState\",\"name\":\"newRState\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newQuoteTarget\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ratioSync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLpFeeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newI\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newK\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteOutAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBaseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minQuoteReserve\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"retrieve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sellBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveQuoteAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sellQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiveBaseAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DODO Breeder\",\"methods\":{},\"title\":\"DODO PrivatePool\"},\"userdoc\":{\"methods\":{},\"notice\":\"DODOPrivatePool initialization\"}},\"settings\":{\"compilationTarget\":{\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol\":\"DPP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol\":{\"keccak256\":\"0x7148b321b18934fc82899c0f45399edde8122b484304a63aa17d385a1a616538\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e63003f4e693dd866b8104493c005eaa56f3c0b09eacba03bde261e286906455\",\"dweb:/ipfs/QmaZCMdnjZuZfEkZmS8VNXgVtjtJixrgyt4dfJ1cdpHXjS\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPStorage.sol\":{\"keccak256\":\"0x613541978a4e22c146f552e90c40bc3f372a86937bd6d9246faa35b5904e1901\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://18240233acac39c7cc6c4fddf87aecefc9125f385b0d3a4406a61d9d5d4adcf8\",\"dweb:/ipfs/QmTW5sVG9y6YirwNqPTDzc5MFfZe7gWpRVpzsCsqTDg1RG\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol\":{\"keccak256\":\"0xd832d909b81ce04bd3c90dc6c999b5e7bb141831d33606661035a8556337b81b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2d4ea4f5345c51cc1ddc4209af3635f91fb3734b7dae65ba5d62e10f74ff96fe\",\"dweb:/ipfs/Qmb4svmHXNWBESPF6ed2BoKa8fLThuk11X1nk6WSDykd7E\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPVault.sol\":{\"keccak256\":\"0xe54f20625cbf4e5581ec63a0176e2312ece6375a03381b39ee0e7394a47d0fcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d53345c39ff9fceb26ac019c93ccf58ce7d3f857176b8c59e3a41e9a036bd15\",\"dweb:/ipfs/QmRndrJCat2uPU5RKHuvTmMYfbq9mkt4wZ86jUCtEUWGvW\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IDODOCallee.sol\":{\"keccak256\":\"0xb5f3ca3e14dcd6fe6f4c961e79a34fd1abe3c3f300c78d23e87b893f572f705a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://89d1c1e165c6325eac56c88ee740a6df64d6447f664b7e82f70233caa26cb94e\",\"dweb:/ipfs/QmRorY6iSDNbSMJBoTqB4iRWz3eQzqLpfGhWCV6JLzNmLH\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol\":{\"keccak256\":\"0x7e5322a79dd4c5662c4a8dc796055ad3e26bc0308e3d6b0eaaad997ce8168c71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://786012a026df43cbe6d1d5833e22e11776173ec3baff48da0f2e4ee53a08b71e\",\"dweb:/ipfs/QmZUzPADDqc2U2RZqFxaikKgdVZYHVNYaJH6YQ2KQ9P9yL\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/DODOMath.sol\":{\"keccak256\":\"0x84d608d971ed27682e249f53726b84b8e38e050d38993c3b9773b8399a448a19\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1497eb99ecad505975793e465e7e674afae0814c3b1c89a578216a7a280d7f44\",\"dweb:/ipfs/QmRbFACoYba8PHdh1h96FueBabXyZ12Jpw7biwW2YLLr6A\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/DecimalMath.sol\":{\"keccak256\":\"0xc40282060987cb9744c910e046473e872921b5736b3f6af7655e191d82b08f81\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://571a42bf7544a1410cd0b50bc7bf7e4bf68fad804877dbe0b9389dd3ca10c579\",\"dweb:/ipfs/QmUoFzJ852KZ7Npaw29C4xxGFGgeCjCVAiR373y2XL2cmz\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol\":{\"keccak256\":\"0x87e685ad3fdc0e23f087e7b438a579e284da6d3ff46eee0ffac40ad06956fd42\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6ba1877c8df8417b30b29250aa2a8a3a51ca7364e960b9d86695cfc7daabfd8f\",\"dweb:/ipfs/QmPmBkEme7FNmLtt2vEfwYekPougQdr6cdUeNmpW57LuN7\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/InitializableOwnable.sol\":{\"keccak256\":\"0x386eea470a3d5b4210e4ac231270810acdaec4bc4bd3358b9e3393b77cbbd0ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f9e4d1ace9ebeeb9cfcae44a57b70cbbea66fb628456fc12d77c256772f1519\",\"dweb:/ipfs/QmaZ28mKecv6G8z89WoB8RqjiL2KGWHKUBNxAj72cPRA26\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/PMMPricing.sol\":{\"keccak256\":\"0x2c5d28f4ae3c02bb8b77a5258f29115982b2076147d646ccfd8150ef54805883\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef20177b7ed874339cb49a26c1971b085e5a5ffa5c5b3cdb8e2efa1b3306df1a\",\"dweb:/ipfs/QmYxikoxigt7BALbCpNLrifMdXdiBMDh87zpHigXJ8rcm5\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/ReentrancyGuard.sol\":{\"keccak256\":\"0xc9c3fc946350fd72083a9d5b1327ff923533ef37b054bc7b6007562b20b0faaf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc140417457139fb240427629673bfaf970c5d4568ad1cfe582764c6e4855bbb\",\"dweb:/ipfs/Qmd7ESYe5kyM6NYiSzeFE74f1YGGPXzpdVd5qnYg2AvgH8\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/SafeERC20.sol\":{\"keccak256\":\"0xe11bb64537b764f7b0b64f817ffa0b4b278c2017474ff985428225b3f0928295\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c756ca959d2326d58ed49b8a2d39100866197596ba09240e4f1bf861399a6e96\",\"dweb:/ipfs/QmdgzWZNT614vRnb5zsDva91bkLpvZmCVV5d6xetqsyedR\"]},\"/Users/niutaotao/projects/dodo/contractV2/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x57d750628881687f826b54f60cbfd46c1a172433eed892bbb123f91869886af1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b40bd7946010ddae9679f36630510217dcaa9cb8643824f9edc8ef52bda95717\",\"dweb:/ipfs/QmZSjpfUGyrmokZyaMc74a8h6zy2qFVECPVP8VfTvzNEFb\"]}},\"version\":1}",
  "bytecode": "0x60806040526001805460ff60b01b1916905534801561001d57600080fd5b5061388c8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c8063880a4d8711610130578063d4b97046116100b8578063f2fde38b1161007c578063f2fde38b1461042b578063f6b06e701461043e578063f811d69214610446578063fd1ed7e91461045b578063fe24cb7f1461047657610227565b8063d4b97046146103f8578063dd93f59a14610400578063e539ef4914610413578063ec2fd46d1461041b578063ee27c6891461042357610227565b8063bbf5ce78116100ff578063bbf5ce78146103ba578063bd6015b4146103c2578063bf357dae146103d5578063c57a5d03146103dd578063d0a494e4146103e557610227565b8063880a4d87146103685780638ff3928c1461037d578063a382d1b914610390578063ab44a7a3146103a557610227565b80634e71e0c8116101b357806371f9100c1161018257806371f9100c1461032857806377f586571461033057806379a04876146103455780637d721504146103585780638456db151461036057610227565b80634e71e0c8146102d357806354fd4d50146102db57806365f6fcbb146102f057806366410a211461030557610227565b80632df6cb48116101fa5780632df6cb481461028557806336223ce91461029a5780634322ec83146102b057806344096609146102b85780634a248d2a146102cb57610227565b806301a3c30b1461022c5780630d0092971461024157806316048bc41461025457806328c4e24c14610272575b600080fd5b61023f61023a366004612ff9565b61047e565b005b61023f61024f366004612fde565b61064f565b61025c6106af565b6040516102699190613243565b60405180910390f35b61023f610280366004613099565b6106be565b61028d61079b565b604051610269919061331f565b6102a26107ab565b60405161026992919061372d565b61025c6107c6565b6102a26102c6366004612fde565b6107d5565b61025c610871565b61023f610880565b6102e361090e565b604051610269919061333f565b6102f8610932565b6040516102699190613724565b6103186103133660046130d9565b6109d9565b604051610269949392919061373b565b6102f8610ad5565b610338610b1e565b60405161026991906136fc565b6103186103533660046130d9565b610b34565b610338610c23565b61025c610c32565b610370610c41565b6040516102699190613796565b61028d61038b366004613103565b610c54565b610398610e65565b60405161026991906136a6565b6103ad610f09565b60405161026991906137a7565b610338610f20565b6102f86103d0366004612fde565b610f36565b6103706111f0565b61023f611203565b61023f6103f3366004613194565b6114d5565b61025c611ac3565b6102f861040e366004612fde565b611ad2565b610338611d77565b6103ad611d86565b6102f8611d96565b61023f610439366004612fde565b611da8565b61025c611e2d565b61044e611e3c565b6040516102699190613710565b610463611e52565b6040516102699796959493929190613766565b6102f8611eb5565b6104878961064f565b856001600160a01b0316876001600160a01b031614156104c25760405162461bcd60e51b81526004016104b990613437565b60405180910390fd5b600380546001600160a01b03808a166001600160a01b03199283161790925560048054898416908316179055600280548b84169083161790556008805492871692909116919091179055670de0b6b3a76400008511156105345760405162461bcd60e51b81526004016104b990613577565b670de0b6b3a764000083111561055c5760405162461bcd60e51b81526004016104b99061354f565b60008211801561057b57506ec097ce7bc90715b34b9f10000000008211155b6105975760405162461bcd60e51b81526004016104b9906133ec565b6008805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff88811691909102919091179091556009805467ffffffffffffffff191691851691909117600160401b600160c01b031916600160401b6001600160801b038516021790556001805460ff60b01b1916600160b01b83158015919091029190911790915561063c57600580546001600160e01b03164263ffffffff16600160e01b021790555b610644611ebb565b505050505050505050565b600154600160a01b900460ff16156106795760405162461bcd60e51b81526004016104b9906134ee565b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6000546001600160a01b031681565b600154600160a81b900460ff16156106e85760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146107275760405162461bcd60e51b81526004016104b9906135d0565b6003546001600160a01b0383811691161480159061075357506004546001600160a01b03838116911614155b61076f5760405162461bcd60e51b81526004016104b990613660565b6107896001600160a01b038316848363ffffffff61206e16565b50506001805460ff60a81b1916905550565b600154600160b01b900460ff1681565b6005546001600160701b0380821692600160701b9092041690565b6002546001600160a01b031681565b600854604051638198edbf60e01b815267ffffffffffffffff600160a01b830416916000916001600160a01b0390911690638198edbf9061081a908690600401613243565b60206040518083038186803b15801561083257600080fd5b505afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a919061317c565b9050915091565b6003546001600160a01b031681565b6001546001600160a01b031633146108aa5760405162461bcd60e51b81526004016104b99061339d565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b604080518082019091526009815268044505020312e302e360bc1b60208201525b90565b6005546003546040516370a0823160e01b81526000926109d4926001600160701b03909116916001600160a01b03909116906370a0823190610978903090600401613243565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c8919061317c565b9063ffffffff6120c916565b905090565b6000806000806109e7612f80565b6109ef610e65565b90506109fb81876120f6565b600854604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610a44908c90600401613243565b60206040518083038186803b158015610a5c57600080fd5b505afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061317c565b9050610aa087826121fc565b9550610ac0866109c8610ab38a866121fc565b8a9063ffffffff6120c916565b96508260a00151935050505092959194509250565b600554600480546040516370a0823160e01b81526000936109d493600160701b9091046001600160701b0316926001600160a01b0316916370a082319161097891309101613243565b600654600160701b90046001600160701b031681565b600080600080610b42612f80565b610b4a610e65565b9050610b568187612226565b600854604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610b9f908c90600401613243565b60206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef919061317c565b9050610bfb87826121fc565b9550610c0e866109c8610ab38a866121fc565b96508260800151935050505092959194509250565b6005546001600160701b031681565b6001546001600160a01b031681565b600554600160e01b900463ffffffff1681565b600154600090600160a81b900460ff1615610c815760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b0390911614610cc05760405162461bcd60e51b81526004016104b9906135d0565b6005546001600160701b03168311801590610ced5750600554600160701b90046001600160701b03168211155b610d095760405162461bcd60e51b81526004016104b990613518565b670de0b6b3a7640000881115610d315760405162461bcd60e51b81526004016104b990613577565b670de0b6b3a7640000861115610d595760405162461bcd60e51b81526004016104b99061354f565b600087118015610d7857506ec097ce7bc90715b34b9f10000000008711155b610d945760405162461bcd60e51b81526004016104b9906133ec565b6008805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8b811691909102919091179091556009805467ffffffffffffffff191691881691909117600160401b600160c01b031916600160401b6001600160801b038a1602179055610e028986612327565b610e0c898561234a565b610e14611ebb565b7f9950d5a2f2c7264863d40100bf993f0cdbc4711806caba6284d07e80fd50087988604051610e439190613724565b60405180910390a150506001805460ff60a81b19168155979650505050505050565b610e6d612f80565b600954600160401b81046001600160801b0316825267ffffffffffffffff1660208201526005546001600160701b038082166040840152600160701b918290048116606084015260065480821660808501529182041660a0830152600160e01b900463ffffffff166002811115610ee057fe5b8160c001906002811115610ef057fe5b90816002811115610efd57fe5b90525061092f8161236d565b600854600160a01b900467ffffffffffffffff1681565b600554600160701b90046001600160701b031681565b600154600090600160a81b900460ff1615610f635760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b1790556003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610fa7903090600401613243565b60206040518083038186803b158015610fbf57600080fd5b505afa158015610fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff7919061317c565b60055490915060009061101a9083906001600160701b031663ffffffff6120c916565b9050600080600061102b3285610b34565b9298509094509092509050611040878761234a565b600254611056906001600160a01b03168461234a565b80600281111561106257fe5b600654600160e01b900463ffffffff90811691161461110f576001600160701b038211156110a25760405162461bcd60e51b81526004016104b9906135ae565b600680546001600160701b0319166001600160701b0384161790558060028111156110c957fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915281604051611106919061332a565b60405180910390a15b600480546040516370a0823160e01b81526111979288926001600160a01b0316916370a082319161114291309101613243565b60206040518083038186803b15801561115a57600080fd5b505afa15801561116e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611192919061317c565b612417565b600354600454604051600080516020613837833981519152926111d0926001600160a01b039182169291169088908b9033908e906132cc565b60405180910390a150506001805460ff60a81b1916905550919392505050565b600654600160e01b900463ffffffff1681565b600154600160a81b900460ff161561122d5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b039091161461126c5760405162461bcd60e51b81526004016104b9906135d0565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a082319061129d903090600401613243565b60206040518083038186803b1580156112b557600080fd5b505afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161132291309101613243565b60206040518083038186803b15801561133a57600080fd5b505afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611372919061317c565b90506001600160701b03821180159061139257506001600160701b038111155b6113ae5760405162461bcd60e51b81526004016104b9906135ae565b6005546001600160701b03168214611423576005546006546113f3916001600160701b03908116916113e791168563ffffffff6124a416565b9063ffffffff6124e516565b600680546001600160701b03199081166001600160701b0393841617909155600580549091169184169190911790555b600554600160701b90046001600160701b031681146114aa5760055460065461146d916001600160701b03600160701b918290048116926113e7929004168463ffffffff6124a416565b600680546001600160701b03928316600160701b908102600160701b600160e01b0319928316179092556005805493851690920292169190911790555b600154600160b01b900460ff16156114c4576114c461250f565b50506001805460ff60a81b19169055565b600154600160a81b900460ff16156114ff5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b17905561151c8386612327565b611526838561234a565b801561159357604051637ed1f1dd60e01b81526001600160a01b03841690637ed1f1dd906115609033908990899088908890600401613280565b600060405180830381600087803b15801561157a57600080fd5b505af115801561158e573d6000803e3d6000fd5b505050505b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906115c4903090600401613243565b60206040518083038186803b1580156115dc57600080fd5b505afa1580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611614919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161164991309101613243565b60206040518083038186803b15801561166157600080fd5b505afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611699919061317c565b6005549091506001600160701b0316821015806116c85750600554600160701b90046001600160701b03168110155b6116e45760405162461bcd60e51b81526004016104b990613372565b6005546001600160701b03168210156118a757600554600090611718908390600160701b90046001600160701b03166120c9565b905060008060008061172a32866109d9565b600554939750919550935091508490611752906001600160701b03168963ffffffff6120c916565b11156117705760405162461bcd60e51b81526004016104b990613372565b600254611786906001600160a01b031684612327565b81600281111561179257fe5b600654600160e01b900463ffffffff908116911614611848576001600160701b038111156117d25760405162461bcd60e51b81526004016104b9906135ae565b60068054600160701b600160e01b031916600160701b6001600160701b0384160217905581600281111561180257fe5b6006601c6101000a81548163ffffffff021916908363ffffffff1602179055506000805160206138178339815191528260405161183f919061332a565b60405180910390a15b600080516020613837833981519152600460009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168787338f604051611899969594939291906132cc565b60405180910390a150505050505b600554600160701b90046001600160701b0316811015611a68576005546000906118e19084906001600160701b031663ffffffff6120c916565b90506000806000806118f33286610b34565b60055493975091955093509150849061191c90600160701b90046001600160701b0316886120c9565b111561193a5760405162461bcd60e51b81526004016104b990613372565b600254611950906001600160a01b03168461234a565b81600281111561195c57fe5b600654600160e01b900463ffffffff908116911614611a09576001600160701b0381111561199c5760405162461bcd60e51b81526004016104b9906135ae565b600680546001600160701b0319166001600160701b0383161790558160028111156119c357fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915282604051611a00919061332a565b60405180910390a15b600080516020613837833981519152600360009054906101000a90046001600160a01b0316600460009054906101000a90046001600160a01b03168787338f604051611a5a969594939291906132cc565b60405180910390a150505050505b611a706125a4565b7f0b82e93068db15abd9fbb2682c65462ea8a0a10582dce93a5664818e296f54eb33868989604051611aa59493929190613257565b60405180910390a150506001805460ff60a81b191690555050505050565b6004546001600160a01b031681565b600154600090600160a81b900460ff1615611aff5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191611b4491309101613243565b60206040518083038186803b158015611b5c57600080fd5b505afa158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b94919061317c565b600554909150600090611bb8908390600160701b90046001600160701b03166120c9565b90506000806000611bc932856109d9565b9298509094509092509050611bde8787612327565b600254611bf4906001600160a01b031684612327565b806002811115611c0057fe5b600654600160e01b900463ffffffff908116911614611cb6576001600160701b03821115611c405760405162461bcd60e51b81526004016104b9906135ae565b60068054600160701b600160e01b031916600160701b6001600160701b03851602179055806002811115611c7057fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915281604051611cad919061332a565b60405180910390a15b6003546040516370a0823160e01b8152611d3e916001600160a01b0316906370a0823190611ce8903090600401613243565b60206040518083038186803b158015611d0057600080fd5b505afa158015611d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d38919061317c565b86612417565b600454600354604051600080516020613837833981519152926111d0926001600160a01b039182169291169088908b9033908e906132cc565b6006546001600160701b031681565b60095467ffffffffffffffff1681565b60006109d4611da3610e65565b61276c565b6000546001600160a01b03163314611dd25760405162461bcd60e51b81526004016104b9906135d0565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6008546001600160a01b031681565b600954600160401b90046001600160801b031681565b6000806000806000806000611e65612f80565b611e6d610e65565b905080600001519750806020015196508060400151955080606001519450806080015193508060a0015192508060c001516002811115611ea957fe5b91505090919293949596565b60075481565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611eec903090600401613243565b60206040518083038186803b158015611f0457600080fd5b505afa158015611f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3c919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611f7191309101613243565b60206040518083038186803b158015611f8957600080fd5b505afa158015611f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc1919061317c565b90506001600160701b038211801590611fe157506001600160701b038111155b611ffd5760405162461bcd60e51b81526004016104b9906135ae565b600580546001600160701b03838116600160701b02600160701b600160e01b03199186166001600160701b031993841681178316821790945560068054909316909317169091176001600160e01b0316905560015460ff600160b01b909104161561206a5761206a61250f565b5050565b6120c48363a9059cbb60e01b848460405160240161208d929190613306565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612863565b505050565b6000828211156120eb5760405162461bcd60e51b81526004016104b9906134cb565b508082035b92915050565b600080808460c00151600281111561210a57fe5b14156121255761211a8484612920565b9150600190506121f5565b60018460c00151600281111561213757fe5b14156121475761211a8484612947565b600061216485606001518660a001516120c990919063ffffffff16565b90506000612183866080015187604001516120c990919063ffffffff16565b9050818510156121ae576121978686612964565b935060029250808411156121a9578093505b6121f2565b818514156121c257809350600092506121f2565b6121eb6121de876121d9888663ffffffff6120c916565b612920565b829063ffffffff61299f16565b9350600192505b50505b9250929050565b6000670de0b6b3a7640000612217848463ffffffff6124a416565b8161221e57fe5b049392505050565b600080808460c00151600281111561223a57fe5b14156122555761224a84846129c4565b9150600290506121f5565b60018460c00151600281111561226757fe5b141561231257600061228a856040015186608001516120c990919063ffffffff16565b905060006122a98660a0015187606001516120c990919063ffffffff16565b9050818510156122d4576122bd86866129e3565b935060019250808411156122cf578093505b61230b565b818514156122e8578093506000925061230b565b6123046121de876122ff888663ffffffff6120c916565b6129c4565b9350600292505b50506121f5565b61231c8484612a15565b946002945092505050565b801561206a5760035461206a906001600160a01b0316838363ffffffff61206e16565b801561206a5760045461206a906001600160a01b0316838363ffffffff61206e16565b60028160c00151600281111561237f57fe5b14156123be576123b481606001516123a8836080015184604001516120c990919063ffffffff16565b83516020850151612a34565b60a0820152612414565b60018160c0015160028111156123d057fe5b14156124145761240e81604001516123f98360a0015184606001516120c990919063ffffffff16565b835161240490612b5a565b8460200151612a34565b60808201525b50565b6001600160701b03821180159061243557506001600160701b038111155b6124515760405162461bcd60e51b81526004016104b9906135ae565b600580546001600160701b03838116600160701b02600160701b600160e01b03199186166001600160701b0319909316929092171617905560015460ff600160b01b909104161561206a5761206a61250f565b6000826124b3575060006120f0565b828202828482816124c057fe5b04146124de5760405162461bcd60e51b81526004016104b990613683565b9392505050565b60008082116125065760405162461bcd60e51b81526004016104b9906134a3565b81838161221e57fe5b60055463ffffffff42811691600160e01b9004811682039081161580159061254157506005546001600160701b031615155b801561255e5750600554600160701b90046001600160701b031615155b1561257e578063ffffffff16612572611d96565b60078054919092020190555b506005805463ffffffff909216600160e01b026001600160e01b03909216919091179055565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906125d5903090600401613243565b60206040518083038186803b1580156125ed57600080fd5b505afa158015612601573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612625919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161265a91309101613243565b60206040518083038186803b15801561267257600080fd5b505afa158015612686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126aa919061317c565b90506001600160701b0382118015906126ca57506001600160701b038111155b6126e65760405162461bcd60e51b81526004016104b9906135ae565b6005546001600160701b0316821461271457600580546001600160701b0319166001600160701b0384161790555b600554600160701b90046001600160701b031681146127525760058054600160701b600160e01b031916600160701b6001600160701b038416021790555b600154600160b01b900460ff161561206a5761206a61250f565b600060028260c00151600281111561278057fe5b141561280b57606082015160a08301516000916127b6916127ac91906113e7908063ffffffff6124a416565b8460600151612b7b565b90506127f36127c98460200151836121fc565b60208501516127e790670de0b6b3a76400009063ffffffff6120c916565b9063ffffffff61299f16565b9050612803836000015182612b7b565b91505061285e565b6040820151608083015160009161283b9161283191906113e7908063ffffffff6124a416565b8460400151612b7b565b905061284e6127c98460200151836121fc565b90506128038360000151826121fc565b919050565b60006060836001600160a01b03168360405161287f9190613227565b6000604051808303816000865af19150503d80600081146128bc576040519150601f19603f3d011682016040523d82523d6000602084013e6128c1565b606091505b5091509150816128e35760405162461bcd60e51b81526004016104b99061346e565b80511561291a57808060200190518101906128fe9190613160565b61291a5760405162461bcd60e51b81526004016104b990613616565b50505050565b60006124de836080015184608001518461293d8760000151612b5a565b8760200151612b99565b60006124de836080015184604001518461293d8760000151612b5a565b60006124de8360a0015161298584866060015161299f90919063ffffffff16565b6060860151865161299590612b5a565b8760200151612e19565b6000828201838110156124de5760405162461bcd60e51b81526004016104b9906135f3565b60006124de8360a001518460a001518486600001518760200151612b99565b60006124de8360800151612a0484866040015161299f90919063ffffffff16565b604086015186516020880151612e19565b60006124de8360a0015184606001518486600001518760200151612b99565b600084612a4357506000612b52565b81612a6957612a62612a5584866121fc565b869063ffffffff61299f16565b9050612b52565b600080612a7f600485028663ffffffff6124a416565b905080612a9657670de0b6b3a76400009150612b16565b858187830281612aa257fe5b041415612add57612ad6612ad16ec097ce7bc90715b34b9f10000000006127e7848a028b63ffffffff6124e516565b612ef2565b9150612b16565b612b13612ad16ec097ce7bc90715b34b9f10000000006127e789612b07868d63ffffffff6124e516565b9063ffffffff6124a416565b91505b6000612b40670de0b6b3a76400006127e7612b37868363ffffffff6120c916565b88600202612b7b565b9050612b4c88826121fc565b93505050505b949350505050565b60006120f06ec097ce7bc90715b34b9f10000000008363ffffffff6124e516565b60006124de826113e785670de0b6b3a764000063ffffffff6124a416565b6000808611612bba5760405162461bcd60e51b81526004016104b9906133c4565b83612bc757506000612e10565b81612bf45784612bd784866121fc565b11612beb57612be683856121fc565b612bed565b845b9050612e10565b670de0b6b3a7640000821415612cb457600080612c17858763ffffffff6124a416565b905080612c275760009150612c80565b868188830281612c3357fe5b041415612c6357612c5c612c4d898063ffffffff6124a416565b8289029063ffffffff6124e516565b9150612c80565b612c7d886113e787612b0783838c8e63ffffffff6124a416565b91505b612cab612c9b83670de0b6b3a764000063ffffffff61299f16565b6113e7898563ffffffff6124a416565b92505050612e10565b6000612ce1612cc9858763ffffffff6124a416565b6127e789612b078a6113e7898463ffffffff6124a416565b90506000612d0187612b07670de0b6b3a76400008763ffffffff6120c916565b90506000828210612d1757508190036000612d1d565b50810360015b612d3582670de0b6b3a764000063ffffffff6124e516565b91506000612d6c612d596004612b07670de0b6b3a76400008a63ffffffff6120c916565b612d678c612b078a8f6121fc565b6121fc565b9050612d85612ad1826127e7868063ffffffff6124a416565b90506000612da66002612b07670de0b6b3a76400008a63ffffffff6120c916565b905060008315612dc757612dc0838663ffffffff6120c916565b9050612dda565b612dd7858463ffffffff61299f16565b90505b6000612de68284612f29565b90508b811115612e00576000975050505050505050612e10565b8b039650612e1095505050505050565b95945050505050565b6000808611612e3a5760405162461bcd60e51b81526004016104b9906133c4565b6000612e5c612e4f878763ffffffff6120c916565b859063ffffffff6124a416565b905082612e8357612e7b81670de0b6b3a764000063ffffffff6124e516565b915050612e10565b6000612ea2612e9c886113e78b8063ffffffff6124a416565b87612b7b565b90506000612eb085836121fc565b9050612ee56ec097ce7bc90715b34b9f10000000006113e785612b07856127e7670de0b6b3a76400008c63ffffffff6120c916565b9998505050505050505050565b80600160028204015b81811015612f2357809150600281828581612f1257fe5b040181612f1b57fe5b049050612efb565b50919050565b60006124de82612f4785670de0b6b3a764000063ffffffff6124a416565b9063ffffffff612f5316565b600080612f6084846124e5565b905082810284038015612f78575060010190506120f0565b5090506120f0565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006002811115612fc257fe5b905290565b80356001600160a01b03811681146120f057600080fd5b600060208284031215612fef578081fd5b6124de8383612fc7565b60008060008060008060008060006101208a8c031215613017578485fd5b8935613022816137f3565b985060208a0135613032816137f3565b975060408a0135613042816137f3565b965060608a0135613052816137f3565b955060808a0135945060a08a0135613069816137f3565b935060c08a0135925060e08a013591506101008a013561308881613808565b809150509295985092959850929598565b6000806000606084860312156130ad578283fd5b83356130b8816137f3565b925060208401356130c8816137f3565b929592945050506040919091013590565b600080604083850312156130eb578182fd5b6130f58484612fc7565b946020939093013593505050565b600080600080600080600080610100898b03121561311f578384fd5b883561312a816137f3565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b600060208284031215613171578081fd5b81516124de81613808565b60006020828403121561318d578081fd5b5051919050565b6000806000806000608086880312156131ab578081fd5b85359450602086013593506131c38760408801612fc7565b9250606086013567ffffffffffffffff808211156131df578283fd5b81880189601f8201126131f0578384fd5b8035925081831115613200578384fd5b896020848301011115613211578384fd5b6020810194505050809150509295509295909350565b600082516132398184602087016137c7565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208101613337836137bc565b825292915050565b600060208252825180602084015261335e8160408501602087016137c7565b601f01601f19169190910160400192915050565b60208082526011908201527011931054d217d313d05397d19052531151607a1b604082015260600190565b6020808252600d908201526c494e56414c49445f434c41494d60981b604082015260600190565b6020808252600e908201526d5441524745545f49535f5a45524f60901b604082015260600190565b6020808252600e908201526d495f4f55545f4f465f52414e474560901b604082015260600190565b60208082526009908201526814915153951490539560ba1b604082015260600190565b6020808252601a908201527f424153455f51554f54455f43414e5f4e4f545f42455f53414d45000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252600e908201526d2224ab24a224a723afa2a92927a960911b604082015260600190565b60208082526009908201526829aaa12fa2a92927a960b91b604082015260600190565b60208082526010908201526f1113d113d7d25392551250531256915160821b604082015260600190565b6020808252601c908201527f524553455256455f414d4f554e545f49535f4e4f545f454e4f55474800000000604082015260600190565b6020808252600e908201526d4b5f4f55545f4f465f52414e474560901b604082015260600190565b60208082526018908201527f4c505f4645455f524154455f4f55545f4f465f52414e47450000000000000000604082015260600190565b6020808252600890820152674f564552464c4f5760c01b604082015260600190565b6020808252600990820152682727aa2fa7aba722a960b91b604082015260600190565b60208082526009908201526820a2222fa2a92927a960b91b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600990820152681554d157d49154d15560ba1b604082015260600190565b60208082526009908201526826aaa62fa2a92927a960b91b604082015260600190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a08301526136f160c08401516137bc565b60c083015292915050565b6001600160701b0391909116815260200190565b6001600160801b0391909116815260200190565b90815260200190565b918252602082015260400190565b8481526020810184905260808101613752846137bc565b604083015282606083015295945050505050565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b63ffffffff91909116815260200190565b67ffffffffffffffff91909116815260200190565b806003811061285e57fe5b60005b838110156137e25781810151838201526020016137ca565b8381111561291a5750506000910152565b6001600160a01b038116811461241457600080fd5b801515811461241457600080fdfedf176ad18be4f9f32efaa32f06e9d1175476504739a745f1399a6d3fa4b75917c2c0245e056d5fb095f04cd6373bc770802ebd1e6c918eb78fdef843cdb37b0fa264697066735822122078ef1b685fea409e11e1dc962cd769d9410ea3a2e771919afcdc33688e7d541d64736f6c63430006090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102275760003560e01c8063880a4d8711610130578063d4b97046116100b8578063f2fde38b1161007c578063f2fde38b1461042b578063f6b06e701461043e578063f811d69214610446578063fd1ed7e91461045b578063fe24cb7f1461047657610227565b8063d4b97046146103f8578063dd93f59a14610400578063e539ef4914610413578063ec2fd46d1461041b578063ee27c6891461042357610227565b8063bbf5ce78116100ff578063bbf5ce78146103ba578063bd6015b4146103c2578063bf357dae146103d5578063c57a5d03146103dd578063d0a494e4146103e557610227565b8063880a4d87146103685780638ff3928c1461037d578063a382d1b914610390578063ab44a7a3146103a557610227565b80634e71e0c8116101b357806371f9100c1161018257806371f9100c1461032857806377f586571461033057806379a04876146103455780637d721504146103585780638456db151461036057610227565b80634e71e0c8146102d357806354fd4d50146102db57806365f6fcbb146102f057806366410a211461030557610227565b80632df6cb48116101fa5780632df6cb481461028557806336223ce91461029a5780634322ec83146102b057806344096609146102b85780634a248d2a146102cb57610227565b806301a3c30b1461022c5780630d0092971461024157806316048bc41461025457806328c4e24c14610272575b600080fd5b61023f61023a366004612ff9565b61047e565b005b61023f61024f366004612fde565b61064f565b61025c6106af565b6040516102699190613243565b60405180910390f35b61023f610280366004613099565b6106be565b61028d61079b565b604051610269919061331f565b6102a26107ab565b60405161026992919061372d565b61025c6107c6565b6102a26102c6366004612fde565b6107d5565b61025c610871565b61023f610880565b6102e361090e565b604051610269919061333f565b6102f8610932565b6040516102699190613724565b6103186103133660046130d9565b6109d9565b604051610269949392919061373b565b6102f8610ad5565b610338610b1e565b60405161026991906136fc565b6103186103533660046130d9565b610b34565b610338610c23565b61025c610c32565b610370610c41565b6040516102699190613796565b61028d61038b366004613103565b610c54565b610398610e65565b60405161026991906136a6565b6103ad610f09565b60405161026991906137a7565b610338610f20565b6102f86103d0366004612fde565b610f36565b6103706111f0565b61023f611203565b61023f6103f3366004613194565b6114d5565b61025c611ac3565b6102f861040e366004612fde565b611ad2565b610338611d77565b6103ad611d86565b6102f8611d96565b61023f610439366004612fde565b611da8565b61025c611e2d565b61044e611e3c565b6040516102699190613710565b610463611e52565b6040516102699796959493929190613766565b6102f8611eb5565b6104878961064f565b856001600160a01b0316876001600160a01b031614156104c25760405162461bcd60e51b81526004016104b990613437565b60405180910390fd5b600380546001600160a01b03808a166001600160a01b03199283161790925560048054898416908316179055600280548b84169083161790556008805492871692909116919091179055670de0b6b3a76400008511156105345760405162461bcd60e51b81526004016104b990613577565b670de0b6b3a764000083111561055c5760405162461bcd60e51b81526004016104b99061354f565b60008211801561057b57506ec097ce7bc90715b34b9f10000000008211155b6105975760405162461bcd60e51b81526004016104b9906133ec565b6008805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff88811691909102919091179091556009805467ffffffffffffffff191691851691909117600160401b600160c01b031916600160401b6001600160801b038516021790556001805460ff60b01b1916600160b01b83158015919091029190911790915561063c57600580546001600160e01b03164263ffffffff16600160e01b021790555b610644611ebb565b505050505050505050565b600154600160a01b900460ff16156106795760405162461bcd60e51b81526004016104b9906134ee565b6001805460ff60a01b1916600160a01b179055600080546001600160a01b039092166001600160a01b0319909216919091179055565b6000546001600160a01b031681565b600154600160a81b900460ff16156106e85760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b03909116146107275760405162461bcd60e51b81526004016104b9906135d0565b6003546001600160a01b0383811691161480159061075357506004546001600160a01b03838116911614155b61076f5760405162461bcd60e51b81526004016104b990613660565b6107896001600160a01b038316848363ffffffff61206e16565b50506001805460ff60a81b1916905550565b600154600160b01b900460ff1681565b6005546001600160701b0380821692600160701b9092041690565b6002546001600160a01b031681565b600854604051638198edbf60e01b815267ffffffffffffffff600160a01b830416916000916001600160a01b0390911690638198edbf9061081a908690600401613243565b60206040518083038186803b15801561083257600080fd5b505afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a919061317c565b9050915091565b6003546001600160a01b031681565b6001546001600160a01b031633146108aa5760405162461bcd60e51b81526004016104b99061339d565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b604080518082019091526009815268044505020312e302e360bc1b60208201525b90565b6005546003546040516370a0823160e01b81526000926109d4926001600160701b03909116916001600160a01b03909116906370a0823190610978903090600401613243565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c8919061317c565b9063ffffffff6120c916565b905090565b6000806000806109e7612f80565b6109ef610e65565b90506109fb81876120f6565b600854604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610a44908c90600401613243565b60206040518083038186803b158015610a5c57600080fd5b505afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061317c565b9050610aa087826121fc565b9550610ac0866109c8610ab38a866121fc565b8a9063ffffffff6120c916565b96508260a00151935050505092959194509250565b600554600480546040516370a0823160e01b81526000936109d493600160701b9091046001600160701b0316926001600160a01b0316916370a082319161097891309101613243565b600654600160701b90046001600160701b031681565b600080600080610b42612f80565b610b4a610e65565b9050610b568187612226565b600854604051638198edbf60e01b815292975090945067ffffffffffffffff600160a01b820416916000916001600160a01b031690638198edbf90610b9f908c90600401613243565b60206040518083038186803b158015610bb757600080fd5b505afa158015610bcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bef919061317c565b9050610bfb87826121fc565b9550610c0e866109c8610ab38a866121fc565b96508260800151935050505092959194509250565b6005546001600160701b031681565b6001546001600160a01b031681565b600554600160e01b900463ffffffff1681565b600154600090600160a81b900460ff1615610c815760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b0390911614610cc05760405162461bcd60e51b81526004016104b9906135d0565b6005546001600160701b03168311801590610ced5750600554600160701b90046001600160701b03168211155b610d095760405162461bcd60e51b81526004016104b990613518565b670de0b6b3a7640000881115610d315760405162461bcd60e51b81526004016104b990613577565b670de0b6b3a7640000861115610d595760405162461bcd60e51b81526004016104b99061354f565b600087118015610d7857506ec097ce7bc90715b34b9f10000000008711155b610d945760405162461bcd60e51b81526004016104b9906133ec565b6008805467ffffffffffffffff60a01b1916600160a01b67ffffffffffffffff8b811691909102919091179091556009805467ffffffffffffffff191691881691909117600160401b600160c01b031916600160401b6001600160801b038a1602179055610e028986612327565b610e0c898561234a565b610e14611ebb565b7f9950d5a2f2c7264863d40100bf993f0cdbc4711806caba6284d07e80fd50087988604051610e439190613724565b60405180910390a150506001805460ff60a81b19168155979650505050505050565b610e6d612f80565b600954600160401b81046001600160801b0316825267ffffffffffffffff1660208201526005546001600160701b038082166040840152600160701b918290048116606084015260065480821660808501529182041660a0830152600160e01b900463ffffffff166002811115610ee057fe5b8160c001906002811115610ef057fe5b90816002811115610efd57fe5b90525061092f8161236d565b600854600160a01b900467ffffffffffffffff1681565b600554600160701b90046001600160701b031681565b600154600090600160a81b900460ff1615610f635760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b1790556003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610fa7903090600401613243565b60206040518083038186803b158015610fbf57600080fd5b505afa158015610fd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff7919061317c565b60055490915060009061101a9083906001600160701b031663ffffffff6120c916565b9050600080600061102b3285610b34565b9298509094509092509050611040878761234a565b600254611056906001600160a01b03168461234a565b80600281111561106257fe5b600654600160e01b900463ffffffff90811691161461110f576001600160701b038211156110a25760405162461bcd60e51b81526004016104b9906135ae565b600680546001600160701b0319166001600160701b0384161790558060028111156110c957fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915281604051611106919061332a565b60405180910390a15b600480546040516370a0823160e01b81526111979288926001600160a01b0316916370a082319161114291309101613243565b60206040518083038186803b15801561115a57600080fd5b505afa15801561116e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611192919061317c565b612417565b600354600454604051600080516020613837833981519152926111d0926001600160a01b039182169291169088908b9033908e906132cc565b60405180910390a150506001805460ff60a81b1916905550919392505050565b600654600160e01b900463ffffffff1681565b600154600160a81b900460ff161561122d5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600054336001600160a01b039091161461126c5760405162461bcd60e51b81526004016104b9906135d0565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a082319061129d903090600401613243565b60206040518083038186803b1580156112b557600080fd5b505afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161132291309101613243565b60206040518083038186803b15801561133a57600080fd5b505afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611372919061317c565b90506001600160701b03821180159061139257506001600160701b038111155b6113ae5760405162461bcd60e51b81526004016104b9906135ae565b6005546001600160701b03168214611423576005546006546113f3916001600160701b03908116916113e791168563ffffffff6124a416565b9063ffffffff6124e516565b600680546001600160701b03199081166001600160701b0393841617909155600580549091169184169190911790555b600554600160701b90046001600160701b031681146114aa5760055460065461146d916001600160701b03600160701b918290048116926113e7929004168463ffffffff6124a416565b600680546001600160701b03928316600160701b908102600160701b600160e01b0319928316179092556005805493851690920292169190911790555b600154600160b01b900460ff16156114c4576114c461250f565b50506001805460ff60a81b19169055565b600154600160a81b900460ff16156114ff5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b17905561151c8386612327565b611526838561234a565b801561159357604051637ed1f1dd60e01b81526001600160a01b03841690637ed1f1dd906115609033908990899088908890600401613280565b600060405180830381600087803b15801561157a57600080fd5b505af115801561158e573d6000803e3d6000fd5b505050505b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906115c4903090600401613243565b60206040518083038186803b1580156115dc57600080fd5b505afa1580156115f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611614919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161164991309101613243565b60206040518083038186803b15801561166157600080fd5b505afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611699919061317c565b6005549091506001600160701b0316821015806116c85750600554600160701b90046001600160701b03168110155b6116e45760405162461bcd60e51b81526004016104b990613372565b6005546001600160701b03168210156118a757600554600090611718908390600160701b90046001600160701b03166120c9565b905060008060008061172a32866109d9565b600554939750919550935091508490611752906001600160701b03168963ffffffff6120c916565b11156117705760405162461bcd60e51b81526004016104b990613372565b600254611786906001600160a01b031684612327565b81600281111561179257fe5b600654600160e01b900463ffffffff908116911614611848576001600160701b038111156117d25760405162461bcd60e51b81526004016104b9906135ae565b60068054600160701b600160e01b031916600160701b6001600160701b0384160217905581600281111561180257fe5b6006601c6101000a81548163ffffffff021916908363ffffffff1602179055506000805160206138178339815191528260405161183f919061332a565b60405180910390a15b600080516020613837833981519152600460009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168787338f604051611899969594939291906132cc565b60405180910390a150505050505b600554600160701b90046001600160701b0316811015611a68576005546000906118e19084906001600160701b031663ffffffff6120c916565b90506000806000806118f33286610b34565b60055493975091955093509150849061191c90600160701b90046001600160701b0316886120c9565b111561193a5760405162461bcd60e51b81526004016104b990613372565b600254611950906001600160a01b03168461234a565b81600281111561195c57fe5b600654600160e01b900463ffffffff908116911614611a09576001600160701b0381111561199c5760405162461bcd60e51b81526004016104b9906135ae565b600680546001600160701b0319166001600160701b0383161790558160028111156119c357fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915282604051611a00919061332a565b60405180910390a15b600080516020613837833981519152600360009054906101000a90046001600160a01b0316600460009054906101000a90046001600160a01b03168787338f604051611a5a969594939291906132cc565b60405180910390a150505050505b611a706125a4565b7f0b82e93068db15abd9fbb2682c65462ea8a0a10582dce93a5664818e296f54eb33868989604051611aa59493929190613257565b60405180910390a150506001805460ff60a81b191690555050505050565b6004546001600160a01b031681565b600154600090600160a81b900460ff1615611aff5760405162461bcd60e51b81526004016104b990613414565b6001805460ff60a81b1916600160a81b179055600480546040516370a0823160e01b81526000926001600160a01b03909216916370a0823191611b4491309101613243565b60206040518083038186803b158015611b5c57600080fd5b505afa158015611b70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b94919061317c565b600554909150600090611bb8908390600160701b90046001600160701b03166120c9565b90506000806000611bc932856109d9565b9298509094509092509050611bde8787612327565b600254611bf4906001600160a01b031684612327565b806002811115611c0057fe5b600654600160e01b900463ffffffff908116911614611cb6576001600160701b03821115611c405760405162461bcd60e51b81526004016104b9906135ae565b60068054600160701b600160e01b031916600160701b6001600160701b03851602179055806002811115611c7057fe5b6006601c6101000a81548163ffffffff021916908363ffffffff16021790555060008051602061381783398151915281604051611cad919061332a565b60405180910390a15b6003546040516370a0823160e01b8152611d3e916001600160a01b0316906370a0823190611ce8903090600401613243565b60206040518083038186803b158015611d0057600080fd5b505afa158015611d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d38919061317c565b86612417565b600454600354604051600080516020613837833981519152926111d0926001600160a01b039182169291169088908b9033908e906132cc565b6006546001600160701b031681565b60095467ffffffffffffffff1681565b60006109d4611da3610e65565b61276c565b6000546001600160a01b03163314611dd25760405162461bcd60e51b81526004016104b9906135d0565b600080546040516001600160a01b03808516939216917fdcf55418cee3220104fef63f979ff3c4097ad240c0c43dcb33ce837748983e6291a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6008546001600160a01b031681565b600954600160401b90046001600160801b031681565b6000806000806000806000611e65612f80565b611e6d610e65565b905080600001519750806020015196508060400151955080606001519450806080015193508060a0015192508060c001516002811115611ea957fe5b91505090919293949596565b60075481565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611eec903090600401613243565b60206040518083038186803b158015611f0457600080fd5b505afa158015611f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3c919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a0823191611f7191309101613243565b60206040518083038186803b158015611f8957600080fd5b505afa158015611f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc1919061317c565b90506001600160701b038211801590611fe157506001600160701b038111155b611ffd5760405162461bcd60e51b81526004016104b9906135ae565b600580546001600160701b03838116600160701b02600160701b600160e01b03199186166001600160701b031993841681178316821790945560068054909316909317169091176001600160e01b0316905560015460ff600160b01b909104161561206a5761206a61250f565b5050565b6120c48363a9059cbb60e01b848460405160240161208d929190613306565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612863565b505050565b6000828211156120eb5760405162461bcd60e51b81526004016104b9906134cb565b508082035b92915050565b600080808460c00151600281111561210a57fe5b14156121255761211a8484612920565b9150600190506121f5565b60018460c00151600281111561213757fe5b14156121475761211a8484612947565b600061216485606001518660a001516120c990919063ffffffff16565b90506000612183866080015187604001516120c990919063ffffffff16565b9050818510156121ae576121978686612964565b935060029250808411156121a9578093505b6121f2565b818514156121c257809350600092506121f2565b6121eb6121de876121d9888663ffffffff6120c916565b612920565b829063ffffffff61299f16565b9350600192505b50505b9250929050565b6000670de0b6b3a7640000612217848463ffffffff6124a416565b8161221e57fe5b049392505050565b600080808460c00151600281111561223a57fe5b14156122555761224a84846129c4565b9150600290506121f5565b60018460c00151600281111561226757fe5b141561231257600061228a856040015186608001516120c990919063ffffffff16565b905060006122a98660a0015187606001516120c990919063ffffffff16565b9050818510156122d4576122bd86866129e3565b935060019250808411156122cf578093505b61230b565b818514156122e8578093506000925061230b565b6123046121de876122ff888663ffffffff6120c916565b6129c4565b9350600292505b50506121f5565b61231c8484612a15565b946002945092505050565b801561206a5760035461206a906001600160a01b0316838363ffffffff61206e16565b801561206a5760045461206a906001600160a01b0316838363ffffffff61206e16565b60028160c00151600281111561237f57fe5b14156123be576123b481606001516123a8836080015184604001516120c990919063ffffffff16565b83516020850151612a34565b60a0820152612414565b60018160c0015160028111156123d057fe5b14156124145761240e81604001516123f98360a0015184606001516120c990919063ffffffff16565b835161240490612b5a565b8460200151612a34565b60808201525b50565b6001600160701b03821180159061243557506001600160701b038111155b6124515760405162461bcd60e51b81526004016104b9906135ae565b600580546001600160701b03838116600160701b02600160701b600160e01b03199186166001600160701b0319909316929092171617905560015460ff600160b01b909104161561206a5761206a61250f565b6000826124b3575060006120f0565b828202828482816124c057fe5b04146124de5760405162461bcd60e51b81526004016104b990613683565b9392505050565b60008082116125065760405162461bcd60e51b81526004016104b9906134a3565b81838161221e57fe5b60055463ffffffff42811691600160e01b9004811682039081161580159061254157506005546001600160701b031615155b801561255e5750600554600160701b90046001600160701b031615155b1561257e578063ffffffff16612572611d96565b60078054919092020190555b506005805463ffffffff909216600160e01b026001600160e01b03909216919091179055565b6003546040516370a0823160e01b81526000916001600160a01b0316906370a08231906125d5903090600401613243565b60206040518083038186803b1580156125ed57600080fd5b505afa158015612601573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612625919061317c565b600480546040516370a0823160e01b81529293506000926001600160a01b03909116916370a082319161265a91309101613243565b60206040518083038186803b15801561267257600080fd5b505afa158015612686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126aa919061317c565b90506001600160701b0382118015906126ca57506001600160701b038111155b6126e65760405162461bcd60e51b81526004016104b9906135ae565b6005546001600160701b0316821461271457600580546001600160701b0319166001600160701b0384161790555b600554600160701b90046001600160701b031681146127525760058054600160701b600160e01b031916600160701b6001600160701b038416021790555b600154600160b01b900460ff161561206a5761206a61250f565b600060028260c00151600281111561278057fe5b141561280b57606082015160a08301516000916127b6916127ac91906113e7908063ffffffff6124a416565b8460600151612b7b565b90506127f36127c98460200151836121fc565b60208501516127e790670de0b6b3a76400009063ffffffff6120c916565b9063ffffffff61299f16565b9050612803836000015182612b7b565b91505061285e565b6040820151608083015160009161283b9161283191906113e7908063ffffffff6124a416565b8460400151612b7b565b905061284e6127c98460200151836121fc565b90506128038360000151826121fc565b919050565b60006060836001600160a01b03168360405161287f9190613227565b6000604051808303816000865af19150503d80600081146128bc576040519150601f19603f3d011682016040523d82523d6000602084013e6128c1565b606091505b5091509150816128e35760405162461bcd60e51b81526004016104b99061346e565b80511561291a57808060200190518101906128fe9190613160565b61291a5760405162461bcd60e51b81526004016104b990613616565b50505050565b60006124de836080015184608001518461293d8760000151612b5a565b8760200151612b99565b60006124de836080015184604001518461293d8760000151612b5a565b60006124de8360a0015161298584866060015161299f90919063ffffffff16565b6060860151865161299590612b5a565b8760200151612e19565b6000828201838110156124de5760405162461bcd60e51b81526004016104b9906135f3565b60006124de8360a001518460a001518486600001518760200151612b99565b60006124de8360800151612a0484866040015161299f90919063ffffffff16565b604086015186516020880151612e19565b60006124de8360a0015184606001518486600001518760200151612b99565b600084612a4357506000612b52565b81612a6957612a62612a5584866121fc565b869063ffffffff61299f16565b9050612b52565b600080612a7f600485028663ffffffff6124a416565b905080612a9657670de0b6b3a76400009150612b16565b858187830281612aa257fe5b041415612add57612ad6612ad16ec097ce7bc90715b34b9f10000000006127e7848a028b63ffffffff6124e516565b612ef2565b9150612b16565b612b13612ad16ec097ce7bc90715b34b9f10000000006127e789612b07868d63ffffffff6124e516565b9063ffffffff6124a416565b91505b6000612b40670de0b6b3a76400006127e7612b37868363ffffffff6120c916565b88600202612b7b565b9050612b4c88826121fc565b93505050505b949350505050565b60006120f06ec097ce7bc90715b34b9f10000000008363ffffffff6124e516565b60006124de826113e785670de0b6b3a764000063ffffffff6124a416565b6000808611612bba5760405162461bcd60e51b81526004016104b9906133c4565b83612bc757506000612e10565b81612bf45784612bd784866121fc565b11612beb57612be683856121fc565b612bed565b845b9050612e10565b670de0b6b3a7640000821415612cb457600080612c17858763ffffffff6124a416565b905080612c275760009150612c80565b868188830281612c3357fe5b041415612c6357612c5c612c4d898063ffffffff6124a416565b8289029063ffffffff6124e516565b9150612c80565b612c7d886113e787612b0783838c8e63ffffffff6124a416565b91505b612cab612c9b83670de0b6b3a764000063ffffffff61299f16565b6113e7898563ffffffff6124a416565b92505050612e10565b6000612ce1612cc9858763ffffffff6124a416565b6127e789612b078a6113e7898463ffffffff6124a416565b90506000612d0187612b07670de0b6b3a76400008763ffffffff6120c916565b90506000828210612d1757508190036000612d1d565b50810360015b612d3582670de0b6b3a764000063ffffffff6124e516565b91506000612d6c612d596004612b07670de0b6b3a76400008a63ffffffff6120c916565b612d678c612b078a8f6121fc565b6121fc565b9050612d85612ad1826127e7868063ffffffff6124a416565b90506000612da66002612b07670de0b6b3a76400008a63ffffffff6120c916565b905060008315612dc757612dc0838663ffffffff6120c916565b9050612dda565b612dd7858463ffffffff61299f16565b90505b6000612de68284612f29565b90508b811115612e00576000975050505050505050612e10565b8b039650612e1095505050505050565b95945050505050565b6000808611612e3a5760405162461bcd60e51b81526004016104b9906133c4565b6000612e5c612e4f878763ffffffff6120c916565b859063ffffffff6124a416565b905082612e8357612e7b81670de0b6b3a764000063ffffffff6124e516565b915050612e10565b6000612ea2612e9c886113e78b8063ffffffff6124a416565b87612b7b565b90506000612eb085836121fc565b9050612ee56ec097ce7bc90715b34b9f10000000006113e785612b07856127e7670de0b6b3a76400008c63ffffffff6120c916565b9998505050505050505050565b80600160028204015b81811015612f2357809150600281828581612f1257fe5b040181612f1b57fe5b049050612efb565b50919050565b60006124de82612f4785670de0b6b3a764000063ffffffff6124a416565b9063ffffffff612f5316565b600080612f6084846124e5565b905082810284038015612f78575060010190506120f0565b5090506120f0565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160006002811115612fc257fe5b905290565b80356001600160a01b03811681146120f057600080fd5b600060208284031215612fef578081fd5b6124de8383612fc7565b60008060008060008060008060006101208a8c031215613017578485fd5b8935613022816137f3565b985060208a0135613032816137f3565b975060408a0135613042816137f3565b965060608a0135613052816137f3565b955060808a0135945060a08a0135613069816137f3565b935060c08a0135925060e08a013591506101008a013561308881613808565b809150509295985092959850929598565b6000806000606084860312156130ad578283fd5b83356130b8816137f3565b925060208401356130c8816137f3565b929592945050506040919091013590565b600080604083850312156130eb578182fd5b6130f58484612fc7565b946020939093013593505050565b600080600080600080600080610100898b03121561311f578384fd5b883561312a816137f3565b9a60208a01359a5060408a013599606081013599506080810135985060a0810135975060c0810135965060e00135945092505050565b600060208284031215613171578081fd5b81516124de81613808565b60006020828403121561318d578081fd5b5051919050565b6000806000806000608086880312156131ab578081fd5b85359450602086013593506131c38760408801612fc7565b9250606086013567ffffffffffffffff808211156131df578283fd5b81880189601f8201126131f0578384fd5b8035925081831115613200578384fd5b896020848301011115613211578384fd5b6020810194505050809150509295509295909350565b600082516132398184602087016137c7565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b0396871681529486166020860152604085019390935260608401919091528316608083015290911660a082015260c00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60208101613337836137bc565b825292915050565b600060208252825180602084015261335e8160408501602087016137c7565b601f01601f19169190910160400192915050565b60208082526011908201527011931054d217d313d05397d19052531151607a1b604082015260600190565b6020808252600d908201526c494e56414c49445f434c41494d60981b604082015260600190565b6020808252600e908201526d5441524745545f49535f5a45524f60901b604082015260600190565b6020808252600e908201526d495f4f55545f4f465f52414e474560901b604082015260600190565b60208082526009908201526814915153951490539560ba1b604082015260600190565b6020808252601a908201527f424153455f51554f54455f43414e5f4e4f545f42455f53414d45000000000000604082015260600190565b6020808252818101527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604082015260600190565b6020808252600e908201526d2224ab24a224a723afa2a92927a960911b604082015260600190565b60208082526009908201526829aaa12fa2a92927a960b91b604082015260600190565b60208082526010908201526f1113d113d7d25392551250531256915160821b604082015260600190565b6020808252601c908201527f524553455256455f414d4f554e545f49535f4e4f545f454e4f55474800000000604082015260600190565b6020808252600e908201526d4b5f4f55545f4f465f52414e474560901b604082015260600190565b60208082526018908201527f4c505f4645455f524154455f4f55545f4f465f52414e47450000000000000000604082015260600190565b6020808252600890820152674f564552464c4f5760c01b604082015260600190565b6020808252600990820152682727aa2fa7aba722a960b91b604082015260600190565b60208082526009908201526820a2222fa2a92927a960b91b604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252600990820152681554d157d49154d15560ba1b604082015260600190565b60208082526009908201526826aaa62fa2a92927a960b91b604082015260600190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a08301526136f160c08401516137bc565b60c083015292915050565b6001600160701b0391909116815260200190565b6001600160801b0391909116815260200190565b90815260200190565b918252602082015260400190565b8481526020810184905260808101613752846137bc565b604083015282606083015295945050505050565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b63ffffffff91909116815260200190565b67ffffffffffffffff91909116815260200190565b806003811061285e57fe5b60005b838110156137e25781810151838201526020016137ca565b8381111561291a5750506000910152565b6001600160a01b038116811461241457600080fd5b801515811461241457600080fdfedf176ad18be4f9f32efaa32f06e9d1175476504739a745f1399a6d3fa4b75917c2c0245e056d5fb095f04cd6373bc770802ebd1e6c918eb78fdef843cdb37b0fa264697066735822122078ef1b685fea409e11e1dc962cd769d9410ea3a2e771919afcdc33688e7d541d64736f6c63430006090033",
  "immutableReferences": {},
  "sourceMap": "388:1200:9:-:0;;;634:34:11;;;-1:-1:-1;;;;634:34:11;;;388:1200:9;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "388:1200:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:1018;;;;;;;;;:::i;:::-;;873:124:76;;;;;;;;;:::i;264:22::-;;;:::i;:::-;;;;;;;;;;;;;;;;5516:279:13;;;;;;;;;:::i;634:34:11:-;;;:::i;:::-;;;;;;;;735:178:13;;;:::i;:::-;;;;;;;;;722:27:11;;;:::i;919:227:13:-;;;;;;;;;:::i;756:26:11:-;;;:::i;1169:223:76:-;;;:::i;1494:92:9:-;;;:::i;:::-;;;;;;;;1196:150:13;;;:::i;:::-;;;;;;;;7099:777:12;;;;;;;;;:::i;:::-;;;;;;;;;;;1352:153:13;;;:::i;970:29:11:-;;;:::i;:::-;;;;;;;;6316:777:12;;;;;;;;;:::i;822:29:11:-;;;:::i;292:26:76:-;;;:::i;893:36:11:-;;;:::i;:::-;;;;;;;;4198:940:13;;;;;;;;;:::i;1323:358:11:-;;;:::i;:::-;;;;;;;;1191:27;;;:::i;:::-;;;;;;;;857:30;;;:::i;924:1116:12:-;;;;;;;;;:::i;1005:22:11:-;;;:::i;3421:771:13:-;;;:::i;3202:3058:12:-;;;;;;;;;:::i;788:27:11:-;;;:::i;2046:1150:12:-;;;;;;;;;:::i;936:28:11:-;;;:::i;1224:17::-;;;:::i;2175:123::-;;;:::i;1003:160:76:-;;;;;;;;;:::i;1140:40:11:-;;;:::i;1247:18::-;;;:::i;:::-;;;;;;;;1687:482;;;:::i;:::-;;;;;;;;;;;;;;1034:43;;;:::i;420:1018:9:-;701:16;711:5;701:9;:16::i;:::-;756:17;-1:-1:-1;;;;;736:37:9;:16;-1:-1:-1;;;;;736:37:9;;;728:76;;;;-1:-1:-1;;;728:76:9;;;;;;;;;;;;;;;;;814:12;:39;;-1:-1:-1;;;;;814:39:9;;;-1:-1:-1;;;;;;814:39:9;;;;;;;863:13;:41;;;;;;;;;;;915:12;:25;;;;;;;;;;;950:19;:51;;;;;;;;;;;;;;;1041:4;1028:17;;;1020:54;;;;-1:-1:-1;;;1020:54:9;;;;;;;;;1097:4;1092:1;:9;;1084:36;;;;-1:-1:-1;;;1084:36:9;;;;;;;;;1142:1;1138;:5;:18;;;;;1152:4;1147:1;:9;;1138:18;1130:45;;;;-1:-1:-1;;;1130:45:9;;;;;;;;;1185:13;:33;;-1:-1:-1;;;;1185:33:9;-1:-1:-1;;;1185:33:9;;;;;;;;;;;;;;;1228:3;:15;;-1:-1:-1;;1228:15:9;;;;;;;;-1:-1:-1;;;;;;;;1253:16:9;-1:-1:-1;;;;;;;;1253:16:9;;;;;;-1:-1:-1;1280:27:9;;-1:-1:-1;;;;1280:27:9;-1:-1:-1;;;1280:27:9;;;;;;;;;;;;;;;1317:71;;1332:22;:56;;-1:-1:-1;;;;;1332:56:9;1364:15;:23;;-1:-1:-1;;;1332:56:9;;;;1317:71;1407:24;:22;:24::i;:::-;420:1018;;;;;;;;;:::o;873:124:76:-;673:13;;-1:-1:-1;;;673:13:76;;;;672:14;664:43;;;;-1:-1:-1;;;664:43:76;;;;;;;;;958:4:::1;942:20:::0;;-1:-1:-1;;;;942:20:76::1;-1:-1:-1::0;;;942:20:76::1;::::0;;;972:18;;-1:-1:-1;;;;;972:18:76;;::::1;-1:-1:-1::0;;;;;;972:18:76;;::::1;::::0;;;::::1;::::0;;873:124::o;264:22::-;;;-1:-1:-1;;;;;264:22:76;;:::o;5516:279:13:-;515:9:80;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;;784:7:76;770:10:::1;-1:-1:-1::0;;;;;784:7:76;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:76::1;;;;;;;;;5678:12:13::2;::::0;-1:-1:-1;;;;;5661:30:13;;::::2;5678:12:::0;::::2;5661:30;::::0;::::2;::::0;:65:::2;;-1:-1:-1::0;5712:13:13::2;::::0;-1:-1:-1;;;;;5695:31:13;;::::2;5712:13:::0;::::2;5695:31;;5661:65;5653:87;;;;-1:-1:-1::0;;;5653:87:13::2;;;;;;;;;5750:38;-1:-1:-1::0;;;;;5750:26:13;::::2;5777:2:::0;5781:6;5750:38:::2;:26;:38;:::i;:::-;-1:-1:-1::0;;585:9:80;:17;;-1:-1:-1;;;;585:17:80;;;-1:-1:-1;5516:279:13:o;634:34:11:-;;;-1:-1:-1;;;634:34:11;;;;;:::o;735:178:13:-;852:14;;-1:-1:-1;;;;;852:14:13;;;;-1:-1:-1;;;891:15:13;;;;;735:178::o;722:27:11:-;;;-1:-1:-1;;;;;722:27:11;;:::o;919:227:13:-;1068:13;;1103:36;;-1:-1:-1;;;1103:36:13;;1068:13;-1:-1:-1;;;1068:13:13;;;;1004:17;;-1:-1:-1;;;;;1103:19:13;;;;:30;;:36;;1134:4;;1103:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:48;;919:227;;;:::o;756:26:11:-;;;-1:-1:-1;;;;;756:26:11;;:::o;1169:223:76:-;1234:11;;-1:-1:-1;;;;;1234:11:76;1220:10;:25;1212:51;;;;-1:-1:-1;;;1212:51:76;;;;;;;;;1308:11;;;1299:7;;1278:42;;-1:-1:-1;;;;;1308:11:76;;;;1299:7;;;;1278:42;;;1340:11;;;;1330:21;;-1:-1:-1;;;;;;1330:21:76;;;-1:-1:-1;;;;;1340:11:76;;1330:21;;;;1361:24;;;1169:223::o;1494:92:9:-;1561:18;;;;;;;;;;;;-1:-1:-1;;;1561:18:9;;;;1494:92;;:::o;1196:150:13:-;1323:14;;1273:12;;:37;;-1:-1:-1;;;1273:37:13;;1241:13;;1273:66;;-1:-1:-1;;;;;1323:14:13;;;;-1:-1:-1;;;;;1273:12:13;;;;:22;;:37;;1304:4;;1273:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:41;:66;:41;:66;:::i;:::-;1266:73;;1196:150;:::o;7099:777:12:-;7221:25;7260:13;7287:27;7328:22;7375:32;;:::i;:::-;7410:13;:11;:13::i;:::-;7375:48;;7466;7492:5;7499:14;7466:25;:48::i;:::-;7545:13;;7588:38;;-1:-1:-1;;;7588:38:12;;7433:81;;-1:-1:-1;7433:81:12;;-1:-1:-1;7545:13:12;-1:-1:-1;;;7545:13:12;;;;7525:17;;-1:-1:-1;;;;;7588:19:12;;:30;;:38;;7619:6;;7588:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7568:58;;7644:50;7665:17;7684:9;7644:20;:50::i;:::-;7636:58;;7724:110;7828:5;7724:86;7759:50;7780:17;7799:9;7759:20;:50::i;:::-;7724:17;;:86;:34;:86;:::i;:110::-;7704:130;;7861:5;:8;;;7844:25;;7099:777;;;;;;;;;;:::o;1352:153:13:-;1481:15;;1430:13;;;:38;;-1:-1:-1;;;1430:38:13;;1398:13;;1430:68;;-1:-1:-1;;;1481:15:13;;;-1:-1:-1;;;;;1481:15:13;;-1:-1:-1;;;;;1430:13:13;;:23;;:38;;1462:4;;1430:38;;;970:29:11;;;-1:-1:-1;;;970:29:11;;-1:-1:-1;;;;;970:29:11;;:::o;6316:777:12:-;6436:26;6476:13;6503:27;6544:21;6590:32;;:::i;:::-;6625:13;:11;:13::i;:::-;6590:48;;6682:46;6707:5;6714:13;6682:24;:46::i;:::-;6759:13;;6802:38;;-1:-1:-1;;;6802:38:12;;6648:80;;-1:-1:-1;6648:80:12;;-1:-1:-1;6759:13:12;-1:-1:-1;;;6759:13:12;;;;6739:17;;-1:-1:-1;;;;;6802:19:12;;:30;;:38;;6833:6;;6802:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6782:58;;6858:51;6879:18;6899:9;6858:20;:51::i;:::-;6850:59;;6940:112;7046:5;6940:88;6976:51;6997:18;7017:9;6976:20;:51::i;6940:112::-;6919:133;;7078:5;:8;;;7062:24;;6316:777;;;;;;;;;;:::o;822:29:11:-;;;-1:-1:-1;;;;;822:29:11;;:::o;292:26:76:-;;;-1:-1:-1;;;;;292:26:76;;:::o;893:36:11:-;;;-1:-1:-1;;;893:36:11;;;;;:::o;4198:940:13:-;515:9:80;;4489:4:13;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;;784:7:76;770:10:::1;-1:-1:-1::0;;;;;784:7:76;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:76::1;;;;;;;;;4526:14:13::2;::::0;-1:-1:-1;;;;;4526:14:13::2;:32:::0;-1:-1:-1;4526:32:13;::::2;::::0;:70:::2;;-1:-1:-1::0;4562:15:13::2;::::0;-1:-1:-1;;;4562:15:13;::::2;-1:-1:-1::0;;;;;4562:15:13::2;-1:-1:-1::0;;4562:34:13::2;4526:70;4505:145;;;;-1:-1:-1::0;;;4505:145:13::2;;;;;;;;;4684:4;4668:12;:20;;4660:57;;;;-1:-1:-1::0;;;4660:57:13::2;;;;;;;;;4743:4;4735;:12;;4727:39;;;;-1:-1:-1::0;;;4727:39:13::2;;;;;;;;;4791:1;4784:4;:8;:24;;;;;4804:4;4796;:12;;4784:24;4776:51;;;;-1:-1:-1::0;;;4776:51:13::2;;;;;;;;;4837:13;:36:::0;;-1:-1:-1;;;;4837:36:13::2;-1:-1:-1::0;;;4837:36:13::2;::::0;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;4883:3:::2;:18:::0;;-1:-1:-1;;4883:18:13::2;::::0;;::::2;::::0;;;::::2;-1:-1:-1::0;;;;;;;;4911:19:13::2;-1:-1:-1::0;;;;;;;;4911:19:13;::::2;;;::::0;;4940:40:::2;4957:7:::0;4966:13;4940:16:::2;:40::i;:::-;4990:42;5008:7;5017:14;4990:17;:42::i;:::-;5042:24;:22;:24::i;:::-;5081:29;5097:12;5081:29;;;;;;;;;;;;;;;-1:-1:-1::0;;5127:4:13::2;585:17:80::0;;-1:-1:-1;;;;585:17:80;;;5127:4:13;4198:940;-1:-1:-1;;;;;;;4198:940:13:o;1323:358:11:-;1367:32;;:::i;:::-;1421:3;;-1:-1:-1;;;1421:3:11;;-1:-1:-1;;;;;1421:3:11;1411:13;;1444:3;;1434:7;;;:13;1467:14;;-1:-1:-1;;;;;1467:14:11;;;1457:7;;;:24;-1:-1:-1;;;1501:15:11;;;;;;1491:7;;;:25;1537:13;;;;;1526:8;;;:24;1571:14;;;;1560:8;;;:25;-1:-1:-1;;;1623:8:11;;;;1605:27;;;;;;;;1595:5;:7;;:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1642:32:11;1668:5;1642:25;:32::i;1191:27::-;;;-1:-1:-1;;;1191:27:11;;;;;:::o;857:30::-;;;-1:-1:-1;;;857:30:11;;-1:-1:-1;;;;;857:30:11;;:::o;924:1116:12:-;515:9:80;;1013:26:12;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;1077:12:12::1;::::0;:37:::1;::::0;-1:-1:-1;;;1077:37:12;;548:16:80;;-1:-1:-1;;;;;1077:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;1108:4:::1;::::0;1077:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1168:14;::::0;1055:59;;-1:-1:-1;1124:17:12::1;::::0;1144:40:::1;::::0;1055:59;;-1:-1:-1;;;;;1168:14:12::1;1144:40;:15;:40;:::i;:::-;1124:60;;1194:13;1217:21:::0;1248:27:::1;1341:35;1355:9;1366;1341:13;:35::i;:::-;1285:91:::0;;-1:-1:-1;1285:91:12;;-1:-1:-1;1285:91:12;;-1:-1:-1;1285:91:12;-1:-1:-1;1387:41:12::1;1405:2:::0;1285:91;1387:17:::1;:41::i;:::-;1456:12;::::0;1438:38:::1;::::0;-1:-1:-1;;;;;1456:12:12::1;1470:5:::0;1438:17:::1;:38::i;:::-;1543:9;1536:17;;;;;;;;1524:8;::::0;-1:-1:-1;;;1524:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;1520:239;;-1:-1:-1::0;;;;;1577:28:12;::::1;;1569:48;;;;-1:-1:-1::0;;;1569:48:12::1;;;;;;;;;1631:13;:38:::0;;-1:-1:-1;;;;;;1631:38:12::1;-1:-1:-1::0;;;;;1631:38:12;::::1;;::::0;;1701:9;1694:17:::1;::::0;::::1;;;;;;1683:8;;:28;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;1738:9:12::1;1730:18;;;;;;;;;;;;;;;1520:239;1794:13;::::0;;:38:::1;::::0;-1:-1:-1;;;1794:38:12;;1769:64:::1;::::0;1781:11;;-1:-1:-1;;;;;1794:13:12::1;::::0;:23:::1;::::0;:38:::1;::::0;1826:4:::1;::::0;1794:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1769:11;:64::i;:::-;1879:12;::::0;1914:13:::1;::::0;1849:184:::1;::::0;-1:-1:-1;;;;;;;;;;;1849:184:12;::::1;::::0;-1:-1:-1;;;;;1879:12:12;;::::1;::::0;1914:13;::::1;::::0;1942:9;;1965:18;;1997:10:::1;::::0;2021:2;;1849:184:::1;;;;;;;;;;-1:-1:-1::0;;585:9:80;:17;;-1:-1:-1;;;;585:17:80;;;-1:-1:-1;924:1116:12;;;-1:-1:-1;;;924:1116:12:o;1005:22:11:-;;;-1:-1:-1;;;1005:22:11;;;;;:::o;3421:771:13:-;515:9:80;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;;784:7:76;770:10:::1;-1:-1:-1::0;;;;;784:7:76;;::::1;770:21;762:43;;;;-1:-1:-1::0;;;762:43:76::1;;;;;;;;;3510:12:13::2;::::0;:37:::2;::::0;-1:-1:-1;;;3510:37:13;;3488:19:::2;::::0;-1:-1:-1;;;;;3510:12:13::2;::::0;:22:::2;::::0;:37:::2;::::0;3541:4:::2;::::0;3510:37:::2;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3580:13;::::0;;:38:::2;::::0;-1:-1:-1;;;3580:38:13;;3488:59;;-1:-1:-1;3557:20:13::2;::::0;-1:-1:-1;;;;;3580:13:13;;::::2;::::0;:23:::2;::::0;:38:::2;::::0;3612:4:::2;::::0;3580:38:::2;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3557:61:::0;-1:-1:-1;;;;;;3637:26:13;::::2;::::0;::::2;::::0;:57:::2;;-1:-1:-1::0;;;;;;3667:27:13;::::2;;3637:57;3629:78;;;;-1:-1:-1::0;;;3629:78:13::2;;;;;;;;;3737:14;::::0;-1:-1:-1;;;;;3737:14:13::2;3722:29:::0;::::2;3718:204;;3843:14;::::0;3799:13:::2;::::0;3791:68:::2;::::0;-1:-1:-1;;;;;3843:14:13;;::::2;::::0;3791:39:::2;::::0;3799:13:::2;3818:11:::0;3791:39:::2;:26;:39;:::i;:::-;:43:::0;:68:::2;:43;:68;:::i;:::-;3767:13;:93:::0;;-1:-1:-1;;;;;;3767:93:13;;::::2;-1:-1:-1::0;;;;;3767:93:13;;::::2;;::::0;;;3874:14:::2;:37:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;3718:204:::2;3951:15;::::0;-1:-1:-1;;;3951:15:13;::::2;-1:-1:-1::0;;;;;3951:15:13::2;3935:31:::0;::::2;3931:212;;4061:15;::::0;4015:14:::2;::::0;4007:71:::2;::::0;-1:-1:-1;;;;;;;;4061:15:13;;;::::2;::::0;::::2;::::0;4007:41:::2;::::0;4015:14;::::2;;4035:12:::0;4007:41:::2;:27;:41;:::i;:71::-;3982:14;:97:::0;;-1:-1:-1;;;;;3982:97:13;;::::2;-1:-1:-1::0;;;3982:97:13;;::::2;-1:-1:-1::0;;;;;;;;3982:97:13;;::::2;;::::0;;;4093:15:::2;:39:::0;;;;::::2;::::0;;::::2;::::0;::::2;::::0;;;::::2;::::0;;3931:212:::2;4156:14;::::0;-1:-1:-1;;;4156:14:13;::::2;;;4153:32;;;4172:13;:11;:13::i;:::-;-1:-1:-1::0;;585:9:80;:17;;-1:-1:-1;;;;585:17:80;;;3421:771:13:o;3202:3058:12:-;515:9:80;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;3374:37:12::1;3391:7:::0;3400:10;3374:16:::1;:37::i;:::-;3421:39;3439:7;3448:11;3421:17;:39::i;:::-;3475:15:::0;;3471:113:::1;;3504:80;::::0;-1:-1:-1;;;3504:80:12;;-1:-1:-1;;;;;3504:37:12;::::1;::::0;::::1;::::0;:80:::1;::::0;3542:10:::1;::::0;3554;;3566:11;;3579:4;;;;3504:80:::1;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3471:113;3617:12;::::0;:37:::1;::::0;-1:-1:-1;;;3617:37:12;;3595:19:::1;::::0;-1:-1:-1;;;;;3617:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;3648:4:::1;::::0;3617:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3687:13;::::0;;:38:::1;::::0;-1:-1:-1;;;3687:38:12;;3595:59;;-1:-1:-1;3664:20:12::1;::::0;-1:-1:-1;;;;;3687:13:12;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;3719:4:::1;::::0;3687:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3805:14;::::0;3664:61;;-1:-1:-1;;;;;;3805:14:12::1;3790:29:::0;::::1;;::::0;:64:::1;;-1:-1:-1::0;3839:15:12::1;::::0;-1:-1:-1;;;3839:15:12;::::1;-1:-1:-1::0;;;;;3839:15:12::1;3823:31:::0;::::1;;3790:64;3769:128;;;;-1:-1:-1::0;;;3769:128:12::1;;;;;;;;;3990:14;::::0;-1:-1:-1;;;;;3990:14:12::1;3976:28:::0;::::1;3972:1056;;;4066:15;::::0;4020:18:::1;::::0;4041:42:::1;::::0;:12;;-1:-1:-1;;;4066:15:12;::::1;-1:-1:-1::0;;;;;4066:15:12::1;4041:16;:42::i;:::-;4020:63;;4115:25;4158:13:::0;4189:27:::1;4234:22:::0;4273:37:::1;4288:9;4299:10;4273:14;:37::i;:::-;4379:14;::::0;4097:213;;-1:-1:-1;4097:213:12;;-1:-1:-1;4097:213:12;-1:-1:-1;4097:213:12;-1:-1:-1;4097:213:12;;4371:40:::1;::::0;-1:-1:-1;;;;;4379:14:12::1;4399:11:::0;4371:40:::1;:27;:40;:::i;:::-;:61;;4363:91;;;;-1:-1:-1::0;;;4363:91:12::1;;;;;;;;;4486:12;::::0;4469:37:::1;::::0;-1:-1:-1;;;;;4486:12:12::1;4500:5:::0;4469:16:::1;:37::i;:::-;4543:9;4536:17;;;;;;;;4524:8;::::0;-1:-1:-1;;;4524:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;4520:262;;-1:-1:-1::0;;;;;4581:29:12;::::1;;4573:49;;;;-1:-1:-1::0;;;4573:49:12::1;;;;;;;;;4640:14;:40:::0;;-1:-1:-1;;;;;;;;4640:40:12::1;-1:-1:-1::0;;;;;;;;4640:40:12;::::1;;;::::0;;4716:9;4709:17:::1;::::0;::::1;;;;;;4698:8;;:28;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;4757:9:12::1;4749:18;;;;;;;;;;;;;;;4520:262;-1:-1:-1::0;;;;;;;;;;;4834:13:12::1;;;;;;;;;-1:-1:-1::0;;;;;4834:13:12::1;4874:12;;;;;;;;;-1:-1:-1::0;;;;;4874:12:12::1;4905:10;4933:17;4968:10;4996:7;4800:217;;;;;;;;;;;;;;;;;;;;3972:1056;;;;;;5120:15;::::0;-1:-1:-1;;;5120:15:12;::::1;-1:-1:-1::0;;;;;5120:15:12::1;5105:30:::0;::::1;5101:1052;;;5195:14;::::0;5151:17:::1;::::0;5171:40:::1;::::0;:11;;-1:-1:-1;;;;;5195:14:12::1;5171:40;:15;:40;:::i;:::-;5151:60;;5243:26;5287:13:::0;5318:27:::1;5363:21:::0;5401:35:::1;5415:9;5426;5401:13;:35::i;:::-;5503:15;::::0;5225:211;;-1:-1:-1;5225:211:12;;-1:-1:-1;5225:211:12;-1:-1:-1;5225:211:12;-1:-1:-1;5225:211:12;;5495:42:::1;::::0;-1:-1:-1;;;5503:15:12;::::1;-1:-1:-1::0;;;;;5503:15:12::1;5524:12:::0;5495:28:::1;:42::i;:::-;:64;;5487:94;;;;-1:-1:-1::0;;;5487:94:12::1;;;;;;;;;5614:12;::::0;5596:38:::1;::::0;-1:-1:-1;;;;;5614:12:12::1;5628:5:::0;5596:17:::1;:38::i;:::-;5671:9;5664:17;;;;;;;;5652:8;::::0;-1:-1:-1;;;5652:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;5648:259;;-1:-1:-1::0;;;;;5709:28:12;::::1;;5701:48;;;;-1:-1:-1::0;;;5701:48:12::1;;;;;;;;;5767:13;:38:::0;;-1:-1:-1;;;;;;5767:38:12::1;-1:-1:-1::0;;;;;5767:38:12;::::1;;::::0;;5841:9;5834:17:::1;::::0;::::1;;;;;;5823:8;;:28;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;5882:9:12::1;5874:18;;;;;;;;;;;;;;;5648:259;-1:-1:-1::0;;;;;;;;;;;5959:12:12::1;;;;;;;;;-1:-1:-1::0;;;;;5959:12:12::1;5998:13;;;;;;;;;-1:-1:-1::0;;;;;5998:13:12::1;6030:9;6057:18;6093:10;6121:7;5925:217;;;;;;;;;;;;;;;;;;;;5101:1052;;;;;;6163:7;:5;:7::i;:::-;6194:59;6208:10;6220:7;6229:10;6241:11;6194:59;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;585:9:80;:17;;-1:-1:-1;;;;585:17:80;;;-1:-1:-1;;;;;3202:3058:12:o;788:27:11:-;;;-1:-1:-1;;;;;788:27:11;;:::o;2046:1150:12:-;515:9:80;;2136:25:12;;-1:-1:-1;;;515:9:80;;;;514:10;506:32;;;;-1:-1:-1;;;506:32:80;;;;;;;;;560:4;548:16;;-1:-1:-1;;;;548:16:80;-1:-1:-1;;;548:16:80;;;2200:13:12::1;::::0;;:38:::1;::::0;-1:-1:-1;;;2200:38:12;;548:16:80;;-1:-1:-1;;;;;2200:13:12;;::::1;::::0;:23:::1;::::0;:38:::1;::::0;2232:4:::1;::::0;2200:38:::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:15;::::0;2177:61;;-1:-1:-1;2248:18:12::1;::::0;2269:42:::1;::::0;2177:61;;-1:-1:-1;;;2294:15:12;::::1;-1:-1:-1::0;;;;;2294:15:12::1;2269:16;:42::i;:::-;2248:63;;2321:13;2344:22:::0;2376:27:::1;2469:71;2497:9;2520:10;2469:14;:71::i;:::-;2413:127:::0;;-1:-1:-1;2413:127:12;;-1:-1:-1;2413:127:12;;-1:-1:-1;2413:127:12;-1:-1:-1;2551:39:12::1;2568:2:::0;2413:127;2551:16:::1;:39::i;:::-;2617:12;::::0;2600:37:::1;::::0;-1:-1:-1;;;;;2617:12:12::1;2631:5:::0;2600:16:::1;:37::i;:::-;2696:9;2689:17;;;;;;;;2677:8;::::0;-1:-1:-1;;;2677:8:12;::::1;:29;:8:::0;;::::1;:29:::0;::::1;;2673:242;;-1:-1:-1::0;;;;;2730:29:12;::::1;;2722:49;;;;-1:-1:-1::0;;;2722:49:12::1;;;;;;;;;2785:14;:40:::0;;-1:-1:-1;;;;;;;;2785:40:12::1;-1:-1:-1::0;;;;;;;;2785:40:12;::::1;;;::::0;;2857:9;2850:17:::1;::::0;::::1;;;;;;2839:8;;:28;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;2894:9:12::1;2886:18;;;;;;;;;;;;;;;2673:242;2937:12;::::0;:37:::1;::::0;-1:-1:-1;;;2937:37:12;;2925:64:::1;::::0;-1:-1:-1;;;;;2937:12:12::1;::::0;:22:::1;::::0;:37:::1;::::0;2968:4:::1;::::0;2937:37:::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976:12;2925:11;:64::i;:::-;3035:13;::::0;3071:12:::1;::::0;3005:184:::1;::::0;-1:-1:-1;;;;;;;;;;;3005:184:12;::::1;::::0;-1:-1:-1;;;;;3035:13:12;;::::1;::::0;3071:12;::::1;::::0;3098:10;;3122:17;;3153:10:::1;::::0;3177:2;;3005:184:::1;;936:28:11::0;;;-1:-1:-1;;;;;936:28:11;;:::o;1224:17::-;;;;;;:::o;2175:123::-;2219:16;2254:37;2277:13;:11;:13::i;:::-;2254:22;:37::i;1003:160:76:-;784:7;;-1:-1:-1;;;;;784:7:76;770:10;:21;762:43;;;;-1:-1:-1;;;762:43:76;;;;;;;;;1106:7:::1;::::0;;1080:44:::1;::::0;-1:-1:-1;;;;;1080:44:76;;::::1;::::0;1106:7;::::1;::::0;1080:44:::1;::::0;::::1;1134:11;:22:::0;;-1:-1:-1;;;;;;1134:22:76::1;-1:-1:-1::0;;;;;1134:22:76;;;::::1;::::0;;;::::1;::::0;;1003:160::o;1140:40:11:-;;;-1:-1:-1;;;;;1140:40:11;;:::o;1247:18::-;;;-1:-1:-1;;;1247:18:11;;-1:-1:-1;;;;;1247:18:11;;:::o;1687:482::-;1780:9;1803;1826;1849;1872:10;1896;1920:9;1954:32;;:::i;:::-;1989:13;:11;:13::i;:::-;1954:48;;2016:5;:7;;;2012:11;;2037:5;:7;;;2033:11;;2058:5;:7;;;2054:11;;2079:5;:7;;;2075:11;;2101:5;:8;;;2096:13;;2124:5;:8;;;2119:13;;2154:5;:7;;;2146:16;;;;;;;;2142:20;;1687:482;;;;;;;;:::o;1034:43::-;;;;:::o;2844:571:13:-;2919:12;;:37;;-1:-1:-1;;;2919:37:13;;2897:19;;-1:-1:-1;;;;;2919:12:13;;:22;;:37;;2950:4;;2919:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:13;;;:38;;-1:-1:-1;;;2989:38:13;;2897:59;;-1:-1:-1;2966:20:13;;-1:-1:-1;;;;;2989:13:13;;;;:23;;:38;;3021:4;;2989:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2966:61;-1:-1:-1;;;;;;3046:26:13;;;;;:57;;-1:-1:-1;;;;;;3076:27:13;;;3046:57;3038:78;;;;-1:-1:-1;;;3038:78:13;;;;;;;;;3135:14;:37;;-1:-1:-1;;;;;3182:39:13;;;-1:-1:-1;;;3182:39:13;-1:-1:-1;;;;;;;;3135:37:13;;;-1:-1:-1;;;;;;3135:37:13;;;;;3182:39;;;;;;;3231:13;:36;;;;;;;;3277:38;;;;-1:-1:-1;;;;;3325:40:13;;;-1:-1:-1;3379:14:13;;-1:-1:-1;;;3379:14:13;;;;3376:32;;;3395:13;:11;:13::i;:::-;2844:571;;:::o;804:205:81:-;916:86;936:5;966:23;;;991:2;995:5;943:58;;;;;;;;;;;;;;-1:-1:-1;;943:58:81;;;;;;;;;;;;;;-1:-1:-1;;;;;943:58:81;-1:-1:-1;;;;;;943:58:81;;;;;;;;;;916:19;:86::i;:::-;804:205;;;:::o;934:134:82:-;992:7;1024:1;1019;:6;;1011:28;;;;-1:-1:-1;;;1011:28:82;;;;;;;;;-1:-1:-1;1056:5:82;;;934:134;;;;;:::o;2690:1359:78:-;2808:25;;;2866:5;:7;;;:21;;;;;;;;;2862:1181;;;2923:42;2943:5;2950:14;2923:19;:42::i;:::-;2903:62;;2986:16;2979:23;;2862:1181;;;3034:16;3023:5;:7;;;:27;;;;;;;;;3019:1024;;;3086:44;3108:5;3115:14;3086:21;:44::i;3019:1024::-;3198:25;3226:21;3239:5;:7;;;3226:5;:8;;;:12;;:21;;;;:::i;:::-;3198:49;;3261:28;3292:21;3304:5;:8;;;3292:5;:7;;;:11;;:21;;;;:::i;:::-;3261:52;;3348:17;3331:14;:34;3327:706;;;3405:44;3427:5;3434:14;3405:21;:44::i;:::-;3385:64;;3474:16;3467:23;;3532:20;3512:17;:40;3508:127;;;3596:20;3576:40;;3508:127;3327:706;;;3677:17;3659:14;:35;3655:378;;;3734:20;3714:40;;3779:10;3772:17;;3655:378;;;3848:129;3894:65;3914:5;3921:37;:14;3940:17;3921:37;:18;:37;:::i;:::-;3894:19;:65::i;:::-;3848:20;;:129;:24;:129;:::i;:::-;3828:149;;4002:16;3995:23;;3655:378;3019:1024;;;2690:1359;;;;;:::o;445:125:73:-;513:7;556:6;539:13;:6;550:1;539:13;:10;:13;:::i;:::-;:24;;;;;;;445:125;-1:-1:-1;;;445:125:73:o;676:2008:78:-;792:26;;;851:5;:7;;;:21;;;;;;;;;847:1831;;;969:40;988:5;995:13;969:18;:40::i;:::-;948:61;;1030:16;1023:23;;847:1831;;;1078:16;1067:5;:7;;;:27;;;;;;;;;1063:1615;;;1110:24;1137:21;1150:5;:7;;;1137:5;:8;;;:12;;:21;;;;:::i;:::-;1110:48;;1172:29;1204:21;1216:5;:8;;;1204:5;:7;;;:11;;:21;;;;:::i;:::-;1172:53;;1350:16;1334:13;:32;1330:1137;;;1459:42;1480:5;1487:13;1459:20;:42::i;:::-;1438:63;;1526:16;1519:23;;1585:21;1564:18;:42;1560:398;;;1918:21;1897:42;;1560:398;1330:1137;;;1999:16;1982:13;:33;1978:489;;;2109:21;2088:42;;2155:10;2148:17;;1978:489;;;2284:127;2331:62;2350:5;2357:35;:13;2375:16;2357:35;:17;:35;:::i;:::-;2331:18;:62::i;2284:127::-;2263:148;;2436:16;2429:23;;1978:489;1063:1615;;;;;2588:42;2609:5;2616:13;2588:20;:42::i;:::-;2567:63;2651:16;;-1:-1:-1;676:2008:78;-1:-1:-1;;;676:2008:78:o;5188:157:13:-;5265:10;;5261:78;;5291:12;;:37;;-1:-1:-1;;;;;5291:12:13;5317:2;5321:6;5291:37;:25;:37;:::i;5351:159::-;5429:10;;5425:79;;5455:13;;:38;;-1:-1:-1;;;;;5455:13:13;5482:2;5486:6;5455:38;:26;:38;:::i;6928:588:78:-;7014:16;7003:5;:7;;;:27;;;;;;;;;6999:511;;;7057:169;7116:5;:7;;;7141:21;7153:5;:8;;;7141:5;:7;;;:11;;:21;;;;:::i;:::-;7180:7;;7205;;;;7057:41;:169::i;:::-;7046:8;;;:180;6999:511;;;7258:16;7247:5;:7;;;:27;;;;;;;;;7243:267;;;7301:198;7360:5;:7;;;7385:21;7397:5;:8;;;7385:5;:7;;;:11;;:21;;;;:::i;:::-;7452:7;;7424:36;;:27;:36::i;:::-;7478:5;:7;;;7301:41;:198::i;:::-;7290:8;;;:209;7243:267;6928:588;:::o;1995:307:13:-;-1:-1:-1;;;;;2086:26:13;;;;;:57;;-1:-1:-1;;;;;;2116:27:13;;;2086:57;2078:78;;;;-1:-1:-1;;;2078:78:13;;;;;;;;;2166:14;:37;;-1:-1:-1;;;;;2213:39:13;;;-1:-1:-1;;;2213:39:13;-1:-1:-1;;;;;;;;2166:37:13;;;-1:-1:-1;;;;;;2166:37:13;;;;;;;2213:39;;;;2166:37;2266:14;;-1:-1:-1;;;2266:14:13;;;;2263:32;;;2282:13;:11;:13::i;281:217:82:-;339:7;362:6;358:45;;-1:-1:-1;391:1:82;384:8;;358:45;425:5;;;429:1;425;:5;:1;448:5;;;;;:10;440:32;;;;-1:-1:-1;;;440:32:82;;;;;;;;;490:1;281:217;-1:-1:-1;;;281:217:82:o;504:138::-;562:7;593:1;589;:5;581:32;;;;-1:-1:-1;;;581:32:82;;;;;;;;;634:1;630;:5;;;;1560:384:13;1705:22;;1633:23;:15;:23;;;-1:-1:-1;;;1705:22:13;;;;1688:39;;;1741:15;;;;;;:38;;-1:-1:-1;1760:14:13;;-1:-1:-1;;;;;1760:14:13;:19;;1741:38;:62;;;;-1:-1:-1;1783:15:13;;-1:-1:-1;;;1783:15:13;;-1:-1:-1;;;;;1783:15:13;:20;;1741:62;1737:152;;;1867:11;1851:27;;:13;:11;:13::i;:::-;1819:28;:59;;1851:27;;;;1819:59;;;1737:152;-1:-1:-1;1898:22:13;:39;;;;;;-1:-1:-1;;;1898:39:13;-1:-1:-1;;;;;1898:39:13;;;;;;;;;1560:384::o;2308:530::-;2366:12;;:37;;-1:-1:-1;;;2366:37:13;;2344:19;;-1:-1:-1;;;;;2366:12:13;;:22;;:37;;2397:4;;2366:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2436:13;;;:38;;-1:-1:-1;;;2436:38:13;;2344:59;;-1:-1:-1;2413:20:13;;-1:-1:-1;;;;;2436:13:13;;;;:23;;:38;;2468:4;;2436:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:61;-1:-1:-1;;;;;;2501:26:13;;;;;:57;;-1:-1:-1;;;;;;2531:27:13;;;2501:57;2493:78;;;;-1:-1:-1;;;2493:78:13;;;;;;;;;2601:14;;-1:-1:-1;;;;;2601:14:13;2586:29;;2582:97;;2631:14;:37;;-1:-1:-1;;;;;;2631:37:13;-1:-1:-1;;;;;2631:37:13;;;;;2582:97;2708:15;;-1:-1:-1;;;2708:15:13;;-1:-1:-1;;;;;2708:15:13;2692:31;;2688:101;;2739:15;:39;;-1:-1:-1;;;;;;;;2739:39:13;-1:-1:-1;;;;;;;;2739:39:13;;;;;;2688:101;2802:14;;-1:-1:-1;;;2802:14:13;;;;2799:32;;;2818:13;:11;:13::i;7522:611:78:-;7589:7;7623:16;7612:5;:7;;;:27;;;;;;;;;7608:519;;;7715:7;;;;7701:8;;;;7655:9;;7667:66;;7688:35;;7715:7;7688:22;;7701:8;7688:22;:12;:22;:::i;:35::-;7725:5;:7;;;7667:20;:66::i;:::-;7655:78;;7751:66;7784:32;7805:5;:7;;;7814:1;7784:20;:32::i;:::-;7771:7;;;;7751:28;;387:6:73;;7751:28:78;:19;:28;:::i;:::-;:32;:66;:32;:66;:::i;:::-;7747:70;;7838:32;7859:5;:7;;;7868:1;7838:20;:32::i;:::-;7831:39;;;;;7608:519;7961:7;;;;7947:8;;;;7901:9;;7913:66;;7934:35;;7961:7;7934:22;;7947:8;7934:22;:12;:22;:::i;:35::-;7971:5;:7;;;7913:20;:66::i;:::-;7901:78;;7997:66;8030:32;8051:5;:7;;;8060:1;8030:20;:32::i;7997:66::-;7993:70;;8084:32;8105:5;:7;;;8114:1;8084:20;:32::i;7608:519::-;7522:611;;;:::o;2335:1027:81:-;2984:12;2998:23;3033:5;-1:-1:-1;;;;;3025:19:81;3045:4;3025:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2983:67;;;;3068:7;3060:52;;;;-1:-1:-1;;;3060:52:81;;;;;;;;;3127:17;;:21;3123:233;;3279:10;3268:30;;;;;;;;;;;;;;3260:85;;;;-1:-1:-1;;;3260:85:81;;;;;;;;;2335:1027;;;;:::o;4660:431:78:-;4796:7;4867:217;4925:5;:8;;;4951:5;:8;;;4977:14;5009:36;5037:5;:7;;;5009:27;:36::i;:::-;5063:5;:7;;;4867:40;:217::i;6439:432::-;6577:7;6648:216;6706:5;:8;;;6732:5;:7;;;6757:14;6789:36;6817:5;:7;;;6789:27;:36::i;5143:431::-;5281:7;5352:215;5396:5;:8;;;5422:27;5434:14;5422:5;:7;;;:11;;:27;;;;:::i;:::-;5467:7;;;;5520;;5492:36;;:27;:36::i;:::-;5546:5;:7;;;5352:26;:215::i;1074:157:82:-;1132:7;1163:5;;;1186:6;;;;1178:28;;;;-1:-1:-1;;;1178:28:82;;;;;;;;4101:553:78;4235:7;4460:187;4518:5;:8;;;4544:5;:8;;;4570:13;4601:5;:7;;;4626:5;:7;;;4460:40;:187::i;6033:400::-;6169:7;6241:185;6285:5;:8;;;6311:26;6323:13;6311:5;:7;;;:11;;:26;;;;:::i;:::-;6355:7;;;;6380;;6405;;;;6241:26;:185::i;5580:401::-;5716:7;5788:186;5846:5;:8;;;5872:5;:7;;;5897:13;5928:5;:7;;;5953:5;:7;;;5788:40;:186::i;1625:1082:72:-;1777:7;1800;1796:46;;-1:-1:-1;1830:1:72;1823:8;;1796:46;1855:6;1851:82;;1884:38;1891:30;1912:1;1915:5;1891:20;:30::i;:::-;1884:2;;:38;:6;:38;:::i;:::-;1877:45;;;;1851:82;2139:12;;2174:14;2175:1;:5;;2186:1;2174:14;:11;:14;:::i;:::-;2161:27;-1:-1:-1;2202:7:72;2198:267;;387:6:73;2225:22:72;;2198:267;;;2289:5;2283:2;2274:5;2269:2;:10;2268:17;;;;;;:26;2264:201;;;2317:49;:42;432:6:73;2317:20:72;2318:10;;;2334:2;2317:20;:16;:20;:::i;:42::-;:47;:49::i;:::-;2310:56;;2264:201;;;2404:50;:43;432:6:73;2404:21:72;2419:5;2404:10;:2;2411;2404:10;:6;:10;:::i;:::-;:14;:21;:14;:21;:::i;:50::-;2397:57;;2264:201;2474:15;2504:75;387:6:73;2504:54:72;2525:25;:4;387:6:73;2525:25:72;:8;:25;:::i;:::-;2552:1;2556;2552:5;2504:20;:54::i;:75::-;2474:105;;2667:33;2688:2;2692:7;2667:20;:33::i;:::-;2660:40;;;;;1625:1082;;;;;;;:::o;978:124:73:-;1042:7;1068:27;1076:6;1088;1068:27;:19;:27;:::i;711:126::-;779:7;805:25;828:1;805:18;:6;816;805:18;:10;:18;:::i;3534:2549:72:-;3705:7;3737:1;3732:2;:6;3724:33;;;;-1:-1:-1;;;3724:33:72;;;;;;;;;3771:10;3767:49;;-1:-1:-1;3804:1:72;3797:8;;3767:49;3830:6;3826:117;;3892:2;3859:30;3880:1;3883:5;3859:20;:30::i;:::-;:35;:73;;3902:30;3923:1;3926:5;3902:20;:30::i;:::-;3859:73;;;3897:2;3859:73;3852:80;;;;3826:117;387:6:73;3957:1:72;:20;3953:696;;;4257:12;;4300;:1;4306:5;4300:12;:5;:12;:::i;:::-;4283:29;-1:-1:-1;4330:11:72;4326:249;;4368:1;4361:8;;4326:249;;;4420:2;4410:6;4404:2;4395:6;:11;4394:22;;;;;;:28;4390:185;;;4449:29;4467:10;4474:2;;4467:10;:6;:10;:::i;:::-;4450:11;;;;4449:29;:17;:29;:::i;:::-;4442:36;;4390:185;;;4524:36;4557:2;4524:28;4550:1;4524:21;4557:2;4524:28;:5;4534:2;4524:13;:9;:13;:::i;:36::-;4517:43;;4390:185;4595:43;4612:25;:4;387:6:73;4612:25:72;:8;:25;:::i;:::-;4595:12;:2;4602:4;4595:12;:6;:12;:::i;:43::-;4588:50;;;;;;3953:696;4964:13;4980:43;5010:12;:1;5016:5;5010:12;:5;:12;:::i;:::-;4980:25;5002:2;4980:17;4994:2;4980:9;:1;5002:2;4980:9;:5;:9;:::i;:43::-;4964:59;-1:-1:-1;5054:12:72;5069:30;5096:2;5069:22;387:6:73;5089:1:72;5069:22;:19;:22;:::i;:30::-;5054:45;;5121:9;5152:5;5144:4;:13;5140:164;;-1:-1:-1;5180:12:72;;;5213:5;5140:164;;;-1:-1:-1;5256:12:72;;5289:4;5140:164;5320:25;:4;387:6:73;5320:25:72;:8;:25;:::i;:::-;5313:32;-1:-1:-1;5382:18:72;5415:134;5453:29;5480:1;5453:22;387:6:73;5473:1:72;5453:22;:19;:22;:::i;:29::-;5500:35;5532:2;5500:27;5521:1;5524:2;5500:20;:27::i;:35::-;5415:20;:134::i;:::-;5382:167;-1:-1:-1;5587:37:72;:30;5382:167;5587:14;5596:4;;5587:14;:8;:14;:::i;:37::-;5574:50;-1:-1:-1;5682:19:72;5704:29;5731:1;5704:22;387:6:73;5724:1:72;5704:22;:19;:22;:::i;:29::-;5682:51;;5753:17;5784:4;5780:130;;;5816:20;:10;5831:4;5816:20;:14;:20;:::i;:::-;5804:32;;5780:130;;;5879:20;:4;5888:10;5879:20;:8;:20;:::i;:::-;5867:32;;5780:130;5920:10;5933:43;5953:9;5964:11;5933:19;:43::i;:::-;5920:56;;5995:2;5990;:7;5986:91;;;6020:1;6013:8;;;;;;;;;;;5986:91;6059:7;;;-1:-1:-1;6052:14:72;;-1:-1:-1;;;;;;6052:14:72;3534:2549;;;;;;;;:::o;734:597::-;888:7;920:1;915:2;:6;907:33;;;;-1:-1:-1;;;907:33:72;;;;;;;;;950:18;971:17;977:10;:2;984;977:10;:6;:10;:::i;:::-;971:1;;:17;:5;:17;:::i;:::-;950:38;-1:-1:-1;1013:6:72;1009:75;;1042:31;:10;387:6:73;1042:31:72;:14;:31;:::i;:::-;1035:38;;;;;1009:75;1093:16;1112:44;1133:18;1148:2;1133:10;1140:2;;1133:10;:6;:10;:::i;:18::-;1153:2;1112:20;:44::i;:::-;1093:63;;1166:15;1184:33;1205:1;1208:8;1184:20;:33::i;:::-;1166:51;-1:-1:-1;1251:73:72;432:6:73;1251:51:72;1291:10;1251:35;1166:51;1251:22;387:6:73;1271:1:72;1251:22;:19;:22;:::i;:73::-;1244:80;734:597;-1:-1:-1;;;;;;;;;734:597:72:o;1237:198:82:-;1318:1;1326;1322;1318:5;;:9;1352:77;1363:1;1359;:5;1352:77;;;1384:1;1380:5;;1417:1;1412;1408;1404;:5;;;;;;:9;1403:15;;;;;;1399:19;;1352:77;;;1237:198;;;;:::o;843:129:73:-;910:7;936:29;963:1;936:18;:6;947;936:18;:10;:18;:::i;:::-;:26;:29;:26;:29;:::i;648:280:82:-;710:7;729:16;748:9;752:1;755;748:3;:9::i;:::-;729:28;-1:-1:-1;791:12:82;;;787:16;;817:13;;813:109;;-1:-1:-1;864:1:82;853:12;;-1:-1:-1;846:19:82;;813:109;-1:-1:-1;903:8:82;-1:-1:-1;896:15:82;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;33061:54;;35228:35;;35218:2;;35277:1;;35267:12;1044:241;;1148:2;1136:9;1127:7;1123:23;1119:32;1116:2;;;-1:-1;;1154:12;1116:2;1216:53;1261:7;1237:22;1216:53;;1292:1241;;;;;;;;;;1529:3;1517:9;1508:7;1504:23;1500:33;1497:2;;;-1:-1;;1536:12;1497:2;85:6;72:20;97:33;124:5;97:33;;;1588:63;-1:-1;1688:2;1727:22;;72:20;97:33;72:20;97:33;;;1696:63;-1:-1;1796:2;1835:22;;72:20;97:33;72:20;97:33;;;1804:63;-1:-1;1904:2;1943:22;;72:20;97:33;72:20;97:33;;;1912:63;-1:-1;2012:3;2052:22;;833:20;;-1:-1;2121:3;2161:22;;72:20;97:33;72:20;97:33;;;2130:63;-1:-1;2230:3;2270:22;;833:20;;-1:-1;2339:3;2379:22;;833:20;;-1:-1;2448:3;2485:22;;206:20;231:30;206:20;231:30;;;2457:60;;;;1491:1042;;;;;;;;;;;;2540:491;;;;2678:2;2666:9;2657:7;2653:23;2649:32;2646:2;;;-1:-1;;2684:12;2646:2;85:6;72:20;97:33;124:5;97:33;;;2736:63;-1:-1;2836:2;2875:22;;72:20;97:33;72:20;97:33;;;2640:391;;2844:63;;-1:-1;;;2944:2;2983:22;;;;833:20;;2640:391;3038:366;;;3159:2;3147:9;3138:7;3134:23;3130:32;3127:2;;;-1:-1;;3165:12;3127:2;3227:53;3272:7;3248:22;3227:53;;;3217:63;3317:2;3356:22;;;;833:20;;-1:-1;;;3121:283;3411:1121;;;;;;;;;3634:3;3622:9;3613:7;3609:23;3605:33;3602:2;;;-1:-1;;3641:12;3602:2;85:6;72:20;97:33;124:5;97:33;;;3693:63;3793:2;3832:22;;833:20;;-1:-1;3901:2;3940:22;;833:20;;4009:2;4048:22;;833:20;;-1:-1;4117:3;4157:22;;833:20;;-1:-1;4226:3;4266:22;;833:20;;-1:-1;4335:3;4375:22;;833:20;;-1:-1;4444:3;4484:22;833:20;;-1:-1;3596:936;-1:-1;;;3596:936;4539:257;;4651:2;4639:9;4630:7;4626:23;4622:32;4619:2;;;-1:-1;;4657:12;4619:2;354:6;348:13;366:30;390:5;366:30;;4803:263;;4918:2;4906:9;4897:7;4893:23;4889:32;4886:2;;;-1:-1;;4924:12;4886:2;-1:-1;981:13;;4880:186;-1:-1;4880:186;5073:741;;;;;;5247:3;5235:9;5226:7;5222:23;5218:33;5215:2;;;-1:-1;;5254:12;5215:2;846:6;833:20;5306:63;;5406:2;5449:9;5445:22;833:20;5414:63;;5532:53;5577:7;5514:2;5557:9;5553:22;5532:53;;;5522:63;;5650:2;5639:9;5635:18;5622:32;5674:18;;5666:6;5663:30;5660:2;;;-1:-1;;5696:12;5660:2;5781:6;5770:9;5766:22;536:3;529:4;521:6;517:17;513:27;503:2;;-1:-1;;544:12;503:2;587:6;574:20;564:30;;5674:18;606:6;603:30;600:2;;;-1:-1;;636:12;600:2;731:3;5406:2;711:17;672:6;697:32;;694:41;691:2;;;-1:-1;;738:12;691:2;5406;672:6;668:17;5724:74;;;;;;;;5209:605;;;;;;;;;16118:271;;6689:5;31770:12;6800:52;6845:6;6840:3;6833:4;6826:5;6822:16;6800:52;;;6864:16;;;;;16252:137;-1:-1;;16252:137;16396:222;-1:-1;;;;;33061:54;;;;6041:37;;16523:2;16508:18;;16494:124;16625:572;-1:-1;;;;;33061:54;;;5900:58;;33061:54;;;;17017:2;17002:18;;6041:37;17100:2;17085:18;;15715:37;17183:2;17168:18;;15715:37;;;;16844:3;16829:19;;16815:382;17204:676;;33072:42;;;;;32516:5;33061:54;5907:3;5900:58;15745:5;17624:2;17613:9;17609:18;15715:37;15745:5;17707:2;17696:9;17692:18;15715:37;17451:3;17744:2;17733:9;17729:18;17722:48;32055:6;17451:3;17440:9;17436:19;32043;34605:6;34600:3;32083:14;17440:9;32083:14;34582:30;34643:16;;;32083:14;34643:16;;;34636:27;;;;35038:7;35022:14;;;-1:-1;;35018:28;6476:39;;;17422:458;-1:-1;;;;17422:458;17887:796;-1:-1;;;;;33061:54;;;6041:37;;33061:54;;;18327:2;18312:18;;6041:37;18410:2;18395:18;;15715:37;;;;18493:2;18478:18;;15715:37;;;;33061:54;;18584:3;18569:19;;5900:58;33061:54;;;33072:42;18653:19;;6041:37;18162:3;18147:19;;18133:550;18690:333;-1:-1;;;;;33061:54;;;;6041:37;;19009:2;18994:18;;15715:37;18845:2;18830:18;;18816:207;19030:210;32600:13;;32593:21;6155:34;;19151:2;19136:18;;19122:118;19783:242;19920:2;19905:18;;34232:36;7360:5;34232:36;;;7314:3;7307:60;19891:134;;;;;20032:310;;20179:2;20200:17;20193:47;7677:5;31770:12;32055:6;20179:2;20168:9;20164:18;32043:19;7771:52;7816:6;32083:14;20168:9;32083:14;20179:2;7797:5;7793:16;7771:52;;;35038:7;35022:14;-1:-1;;35018:28;7835:39;;;;32083:14;7835:39;;20150:192;-1:-1;;20150:192;20349:416;20549:2;20563:47;;;8111:2;20534:18;;;32043:19;-1:-1;;;32083:14;;;8127:40;8186:12;;;20520:245;20772:416;20972:2;20986:47;;;8437:2;20957:18;;;32043:19;-1:-1;;;32083:14;;;8453:36;8508:12;;;20943:245;21195:416;21395:2;21409:47;;;8759:2;21380:18;;;32043:19;-1:-1;;;32083:14;;;8775:37;8831:12;;;21366:245;21618:416;21818:2;21832:47;;;9082:2;21803:18;;;32043:19;-1:-1;;;32083:14;;;9098:37;9154:12;;;21789:245;22041:416;22241:2;22255:47;;;9405:1;22226:18;;;32043:19;-1:-1;;;32083:14;;;9420:32;9471:12;;;22212:245;22464:416;22664:2;22678:47;;;9722:2;22649:18;;;32043:19;9758:28;32083:14;;;9738:49;9806:12;;;22635:245;22887:416;23087:2;23101:47;;;23072:18;;;32043:19;10093:34;32083:14;;;10073:55;10147:12;;;23058:245;23310:416;23510:2;23524:47;;;10398:2;23495:18;;;32043:19;-1:-1;;;32083:14;;;10414:37;10470:12;;;23481:245;23733:416;23933:2;23947:47;;;10721:1;23918:18;;;32043:19;-1:-1;;;32083:14;;;10736:32;10787:12;;;23904:245;24156:416;24356:2;24370:47;;;11038:2;24341:18;;;32043:19;-1:-1;;;32083:14;;;11054:39;11112:12;;;24327:245;24579:416;24779:2;24793:47;;;11363:2;24764:18;;;32043:19;11399:30;32083:14;;;11379:51;11449:12;;;24750:245;25002:416;25202:2;25216:47;;;11700:2;25187:18;;;32043:19;-1:-1;;;32083:14;;;11716:37;11772:12;;;25173:245;25425:416;25625:2;25639:47;;;12023:2;25610:18;;;32043:19;12059:26;32083:14;;;12039:47;12105:12;;;25596:245;25848:416;26048:2;26062:47;;;12356:1;26033:18;;;32043:19;-1:-1;;;32083:14;;;12371:31;12421:12;;;26019:245;26271:416;26471:2;26485:47;;;12672:1;26456:18;;;32043:19;-1:-1;;;32083:14;;;12687:32;12738:12;;;26442:245;26694:416;26894:2;26908:47;;;12989:1;26879:18;;;32043:19;-1:-1;;;32083:14;;;13004:32;13055:12;;;26865:245;27117:416;27317:2;27331:47;;;13306:2;27302:18;;;32043:19;13342:34;32083:14;;;13322:55;-1:-1;;;13397:12;;;13390:34;13443:12;;;27288:245;27540:416;27740:2;27754:47;;;13694:1;27725:18;;;32043:19;-1:-1;;;32083:14;;;13709:32;13760:12;;;27711:245;27963:416;28163:2;28177:47;;;14011:1;28148:18;;;32043:19;-1:-1;;;32083:14;;;14026:32;14077:12;;;28134:245;28386:331;;28567:3;28556:9;28552:19;28544:27;;14382:16;14376:23;15722:3;15715:37;14544:4;14537:5;14533:16;14527:23;14544:4;14608:3;14604:14;15715:37;14695:4;14688:5;14684:16;14678:23;14695:4;14759:3;14755:14;15715:37;14846:4;14839:5;14835:16;14829:23;14846:4;14910:3;14906:14;15715:37;14998:4;14991:5;14987:16;14981:23;14998:4;15062:3;15058:14;15715:37;15150:4;15143:5;15139:16;15133:23;15150:4;15214:3;15210:14;15715:37;34232:36;15301:4;15294:5;15290:16;15284:23;34232:36;;;15301:4;15375:3;15371:14;7307:60;28538:179;;;;;28724:222;-1:-1;;;;;32825:42;;;;15485:37;;28851:2;28836:18;;28822:124;28953:222;-1:-1;;;;;32941:46;;;;15605:37;;29080:2;29065:18;;29051:124;29182:222;15715:37;;;29309:2;29294:18;;29280:124;29411:333;15715:37;;;29730:2;29715:18;;15715:37;29566:2;29551:18;;29537:207;29751:576;15715:37;;;30137:2;30122:18;;15715:37;;;29972:3;29957:19;;34232:36;7360:5;34232:36;;;30230:2;30219:9;30215:18;7307:60;15745:5;30313:2;30302:9;30298:18;15715:37;29943:384;;;;;;;;30334:892;15715:37;;;30794:2;30779:18;;15715:37;;;;30877:2;30862:18;;15715:37;;;;30960:2;30945:18;;15715:37;;;;31043:3;31028:19;;15715:37;31127:3;31112:19;;15715:37;31211:3;31196:19;;15715:37;30629:3;30614:19;;30600:626;31233:218;33278:10;33267:22;;;;15953:36;;31358:2;31343:18;;31329:122;31458:218;33373:18;33362:30;;;;16070:36;;31583:2;31568:18;;31554:122;32626:130;32689:16;35140:1;35130:12;;35120:2;;35146:9;34678:268;34743:1;34750:101;34764:6;34761:1;34758:13;34750:101;;;34831:11;;;34825:18;34812:11;;;34805:39;34786:2;34779:10;34750:101;;;34866:6;34863:1;34860:13;34857:2;;;-1:-1;;34743:1;34913:16;;34906:27;34727:219;35169:117;-1:-1;;;;;33061:54;;35228:35;;35218:2;;35277:1;;35267:12;35293:111;35374:5;32600:13;32593:21;35352:5;35349:32;35339:2;;35395:1;;35385:12",
  "source": "/*\n\n    Copyright 2020 DODO ZOO.\n    SPDX-License-Identifier: Apache-2.0\n\n*/\n\npragma solidity 0.6.9;\npragma experimental ABIEncoderV2;\n\nimport {IFeeRateModel} from \"../../lib/FeeRateModel.sol\";\nimport {IERC20} from \"../../intf/IERC20.sol\";\nimport {DPPTrader} from \"./DPPTrader.sol\";\n\n/**\n * @title DODO PrivatePool\n * @author DODO Breeder\n *\n * @notice DODOPrivatePool initialization\n */\ncontract DPP is DPPTrader {\n    function init(\n        address owner,\n        address maintainer,\n        address baseTokenAddress,\n        address quoteTokenAddress,\n        uint256 lpFeeRate,\n        address mtFeeRateModel,\n        uint256 k,\n        uint256 i,\n        bool isOpenTWAP\n    ) external {\n        initOwner(owner);\n\n        require(baseTokenAddress != quoteTokenAddress, \"BASE_QUOTE_CAN_NOT_BE_SAME\");\n        _BASE_TOKEN_ = IERC20(baseTokenAddress);\n        _QUOTE_TOKEN_ = IERC20(quoteTokenAddress);\n\n        _MAINTAINER_ = maintainer;\n        _MT_FEE_RATE_MODEL_ = IFeeRateModel(mtFeeRateModel);\n        \n        require(lpFeeRate <= 1e18, \"LP_FEE_RATE_OUT_OF_RANGE\");\n        require(k <= 1e18, \"K_OUT_OF_RANGE\");\n        require(i > 0 && i <= 1e36, \"I_OUT_OF_RANGE\");\n        _LP_FEE_RATE_ = uint64(lpFeeRate);\n        _K_ = uint64(k);\n        _I_ = uint128(i);\n\n        _IS_OPEN_TWAP_ = isOpenTWAP;\n        if(isOpenTWAP) _BLOCK_TIMESTAMP_LAST_ = uint32(block.timestamp % 2**32);\n        \n        _resetTargetAndReserve();\n    }\n\n    // ============ Version Control ============\n\n    function version() external pure returns (string memory) {\n        return \"DPP 1.0.0\";\n    }\n}\n",
  "sourcePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
  "ast": {
    "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
    "exportedSymbols": {
      "DPP": [
        2142
      ]
    },
    "id": 2143,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2001,
        "literals": [
          "solidity",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "78:22:9"
      },
      {
        "id": 2002,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:9"
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol",
        "file": "../../lib/FeeRateModel.sol",
        "id": 2004,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 28381,
        "src": "136:57:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2003,
              "name": "IFeeRateModel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "144:13:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol",
        "file": "../../intf/IERC20.sol",
        "id": 2006,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 27444,
        "src": "194:45:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2005,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "202:6:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol",
        "file": "./DPPTrader.sol",
        "id": 2008,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 3250,
        "src": "240:42:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2007,
              "name": "DPPTrader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "248:9:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2010,
              "name": "DPPTrader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3249,
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DPPTrader_$3249",
                "typeString": "contract DPPTrader"
              }
            },
            "id": 2011,
            "nodeType": "InheritanceSpecifier",
            "src": "404:9:9"
          }
        ],
        "contractDependencies": [
          2524,
          3249,
          3900,
          28486,
          29341
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2009,
          "nodeType": "StructuredDocumentation",
          "src": "284:103:9",
          "text": " @title DODO PrivatePool\n @author DODO Breeder\n @notice DODOPrivatePool initialization"
        },
        "fullyImplemented": true,
        "id": 2142,
        "linearizedBaseContracts": [
          2142,
          3249,
          3900,
          2524,
          29341,
          28486
        ],
        "name": "DPP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2132,
              "nodeType": "Block",
              "src": "691:747:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "711:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2032,
                      "name": "initOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28440,
                      "src": "701:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2035,
                  "nodeType": "ExpressionStatement",
                  "src": "701:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2037,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "736:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2038,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "756:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424153455f51554f54455f43414e5f4e4f545f42455f53414d45",
                        "id": 2040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "775:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        },
                        "value": "BASE_QUOTE_CAN_NOT_BE_SAME"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        }
                      ],
                      "id": 2036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "728:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2042,
                  "nodeType": "ExpressionStatement",
                  "src": "728:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2043,
                      "name": "_BASE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2367,
                      "src": "814:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2045,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "836:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2044,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27443,
                        "src": "829:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27443_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:24:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "814:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27443",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "814:39:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2049,
                      "name": "_QUOTE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "863:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2051,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "886:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2050,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27443,
                        "src": "879:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27443_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "879:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "863:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27443",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "863:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "_MAINTAINER_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "915:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "maintainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2015,
                      "src": "930:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "915:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "915:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2059,
                      "name": "_MT_FEE_RATE_MODEL_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2385,
                      "src": "950:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "mtFeeRateModel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "986:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2060,
                        "name": "IFeeRateModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28337,
                        "src": "972:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRateModel_$28337_$",
                          "typeString": "type(contract IFeeRateModel)"
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:29:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "src": "950:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                      "typeString": "contract IFeeRateModel"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "950:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2066,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "1028:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1041:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1028:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4645455f524154455f4f55545f4f465f52414e4745",
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:26:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        },
                        "value": "LP_FEE_RATE_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1020:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:54:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2073,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "1092:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1097:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1092:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b5f4f55545f4f465f52414e4745",
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1103:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        },
                        "value": "K_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1084:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2080,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2027,
                            "src": "1138:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1142:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1138:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2083,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2027,
                            "src": "1147:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31653336",
                            "id": 2084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1152:4:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                              "typeString": "int_const 1000...(29 digits omitted)...0000"
                            },
                            "value": "1e36"
                          },
                          "src": "1147:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1138:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "495f4f55545f4f465f52414e4745",
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1158:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        },
                        "value": "I_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1130:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2090,
                      "name": "_LP_FEE_RATE_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2387,
                      "src": "1185:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2093,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "1208:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1201:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1201:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1185:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2097,
                      "name": "_K_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2389,
                      "src": "1228:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2100,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "1241:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1234:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2098,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1234:9:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1228:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:15:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2104,
                      "name": "_I_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2391,
                      "src": "1253:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2107,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "1267:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1259:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2105,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1253:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2111,
                      "name": "_IS_OPEN_TWAP_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "1280:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2112,
                      "name": "isOpenTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "1297:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1280:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:27:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2115,
                    "name": "isOpenTWAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2029,
                    "src": "1320:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "1317:71:9",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 2116,
                        "name": "_BLOCK_TIMESTAMP_LAST_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "1332:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2119,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1364:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1364:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_4294967296_by_1",
                                "typeString": "int_const 4294967296"
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1382:1:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 2122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1385:2:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "1382:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4294967296_by_1",
                                "typeString": "int_const 4294967296"
                              }
                            },
                            "src": "1364:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1357:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 2117,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1357:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "1332:56:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 2127,
                    "nodeType": "ExpressionStatement",
                    "src": "1332:56:9"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2129,
                      "name": "_resetTargetAndReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "1407:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "01a3c30b",
            "id": 2133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "443:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "maintainer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "466:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "494:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "528:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "lpFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "563:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "mtFeeRateModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "590:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "k",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "622:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "641:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "isOpenTWAP",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "660:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:248:9"
            },
            "returnParameters": {
              "id": 2031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:9"
            },
            "scope": 2142,
            "src": "420:1018:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "1551:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "44505020312e302e30",
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1568:11:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_93ba23fcf25eb25120fec70b9d084262490e03f0ca9e8862c9eaa2c840615060",
                      "typeString": "literal_string \"DPP 1.0.0\""
                    },
                    "value": "DPP 1.0.0"
                  },
                  "functionReturnParameters": 2137,
                  "id": 2139,
                  "nodeType": "Return",
                  "src": "1561:18:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "54fd4d50",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:2:9"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2141,
                  "src": "1536:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1535:15:9"
            },
            "scope": 2142,
            "src": "1494:92:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2143,
        "src": "388:1200:9"
      }
    ],
    "src": "78:1511:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPP.sol",
    "exportedSymbols": {
      "DPP": [
        2142
      ]
    },
    "id": 2143,
    "license": "Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2001,
        "literals": [
          "solidity",
          "0.6",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "78:22:9"
      },
      {
        "id": 2002,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "101:33:9"
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/lib/FeeRateModel.sol",
        "file": "../../lib/FeeRateModel.sol",
        "id": 2004,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 28381,
        "src": "136:57:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2003,
              "name": "IFeeRateModel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "144:13:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/intf/IERC20.sol",
        "file": "../../intf/IERC20.sol",
        "id": 2006,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 27444,
        "src": "194:45:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2005,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "202:6:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/niutaotao/projects/dodo/contractV2/contracts/DODOPrivatePool/impl/DPPTrader.sol",
        "file": "./DPPTrader.sol",
        "id": 2008,
        "nodeType": "ImportDirective",
        "scope": 2143,
        "sourceUnit": 3250,
        "src": "240:42:9",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 2007,
              "name": "DPPTrader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "248:9:9",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2010,
              "name": "DPPTrader",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3249,
              "src": "404:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DPPTrader_$3249",
                "typeString": "contract DPPTrader"
              }
            },
            "id": 2011,
            "nodeType": "InheritanceSpecifier",
            "src": "404:9:9"
          }
        ],
        "contractDependencies": [
          2524,
          3249,
          3900,
          28486,
          29341
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2009,
          "nodeType": "StructuredDocumentation",
          "src": "284:103:9",
          "text": " @title DODO PrivatePool\n @author DODO Breeder\n @notice DODOPrivatePool initialization"
        },
        "fullyImplemented": true,
        "id": 2142,
        "linearizedBaseContracts": [
          2142,
          3249,
          3900,
          2524,
          29341,
          28486
        ],
        "name": "DPP",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2132,
              "nodeType": "Block",
              "src": "691:747:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2013,
                        "src": "711:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2032,
                      "name": "initOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28440,
                      "src": "701:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:16:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2035,
                  "nodeType": "ExpressionStatement",
                  "src": "701:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2037,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "736:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2038,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "756:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "736:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424153455f51554f54455f43414e5f4e4f545f42455f53414d45",
                        "id": 2040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "775:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        },
                        "value": "BASE_QUOTE_CAN_NOT_BE_SAME"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_458ce6895c0ce7aa4ce9e6ec1f0484ea88cb6826e20afe0b4b3d9f39dc3294e0",
                          "typeString": "literal_string \"BASE_QUOTE_CAN_NOT_BE_SAME\""
                        }
                      ],
                      "id": 2036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "728:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:76:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2042,
                  "nodeType": "ExpressionStatement",
                  "src": "728:76:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2043,
                      "name": "_BASE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2367,
                      "src": "814:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2045,
                          "name": "baseTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2017,
                          "src": "836:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2044,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27443,
                        "src": "829:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27443_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "829:24:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "814:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27443",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2048,
                  "nodeType": "ExpressionStatement",
                  "src": "814:39:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2049,
                      "name": "_QUOTE_TOKEN_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2369,
                      "src": "863:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2051,
                          "name": "quoteTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2019,
                          "src": "886:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2050,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27443,
                        "src": "879:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27443_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "879:25:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27443",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "863:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27443",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 2054,
                  "nodeType": "ExpressionStatement",
                  "src": "863:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2055,
                      "name": "_MAINTAINER_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2365,
                      "src": "915:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "maintainer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2015,
                      "src": "930:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "915:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2058,
                  "nodeType": "ExpressionStatement",
                  "src": "915:25:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2059,
                      "name": "_MT_FEE_RATE_MODEL_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2385,
                      "src": "950:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2061,
                          "name": "mtFeeRateModel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2023,
                          "src": "986:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2060,
                        "name": "IFeeRateModel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28337,
                        "src": "972:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IFeeRateModel_$28337_$",
                          "typeString": "type(contract IFeeRateModel)"
                        }
                      },
                      "id": 2062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "972:29:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                        "typeString": "contract IFeeRateModel"
                      }
                    },
                    "src": "950:51:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFeeRateModel_$28337",
                      "typeString": "contract IFeeRateModel"
                    }
                  },
                  "id": 2064,
                  "nodeType": "ExpressionStatement",
                  "src": "950:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2066,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "1028:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1041:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1028:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c505f4645455f524154455f4f55545f4f465f52414e4745",
                        "id": 2069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:26:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        },
                        "value": "LP_FEE_RATE_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce10b682916fc19db5fe9c9be4fdc28f32583c88bc75e836e2a76d3ca27354d5",
                          "typeString": "literal_string \"LP_FEE_RATE_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1020:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2071,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:54:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2073,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "1092:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653138",
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1097:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1092:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4b5f4f55545f4f465f52414e4745",
                        "id": 2076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1103:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        },
                        "value": "K_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b781d558ff210b7e2730dcdeaa1856cfb8a2829cdae77e29b32a333a40f0db",
                          "typeString": "literal_string \"K_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2072,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1084:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2078,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2080,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2027,
                            "src": "1138:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1142:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1138:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2083,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2027,
                            "src": "1147:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31653336",
                            "id": 2084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1152:4:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                              "typeString": "int_const 1000...(29 digits omitted)...0000"
                            },
                            "value": "1e36"
                          },
                          "src": "1147:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1138:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "495f4f55545f4f465f52414e4745",
                        "id": 2087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1158:16:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        },
                        "value": "I_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c8c038d1413796c97f039db2ad94a6636b75516fc47edf3a2026b15917f7f73",
                          "typeString": "literal_string \"I_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 2079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1130:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2089,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:45:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2090,
                      "name": "_LP_FEE_RATE_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2387,
                      "src": "1185:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2093,
                          "name": "lpFeeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2021,
                          "src": "1208:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1201:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2091,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1201:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1201:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1185:33:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:33:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2097,
                      "name": "_K_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2389,
                      "src": "1228:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2100,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2025,
                          "src": "1241:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1234:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 2098,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1234:9:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1228:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:15:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2104,
                      "name": "_I_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2391,
                      "src": "1253:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2107,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "1267:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1259:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint128_$",
                          "typeString": "type(uint128)"
                        },
                        "typeName": {
                          "id": 2105,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1259:10:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1253:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "1253:16:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2111,
                      "name": "_IS_OPEN_TWAP_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "1280:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2112,
                      "name": "isOpenTWAP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2029,
                      "src": "1297:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1280:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:27:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2115,
                    "name": "isOpenTWAP",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2029,
                    "src": "1320:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2128,
                  "nodeType": "IfStatement",
                  "src": "1317:71:9",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 2116,
                        "name": "_BLOCK_TIMESTAMP_LAST_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "1332:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2119,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "1364:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1364:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_4294967296_by_1",
                                "typeString": "int_const 4294967296"
                              },
                              "id": 2123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1382:1:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3332",
                                "id": 2122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1385:2:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "1382:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4294967296_by_1",
                                "typeString": "int_const 4294967296"
                              }
                            },
                            "src": "1364:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1357:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 2117,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1357:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1357:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "1332:56:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 2127,
                    "nodeType": "ExpressionStatement",
                    "src": "1332:56:9"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2129,
                      "name": "_resetTargetAndReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3604,
                      "src": "1407:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1407:24:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:24:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "01a3c30b",
            "id": 2133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2013,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "443:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2015,
                  "mutability": "mutable",
                  "name": "maintainer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "466:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2017,
                  "mutability": "mutable",
                  "name": "baseTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "494:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2019,
                  "mutability": "mutable",
                  "name": "quoteTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "528:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "lpFeeRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "563:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2023,
                  "mutability": "mutable",
                  "name": "mtFeeRateModel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "590:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "k",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "622:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2027,
                  "mutability": "mutable",
                  "name": "i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "641:9:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2029,
                  "mutability": "mutable",
                  "name": "isOpenTWAP",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2133,
                  "src": "660:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2028,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "660:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:248:9"
            },
            "returnParameters": {
              "id": 2031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:9"
            },
            "scope": 2142,
            "src": "420:1018:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "1551:35:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "44505020312e302e30",
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1568:11:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_93ba23fcf25eb25120fec70b9d084262490e03f0ca9e8862c9eaa2c840615060",
                      "typeString": "literal_string \"DPP 1.0.0\""
                    },
                    "value": "DPP 1.0.0"
                  },
                  "functionReturnParameters": 2137,
                  "id": 2139,
                  "nodeType": "Return",
                  "src": "1561:18:9"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "54fd4d50",
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:2:9"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2136,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2141,
                  "src": "1536:13:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1535:15:9"
            },
            "scope": 2142,
            "src": "1494:92:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2143,
        "src": "388:1200:9"
      }
    ],
    "src": "78:1511:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.9+commit.3e3065ac.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-29T02:32:05.635Z",
  "devdoc": {
    "author": "DODO Breeder",
    "methods": {},
    "title": "DODO PrivatePool"
  },
  "userdoc": {
    "methods": {},
    "notice": "DODOPrivatePool initialization"
  }
}